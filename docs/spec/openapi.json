{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create and manage various types of loans such as personal, commercial, mortgage, line of credit, etc",
    "version" : "v9.0.0",
    "title" : "Loan creation"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v9.0.0/",
  "tags" : [ {
    "name" : "RETAIL"
  } ],
  "schemes" : [ "https" ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/holdings/loans/buyNowPayLater" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates a business banking loan for a single or joint customer",
        "description" : "Creates a business banking loan for a single customer or more than one customer(like a joint account relationship) with the customer identifier, customer role, loan currency details",
        "operationId" : "createBNPLLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BNPLLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBNPLLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/BNPLLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/balances" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieve the buy now pay later loan details",
        "description" : "Retrieves the loans details for a given customer id and alternate id or arrangementid of the buy now pay later loan.",
        "operationId" : "getLoanInformation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "alternateId",
          "in" : "query",
          "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanInformationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanInformationResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/cancellations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Performs the loan cancellation for buy now pay later service",
        "description" : "Performs the full loan cancellation incase of preshipment return of products under buy now pay later loan.",
        "operationId" : "cancelArrangement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Arrangement"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cancelArrangementResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/consumerLoans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates the creation of consumer loan for the given product",
        "description" : "creates a consumer loan for the given product",
        "operationId" : "createConsumerLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createConsumerLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/personalLoans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates the creation of consumer loan for the given product",
        "description" : "creates a consumer loan for the given product",
        "operationId" : "createpersonalLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createpersonalLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/vehicleLoans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates the creation of consumer loan for the given product",
        "description" : "creates a consumer loan for the given product",
        "operationId" : "createvehicleLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createvehicleLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates a loan for the given product",
        "description" : "Creates a loan for the given product",
        "operationId" : "createLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/simulations/paymentHolidays" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves payment holiday simulate details for the loan",
        "description" : "Retrieves payment holiday simulation details for the loan such as payment type, holiday date, original payment amount and new payment amount",
        "operationId" : "getPaymentHolidaySim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentHolidaySimResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentHolidaySimResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Simulate payment holiday activity for a loan account",
        "description" : "Simulate payment holiday activity for a loan account",
        "operationId" : "simulatePaymentHoliday",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PaymentHoliday"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "simulatePaymentHolidayResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentHolidayResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/renegotiations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform the renegotiation of the loan contract details",
        "description" : "Perform the renegotiation of the loan contract details such as payment frequency, interest rates, etc.",
        "operationId" : "updateLoanConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanConditions"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanConditionsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/accounts" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the account conditions of the loan",
        "description" : "Update the account conditions of the loan such as alternate references, posting restrictions, etc",
        "operationId" : "updateLoanAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanAccount"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanAccountResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanAccountResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/interestConditions" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the interest conditions of the loan",
        "description" : "Update the interest conditions of the loan such as interest rate, spread, margin etc",
        "operationId" : "updateLoanInterest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanInterest"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanInterestResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanInterestResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/chargeOffs" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Execute loan charge-off activity to charge-off account balance only",
        "description" : "Execute loan charge-off activity to charge-off account balance only",
        "operationId" : "createChargeOffActivity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChargeOffActivity"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createChargeOffActivityResponse",
            "schema" : {
              "$ref" : "#/definitions/ChargeOffActivityResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/disbursements" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Disburses the loan commitment amount",
        "description" : "Creates a disbursement of the given loan contracts commitment amount",
        "operationId" : "createLoanDisbursement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDisbursement"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDisbursementResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDisbursementResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/customers" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates the customer for the given loan contract",
        "description" : "Updates the customer for the given loan contract",
        "operationId" : "updateLoansCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoansCustomer"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoansCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/LoansCustomerResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/commitmentIncreases" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Increases the commitment amount of the given loan contract",
        "description" : "Increases the commitment amount of the loan",
        "operationId" : "updateLoanTopupAmount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanTopupAmount"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanTopupAmountResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanTopupAmountResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/commitmentDecreases" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Decreases the commitment amount of the given loan contract",
        "description" : "Decreases the commitment amount of the loan",
        "operationId" : "updateLoanDecreaseAmount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDecreaseAmount"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanDecreaseAmountResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDecreaseAmountResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/repaymentDates" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform repayment date change for the loan",
        "description" : "Perform repayment date change for the loan product with details like loan reference, product id , etc.",
        "operationId" : "updateRepaymentDate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentDate"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateRepaymentDateResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentDateResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/writeOffs/balances" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform a loan balance write off",
        "description" : "Perform a write off of the balances such as principal or interest or charge amount for the unpaid loans",
        "operationId" : "initiateWriteOffBalanceLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WriteOffBalanceLoans"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "initiateWriteOffBalanceLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/WriteOffBalanceLoansResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/writeOffs" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform a loan write off of balances and bills",
        "description" : "Perform a write off of the balances and bills such as principal or interest or charge amount for the unpaid loans",
        "operationId" : "initiateWriteOffLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WriteOffLoans"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "initiateWriteOffLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/WriteOffLoansResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/writeOffs/bills" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform a write off bills of unpaid loans",
        "description" : "Perform a write off of the bills such as interest or charge amount for the unpaid loans",
        "operationId" : "initiateWriteOffBillLoans",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WriteOffBillLoans"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "initiateWriteOffBillLoansResponse",
            "schema" : {
              "$ref" : "#/definitions/WriteOffBillLoansResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/linkedRateLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a personal loan account with linked rate",
        "description" : "Create a personal loan account with linked rate",
        "operationId" : "createLinkedRateLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LinkedRateLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLinkedRateLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/LinkedRateLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/commercialLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a commercial or business account",
        "description" : "Create a commercial or business account",
        "operationId" : "createCommercialLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CommercialLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCommercialLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/CommercialLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/mortgages" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a mortgage loan",
        "description" : "Create a mortgage loan",
        "operationId" : "createMortgage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Mortgage"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createMortgageResponse",
            "schema" : {
              "$ref" : "#/definitions/MortgageResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/creditLines" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create a lines of credit account",
        "description" : "Create a lines of credit account",
        "operationId" : "createCreditLine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConsumerLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCreditLineResponse",
            "schema" : {
              "$ref" : "#/definitions/ConsumerLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/facilities/installmentLoans" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create an installment loan for the given product",
        "description" : "Create an installment loan for the given product",
        "operationId" : "createInstallmentLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstallmentLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createInstallmentLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/InstallmentLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/fundsTransfer" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Create an account transfer",
        "description" : "Create an account transfer",
        "operationId" : "createFundsTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FundsTransfer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "FundsTransferResponse",
            "schema" : {
              "$ref" : "#/definitions/FundsTransferResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/holdings/loans/{loanId}/outstandingBills" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the outstanding amount to be paid for the given loan",
        "description" : "Retrieves the outstanding amount to be paid for a loan",
        "operationId" : "getLoanOutstandingBills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fileVersion",
          "in" : "query",
          "description" : "Indicates if the file is of type simulation or live",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "simulationReference",
          "in" : "query",
          "description" : "Indicates the reference id for simulation activity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentDate",
          "in" : "query",
          "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deferDate",
          "in" : "query",
          "description" : "Date that the payment has been deferred to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billedAmount",
          "in" : "query",
          "description" : "Indicates the bill amount",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "outstandingAmount",
          "in" : "query",
          "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "delinquentAmount",
          "in" : "query",
          "description" : "Indicates the bill amount during the ageing status(Bill which crossed the due date)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "property",
          "in" : "query",
          "description" : "Id of the product property",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billStatus",
          "in" : "query",
          "description" : "Indicates the status of a bill(Issued,Due,Ageing,Settled)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settlementStatus",
          "in" : "query",
          "description" : "Defines the status of the settlement for the incoming MT548 swift message.The values allowed are: Waiting : pending to receive settlement status update meaning pending to receive MT548 swift message,  Action required : awaiting action to be performed to get the final update on settlement status.Matched : transactions whose nominals have matched with the depository position",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agingStatus",
          "in" : "query",
          "description" : "Indicates the ageing status of a bill",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "settled",
          "in" : "query",
          "description" : "Identifies settled transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentType",
          "in" : "query",
          "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "billDate",
          "in" : "query",
          "description" : "Indicates a date on which a bill has been raised",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentMethod",
          "in" : "query",
          "description" : "Method chosen to make the payment",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "infoPayType",
          "in" : "query",
          "description" : "Indicates a bill which is raised when a loan is paid off",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "advancePayment",
          "in" : "query",
          "description" : "Indicates whether advance payment made is set on an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentIndicator",
          "in" : "query",
          "description" : "Indicates whether its a credit/debit type of bill",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanOutstandingBillsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanOutstandingBillsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/payoffCalculations" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the payoff details of the given loan",
        "description" : "Retrieves the payoff details of a loan",
        "operationId" : "getLoanPayoffDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanPayoffDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanPayoffDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/status" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the status of the given loan",
        "description" : "Retrieves the status of a loan",
        "operationId" : "getArrangementDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ArrangementDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/arrangements/activities/{arrangementActivityId}/status" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the status of the given activity ",
        "description" : "Retrieves the status of the given activity ",
        "operationId" : "getExternalEventStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementActivityId",
          "in" : "path",
          "description" : "Contains the arrangement activity reference identifier",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "ExternalEventStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/ExternalEventStatusResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/schedules" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves payment schedules details",
        "description" : "Retrieves the schedule payment information for paid and upcoming installments details",
        "operationId" : "getPaymentSchedulesProjection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSchedulesProjectionResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSchedulesProjectionResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/loanDetails" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves loan details ",
        "description" : "Retrieves the details of the given loan",
        "operationId" : "getLoanOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanOverviewResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanOverviewResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/bills" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves loan bills details",
        "description" : "Retrieves the simulation details of the contract based on the selection criteria. It returns the bill details of the loan",
        "operationId" : "getLoanBills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "billType",
          "in" : "query",
          "description" : "The type of payment obligation generated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentDate",
          "in" : "query",
          "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanBillsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanBillsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/collaterals" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves loan collateral details",
        "description" : "Retrieves the collateral details linked to the loan arrangement.",
        "operationId" : "getLoanCollaterals",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusNE",
          "in" : "query",
          "description" : "Status not equal to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanCollateralsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanCollateralsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves the loan account details",
        "description" : "Retrieves loan details",
        "operationId" : "getLoanDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "balanceTypes",
          "in" : "query",
          "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "LoanDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/holdings/loans/{loanId}/schedulePaymentFrequencies" : {
      "get" : {
        "tags" : [ ],
        "summary" : "Retrieves payment schedules details",
        "description" : "Retrieves the schedule payment information for paid and upcoming installments details",
        "operationId" : "getPaymentSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Start date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "End date of the loan",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "PaymentSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/PaymentSchedulesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/holdings/simulationCapture/{arrangementId}" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate payoff calculate activity for a loan arrangement",
        "description" : "Simulate payoff calculate activity for a loan arrangement",
        "operationId" : "createSimulationCaptures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SimulationCaptures"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSimulationCapturesResponse",
            "schema" : {
              "$ref" : "#/definitions/SimulationCapturesResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "arrangementId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/simulations" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create simulation for loan products",
        "description" : "Create a simulation for loan product with details like customer identifier, currency, etc.",
        "operationId" : "createLoanSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/simulations/{simulationId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update a simulation for loan products",
        "description" : "Update a simulation for loan product with details like customer identifier, currency, etc.",
        "operationId" : "updateLoanSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanSimulation1"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanSimulationResponse1"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "simulationId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/simulations/payoffs" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create simulation payoff activity for loan products",
        "description" : "Create a simulation payoff activity for loan product with product id details",
        "operationId" : "createLoanPayoffSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanPayoffSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanPayoffSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanPayoffSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/payoffs" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Execute payoff activity for loan products",
        "description" : "Execute payoff activity for loan product with details like simulation run reference, product id , etc.",
        "operationId" : "createLoanArrangementPayoff",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanArrangementPayoff"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanArrangementPayoffResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanArrangementPayoffResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/overpayments" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves overpayment details that has happened for a loan arrangement",
        "description" : "Retrieves the product id, type of overpay, overpay limit, overpay period, utilised overpay and remaining overpay limit of a loan arrangement",
        "operationId" : "getOverpaymentDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OverpaymentDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/OverpaymentDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/drawdowns/offers" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Creates a new drawdown offer for the required customer.",
        "description" : "Creates a new drawdown offer for the required customer.",
        "operationId" : "createLoanDrawdownOffer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOffer"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDrawdownOfferResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/drawdowns/acceptances" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Accept the offer drawdown for the retail loan and convert offer drawdown into a live loan arrangement.",
        "description" : "Accept the offer drawdown for the retail loan and convert offer drawdown into a live loan arrangement.",
        "operationId" : "createLoanDrawdownOfferAcceptance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOfferAcceptance"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDrawdownOfferAcceptanceResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferAcceptanceResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/drawdowns/renegotiations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Renegotiate the offer drawdown for the required customer.",
        "description" : "Renegotiate the offer drawdown for the retail loan and convert offer drawdown into live loan arrangement.",
        "operationId" : "createLoanDrawdownOfferRenegotiation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOfferRenegotiation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDrawdownOfferRenegotiationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferRenegotiationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/drawdowns/cancellations" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Cancellation of offer drawdown for the required customer.",
        "description" : "Cancellation of offer drawdown for the required customer.",
        "operationId" : "cancelLoanDrawdownOffer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOffer1"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "cancelLoanDrawdownOfferResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferResponse1"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/drawdowns/acceptances/schedules" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Accept the offer drawdown for the retail loan and convert offer drawdown into a live loan arrangement and retrieve the payment schedule details.",
        "description" : "Accept the offer drawdown for the retail loan and convert offer drawdown into a live loan arrangement and retrieve the payment schedule details.",
        "operationId" : "createLoanDrawdownOfferAcceptanceSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOfferAcceptance"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDrawdownOfferAcceptanceSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferAcceptanceResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/drawdowns/renegotiations/schedules" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Renegotiate the offer drawdown for the required customer and retrieve the payment schedule details.",
        "description" : "Renegotiate the offer drawdown for the retail loan and convert offer drawdown into live loan arrangement and retrieve the payment schedule details.",
        "operationId" : "createLoanDrawdownOfferRenegotiationSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanDrawdownOfferRenegotiation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanDrawdownOfferRenegotiationSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanDrawdownOfferRenegotiationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{LoanId}/settlements" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Updates the settlement condition of the loan",
        "description" : "Updates the settlement condition of the loan",
        "operationId" : "updateLoanSettlement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanSettlement"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateLoanSettlementResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanSettlementResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "LoanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/simulations/repayments" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate  the loan pre payment",
        "description" : "Simulate the pre payment of the given loan account",
        "operationId" : "createRepaymentSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createRepaymentSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/simulations/repayments/schedules" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate the pre payment of the given loan amount and retrieve the payment schedule",
        "description" : "Simulate the pre payment of the given loan amount and retrieve the payment schedule",
        "operationId" : "createRepaymentSchedule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createRepaymentScheduleResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/repaymentDates/schedules" : {
      "put" : {
        "tags" : [ ],
        "summary" : "Perform repayment date change for the loan and retrieve the payment schedule details.",
        "description" : "Perform repayment date change for the loan product and retrieve the payment schedule , interest details etc.",
        "operationId" : "updateRepaymentDateAndSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateRepaymentDateAndSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/simulations/repaymentDates" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate a loan arrangement for the given payment date",
        "description" : "Simulate a loan arrangement for the given payment date",
        "operationId" : "createRepaymentDateChangeSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentDateChangeSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createRepaymentDateChangeSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentDateChangeSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/simulations/repaymentDates/schedules" : {
      "post" : {
        "tags" : [ ],
        "summary" : "Simulate a loan arrangement for the given payment date and retrieve the payments schedule details.",
        "description" : "Simulate a loan arrangement for the given payment date and retrieve the payments schedule , interest details etc.",
        "operationId" : "createRepaymentDateChangeSimulationSchedules",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RepaymentDateChangeSimulationSchedules"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createRepaymentDateChangeSimulationSchedulesResponse",
            "schema" : {
              "$ref" : "#/definitions/RepaymentDateChangeSimulationSchedulesResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/migrations" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Migration of legacy system loan contract to the given product",
        "description" : "Migration of a legacy system loan contract to the given product by providing the original contract date, principal amount, term, payment frequency and start date, etc. ",
        "operationId" : "initiateTakeoverloan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Takeoverloan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "initiateTakeoverloanResponse",
            "schema" : {
              "$ref" : "#/definitions/TakeoverloanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/balances/migrations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Captures outstanding balance details of a contract migrated from legacy system",
        "description" : "Captures the balance details of the mortgage loan such as balance type, due amount etc. This is used to migrate the balances of a legacy contract which is migrated from other system & update the balance details.",
        "operationId" : "updateBalance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Balance"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBalanceResponse",
            "schema" : {
              "$ref" : "#/definitions/BalanceResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/bills/migrations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Captures outstanding bill information of a contract migrated from legacy system.",
        "description" : "Captures the bill information of the loan such as bill id, property names, bill amount etc. This is used to migrate the bills of a legacy contract which is migrated from other system & update the bill details",
        "operationId" : "updateBills",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Bills"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBillsResponse",
            "schema" : {
              "$ref" : "#/definitions/BillsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/products" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Change of contract from one loan product to another",
        "description" : "Change loan from one product to another such as changing one loan product to another loan product",
        "operationId" : "updateChangeProduct",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeProduct"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateChangeProductResponse",
            "schema" : {
              "$ref" : "#/definitions/ChangeProductResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/{loanId}/evidences" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the covenants and conditions for a loan account.",
        "description" : "Retrieves the covenants and conditions for a loan account. Covenants are requested in periodic basis and the Conditions are one-time evidence. On non-submission or non-compliance of the evidences, the related consequent activity will be restricted",
        "operationId" : "getEvidence",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "loanId",
          "in" : "path",
          "description" : "Denotes the arrangement id of the loan",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "EvidenceResponse",
            "schema" : {
              "$ref" : "#/definitions/EvidenceResponse1"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the covenants and conditions for a loan account",
        "description" : "Performs update of covenants and conditions for a loan account. Covenants are requested in periodic basis and the Conditions are one-time evidence. On non-submission or non-compliance of the evidences, the related consequent activity will be restricted",
        "operationId" : "updateEvidence",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Evidence"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateEvidenceResponse",
            "schema" : {
              "$ref" : "#/definitions/EvidenceResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/businessLoans" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates a business banking loan for a single customer or more than one customer(like a joint account relationship) with the customer identifier, customer role, loan currency details",
        "description" : "Creates a business banking loan for a single or joint customer",
        "operationId" : "createBusinessLoan",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BusinessLoan"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBusinessLoanResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessLoanResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/loans/{loanId}/autoSimulations/payoffs" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create auto simulation payoff activity for loan products",
        "description" : "Create auto simulation payoff activity for loan product with product id details",
        "operationId" : "createLoanPayoffAutoSimulation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoanPayoffAutoSimulation"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createLoanPayoffAutoSimulationResponse",
            "schema" : {
              "$ref" : "#/definitions/LoanPayoffAutoSimulationResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "loanId",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/holdings/loans/autoSimulations" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create online simulation for loan products",
        "description" : "Create a online simulation for loan product with details like customer identifier, currency, etc.",
        "operationId" : "createAutoSimulations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoSimulations"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createAutoSimulationsResponse",
            "schema" : {
              "$ref" : "#/definitions/AutoSimulationsResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "apikey",
      "in" : "header"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "BNPLLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BNPLLoanBody"
        }
      },
      "description" : "BNPLLoan"
    },
    "BNPLLoanBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "alternateId" : {
          "type" : "string",
          "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
          "minLength" : 0,
          "maxLength" : 50
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "channel" : {
          "type" : "string",
          "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
          "minLength" : 0,
          "maxLength" : 30
        },
        "branch" : {
          "type" : "string",
          "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant",
          "minLength" : 0,
          "maxLength" : 16
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant",
          "minLength" : 0,
          "maxLength" : 4
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "aprTypes" : {
                "type" : "array",
                "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "aprType" : {
                      "type" : "string",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "aprRate" : {
                      "type" : "string",
                      "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to respond by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "BNPLLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BNPLLoanResponseBody"
        }
      },
      "description" : "BNPLLoanResponse"
    },
    "BNPLLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "alternateId" : {
              "type" : "string",
              "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
              "minLength" : 0,
              "maxLength" : 50
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "channel" : {
              "type" : "string",
              "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
              "minLength" : 0,
              "maxLength" : 30
            },
            "branch" : {
              "type" : "string",
              "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant",
              "minLength" : 0,
              "maxLength" : 16
            },
            "lineOfBusiness" : {
              "type" : "string",
              "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant",
              "minLength" : 0,
              "maxLength" : 4
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "accreporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              },
              "property" : {
                "type" : "string",
                "description" : "Id of the product property"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to respond by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
        }
      }
    },
    "LoanInformationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanInformationResponseBody"
        }
      },
      "description" : "LoanInformationResponse"
    },
    "LoanInformationResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 17
          },
          "loanAccountId" : {
            "type" : "string",
            "description" : "Indicates the loan account id of an individual customer.",
            "maxLength" : 35
          },
          "loanProduct" : {
            "type" : "string",
            "description" : "The loan account product",
            "maxLength" : 30
          },
          "loanCurrency" : {
            "type" : "string",
            "description" : "Indicates the currency of the loan",
            "maxLength" : 3
          },
          "loanAmount" : {
            "type" : "number",
            "description" : "Indicates loan amount"
          },
          "loanBalance" : {
            "type" : "number",
            "description" : "Indicates the outstanding balance of the loan"
          },
          "loanInterestRate" : {
            "type" : "string",
            "description" : "Indicates the interest rate of the loan"
          },
          "loanInterestType" : {
            "type" : "string",
            "description" : "Indicates the interest rate type - Eg. Fixed, floating, periodic"
          },
          "loanStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan commencement date"
          },
          "loanNextPayDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the next payment date for the loan"
          },
          "loanEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the loan maturity date"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "customerShortName" : {
            "type" : "string",
            "description" : "Indicates the short name of Customer",
            "maxLength" : 10
          },
          "roleDisplayName" : {
            "type" : "string",
            "description" : "Indicates the type of role of a customer"
          },
          "availableBalance" : {
            "type" : "number",
            "description" : "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account."
          },
          "alternateId" : {
            "type" : "string",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
            "maxLength" : 36
          },
          "arrangementStatus" : {
            "type" : "string",
            "description" : "Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc.",
            "maxLength" : 15
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to respond by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual Transact error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "Arrangement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ArrangementBody"
        }
      },
      "description" : "Arrangement"
    },
    "ArrangementBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "ArrangementResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ArrangementResponseBody"
        }
      },
      "description" : "ArrangementResponse"
    },
    "ArrangementResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "ConsumerLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanBody"
        }
      },
      "description" : "ConsumerLoan"
    },
    "ConsumerLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "officers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "primaryOfficer" : {
                "type" : "string",
                "description" : "Specify the primary officer responsible for the arrangement",
                "minLength" : 0,
                "maxLength" : 4
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "ConsumerLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ConsumerLoanResponseBody"
        }
      },
      "description" : "ConsumerLoanResponse"
    },
    "ConsumerLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "charges" : {
                            "type" : "array",
                            "description" : "The charges or fees for this transaction",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "appplicationPeriod" : {
                                  "type" : "string",
                                  "description" : "Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately",
                                  "minLength" : 0,
                                  "maxLength" : 4
                                },
                                "applicationMethod" : {
                                  "type" : "string",
                                  "description" : "Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time",
                                  "minLength" : 0,
                                  "maxLength" : 10,
                                  "enum" : [ "DUE", "CAPITALISE", "DEFER" ]
                                },
                                "chargeAutoSettle" : {
                                  "type" : "string",
                                  "description" : "This field aids turning off the automatic settlement for the corresponding charge. If set to yes settlement processing for the associated chage will be done based on the settlement configuration for the charge",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "A rule is assigned to a product and the rule determines whether a customer can buy that product or hold it after changes in circumstance.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ruleName" : {
                            "type" : "string",
                            "description" : "Name of the validation rule to be checked against an online or periodic activity.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "balanceType" : {
                            "type" : "string",
                            "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "periodicValue" : {
                            "type" : "string",
                            "description" : "Contains the periodic value for a specific product condition",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "flatCharge" : {
                      "type" : "string",
                      "description" : "Specified the fixed charge amount to be collected",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "refundfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "closureDefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "officrers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "otherOfficerId" : {
                            "type" : "string",
                            "description" : "Other officers managing the Customer",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "role" : {
                            "type" : "string",
                            "description" : "Indicates the Role of the Customer",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "primaryOfficer" : {
                      "type" : "string",
                      "description" : "Specify the primary officer responsible for the arrangement",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedAmount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Contains the period within which the locked rate needs to be availed.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "Percentage of holdings that can be pledged as collateral",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "PaymentHoliday" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentHolidayBody"
        }
      },
      "description" : "PaymentHoliday"
    },
    "PaymentHolidayBody" : {
      "type" : "object",
      "properties" : {
        "closureNotes" : {
          "type" : "array",
          "description" : "This field is used to hold the notes for the reason of account closure",
          "items" : {
            "type" : "object",
            "properties" : {
              "closureNote" : {
                "type" : "string",
                "description" : "This field is used to hold the notes for the reason of account closure",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "closureReason" : {
          "type" : "string",
          "description" : "This field contains the reason for closing the account",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "paymentHoliday" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activityId" : {
                "type" : "string",
                "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                "minLength" : 0,
                "maxLength" : 80
              },
              "activityAction" : {
                "type" : "string",
                "description" : "Refers to view or cancel options.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "paymentDate" : {
                "type" : "string",
                "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
                "minLength" : 0,
                "maxLength" : 11
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "billType" : {
                "type" : "string",
                "description" : "The type of payment obligation generated",
                "minLength" : 0,
                "maxLength" : 15
              },
              "newPaymentAmount" : {
                "type" : "string",
                "description" : "Indicates the new schedule amount which will be processed during the payment holiday period",
                "minLength" : 0,
                "maxLength" : 18
              },
              "numberOfInstallments" : {
                "type" : "string",
                "description" : "Indicates the number of payments in sequence for which the payment holiday applies",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalculationMethod" : {
                "type" : "string",
                "description" : "Indicates the recalculation method to the cashflow event. Possible values are - EIR, CARRY.COST and QUANTITATIVE.TEST.  EIR method -  System will recalculate the EIR(Effective Interest Rate) in case of a cash flow change. CARRY.COST method - System will adjust the carrying amount of the contract, EIR will not be recalculated. QUANTITATIVE.TEST method - System will recalculate the EIR(Effective Interest Rate) only when the cashflow change is substantial.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "PaymentHolidayResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentHolidayResponseBody"
        }
      },
      "description" : "PaymentHolidayResponse"
    },
    "PaymentHolidayResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "closureNotes" : {
              "type" : "array",
              "description" : "This field is used to hold the notes for the reason of account closure",
              "items" : {
                "type" : "object",
                "properties" : {
                  "closureNote" : {
                    "type" : "string",
                    "description" : "This field is used to hold the notes for the reason of account closure",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "closureReason" : {
              "type" : "string",
              "description" : "This field contains the reason for closing the account",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "paymentHoliday" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activityId" : {
                      "type" : "string",
                      "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "activityAction" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentDate" : {
                      "type" : "string",
                      "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "newPaymentAmount" : {
                      "type" : "string",
                      "description" : "Indicates the new schedule amount which will be processed during the payment holiday period",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "numberOfInstallments" : {
                      "type" : "string",
                      "description" : "Indicates the number of payments in sequence for which the payment holiday applies",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalculationMethod" : {
                      "type" : "string",
                      "description" : "Indicates the recalculation method to the cashflow event. Possible values are - EIR, CARRY.COST and QUANTITATIVE.TEST.  EIR method -  System will recalculate the EIR(Effective Interest Rate) in case of a cash flow change. CARRY.COST method - System will adjust the carrying amount of the contract, EIR will not be recalculated. QUANTITATIVE.TEST method - System will recalculate the EIR(Effective Interest Rate) only when the cashflow change is substantial.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanConditionsBody"
        }
      },
      "description" : "LoanConditions"
    },
    "LoanConditionsBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penaltyint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penalinterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "offsetint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanConditionsResponseBody"
        }
      },
      "description" : "LoanConditionsResponse"
    },
    "LoanConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanAccount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanAccountBody"
        }
      },
      "description" : "LoanAccount"
    },
    "LoanAccountBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountTitles" : {
                "type" : "array",
                "description" : "Short title on an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitle" : {
                      "type" : "string",
                      "description" : "Short title on an account",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "accountTitles2" : {
                "type" : "array",
                "description" : "Title line 2 that will appear in notice and statements",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitle2" : {
                      "type" : "string",
                      "description" : "Title line 2 that will appear in notice and statements",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "shortTitles" : {
                "type" : "array",
                "description" : "Contains the short title given to the name of an account or an arrangement",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "shortTitle" : {
                      "type" : "string",
                      "description" : "Contains the short title given to the name of an account or an arrangement",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              },
              "businessDayCentres" : {
                "type" : "array",
                "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "businessDayCentre" : {
                      "type" : "string",
                      "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    }
                  }
                }
              },
              "referalCodes" : {
                "type" : "array",
                "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "referalCode" : {
                      "type" : "string",
                      "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "postingRestrictions" : {
                "type" : "array",
                "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "postingRestriction" : {
                      "type" : "string",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "restrictionReason" : {
                      "type" : "string",
                      "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "restrictionText" : {
                      "type" : "string",
                      "description" : "Free text information to capture the reason for restriction applied on an account",
                      "minLength" : 0,
                      "maxLength" : 100
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "description" : "This indicates the  date  on which the offer or privilege terminates for the event.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "unrestrictionReason" : {
                      "type" : "string",
                      "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "unrestrictionText" : {
                      "type" : "string",
                      "description" : "Reason for unblocking the restriction set on an account",
                      "minLength" : 0,
                      "maxLength" : 100
                    }
                  }
                }
              },
              "aprTypes" : {
                "type" : "array",
                "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "aprType" : {
                      "type" : "string",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "aprRate" : {
                      "type" : "string",
                      "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "mnemonic" : {
                "type" : "string",
                "description" : "Shortcut code for referring an Entity/Company/Branch.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "accountingCompany" : {
                "type" : "string",
                "description" : "Indicates the accounting company of the account record",
                "minLength" : 0,
                "maxLength" : 11
              },
              "originationReference" : {
                "type" : "string",
                "description" : "Identifier of the account in source system, eg, a origination system.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "category" : {
                "type" : "string",
                "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc.",
                "minLength" : 0,
                "maxLength" : 5
              },
              "baseDateType" : {
                "type" : "string",
                "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date",
                "minLength" : 0,
                "maxLength" : 10
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "dateConvention" : {
                "type" : "string",
                "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR.",
                "minLength" : 0,
                "maxLength" : 18
              },
              "dateAdjustment" : {
                "type" : "string",
                "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "inactiveMonths" : {
                "type" : "string",
                "description" : "Indicates the number of months without customer activity before an account is declared as inactive",
                "minLength" : 0,
                "maxLength" : 3
              },
              "baseDateKey" : {
                "type" : "string",
                "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)",
                "minLength" : 0,
                "maxLength" : 10
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanAccountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanAccountResponseBody"
        }
      },
      "description" : "LoanAccountResponse"
    },
    "LoanAccountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitles" : {
                      "type" : "array",
                      "description" : "Short title on an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountTitle" : {
                            "type" : "string",
                            "description" : "Short title on an account",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "accountTitles2" : {
                      "type" : "array",
                      "description" : "Title line 2 that will appear in notice and statements",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountTitle2" : {
                            "type" : "string",
                            "description" : "Title line 2 that will appear in notice and statements",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "shortTitles" : {
                      "type" : "array",
                      "description" : "Contains the short title given to the name of an account or an arrangement",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "shortTitle" : {
                            "type" : "string",
                            "description" : "Contains the short title given to the name of an account or an arrangement",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "businessDayCentres" : {
                      "type" : "array",
                      "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "businessDayCentre" : {
                            "type" : "string",
                            "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          }
                        }
                      }
                    },
                    "referalCodes" : {
                      "type" : "array",
                      "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "referalCode" : {
                            "type" : "string",
                            "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "postingRestrictions" : {
                      "type" : "array",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "postingRestriction" : {
                            "type" : "string",
                            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "restrictionReason" : {
                            "type" : "string",
                            "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "restrictionText" : {
                            "type" : "string",
                            "description" : "Free text information to capture the reason for restriction applied on an account",
                            "minLength" : 0,
                            "maxLength" : 100
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "expiryDate" : {
                            "type" : "string",
                            "description" : "This indicates the  date  on which the offer or privilege terminates for the event.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "unrestrictionReason" : {
                            "type" : "string",
                            "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "unrestrictionText" : {
                            "type" : "string",
                            "description" : "Reason for unblocking the restriction set on an account",
                            "minLength" : 0,
                            "maxLength" : 100
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "mnemonic" : {
                      "type" : "string",
                      "description" : "Shortcut code for referring an Entity/Company/Branch.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "accountingCompany" : {
                      "type" : "string",
                      "description" : "Indicates the accounting company of the account record",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "originationReference" : {
                      "type" : "string",
                      "description" : "Identifier of the account in source system, eg, a origination system.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "category" : {
                      "type" : "string",
                      "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc.",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "baseDateType" : {
                      "type" : "string",
                      "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "dateConvention" : {
                      "type" : "string",
                      "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR.",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "dateAdjustment" : {
                      "type" : "string",
                      "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "inactiveMonths" : {
                      "type" : "string",
                      "description" : "Indicates the number of months without customer activity before an account is declared as inactive",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "baseDateKey" : {
                      "type" : "string",
                      "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanInterest" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanInterestBody"
        }
      },
      "description" : "LoanInterest"
    },
    "LoanInterestBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penaltyint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penalinterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "offsetint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberOfPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "adhocPaymentAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "holidayRestrictTypes" : {
                "type" : "array",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "items" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictItem" : {
                            "type" : "string",
                            "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "minimumPayments" : {
                "type" : "array",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "properties" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentProperty" : {
                            "type" : "string",
                            "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "billLeadDays" : {
                "type" : "string",
                "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                "minLength" : 0,
                "maxLength" : 3
              },
              "finaliseBill" : {
                "type" : "string",
                "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "includeFutureDisbursement" : {
                "type" : "string",
                "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanInterestResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanInterestResponseBody"
        }
      },
      "description" : "LoanInterestResponse"
    },
    "LoanInterestResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "items" : {
                            "type" : "array",
                            "description" : "Contains the payment reference and details for each bulk record.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "properties" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ChargeOffActivity" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ChargeOffActivityBody"
        }
      },
      "description" : "ChargeOffActivity"
    },
    "ChargeOffActivityBody" : {
      "type" : "object",
      "properties" : {
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "contractId" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "systemId" : {
          "type" : "string",
          "description" : "System ID of the originating transaction",
          "minLength" : 0,
          "maxLength" : 6
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "ChargeOffActivityResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ChargeOffActivityResponseBody"
        }
      },
      "description" : "ChargeOffActivityResponse"
    },
    "ChargeOffActivityResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "contractId" : {
              "type" : "string",
              "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "systemId" : {
              "type" : "string",
              "description" : "System ID of the originating transaction",
              "minLength" : 0,
              "maxLength" : 6
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "LoanDisbursement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDisbursementBody"
        }
      },
      "description" : "LoanDisbursement"
    },
    "LoanDisbursementBody" : {
      "type" : "object",
      "properties" : {
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "contractId" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "systemId" : {
          "type" : "string",
          "description" : "System ID of the originating transaction",
          "minLength" : 0,
          "maxLength" : 6
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "LoanDisbursementResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDisbursementResponseBody"
        }
      },
      "description" : "LoanDisbursementResponse"
    },
    "LoanDisbursementResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "contractId" : {
              "type" : "string",
              "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "systemId" : {
              "type" : "string",
              "description" : "System ID of the originating transaction",
              "minLength" : 0,
              "maxLength" : 6
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "LoansCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoansCustomerBody"
        }
      },
      "description" : "LoansCustomer"
    },
    "LoansCustomerBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoansCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoansCustomerResponseBody"
        }
      },
      "description" : "LoansCustomerResponse"
    },
    "LoansCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanTopupAmount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanTopupAmountBody"
        }
      },
      "description" : "LoanTopupAmount"
    },
    "LoanTopupAmountBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberOfPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "adhocPaymentAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "holidayRestrictTypes" : {
                "type" : "array",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "items" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictItem" : {
                            "type" : "string",
                            "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "minimumPayments" : {
                "type" : "array",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "properties" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentProperty" : {
                            "type" : "string",
                            "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "billLeadDays" : {
                "type" : "string",
                "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                "minLength" : 0,
                "maxLength" : 3
              },
              "finaliseBill" : {
                "type" : "string",
                "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "includeFutureDisbursement" : {
                "type" : "string",
                "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanTopupAmountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanTopupAmountResponseBody"
        }
      },
      "description" : "LoanTopupAmountResponse"
    },
    "LoanTopupAmountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "items" : {
                            "type" : "array",
                            "description" : "Contains the payment reference and details for each bulk record.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "properties" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanDecreaseAmount" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDecreaseAmountBody"
        }
      },
      "description" : "LoanDecreaseAmount"
    },
    "LoanDecreaseAmountBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberOfPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "adhocPaymentAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "holidayRestrictTypes" : {
                "type" : "array",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "items" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictItem" : {
                            "type" : "string",
                            "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "minimumPayments" : {
                "type" : "array",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "properties" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentProperty" : {
                            "type" : "string",
                            "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "billLeadDays" : {
                "type" : "string",
                "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                "minLength" : 0,
                "maxLength" : 3
              },
              "finaliseBill" : {
                "type" : "string",
                "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "includeFutureDisbursement" : {
                "type" : "string",
                "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanDecreaseAmountResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDecreaseAmountResponseBody"
        }
      },
      "description" : "LoanDecreaseAmountResponse"
    },
    "LoanDecreaseAmountResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "items" : {
                            "type" : "array",
                            "description" : "Contains the payment reference and details for each bulk record.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "properties" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RepaymentDate" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateBody"
        }
      },
      "description" : "RepaymentDate"
    },
    "RepaymentDateBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "RepaymentDateResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateResponseBody"
        }
      },
      "description" : "RepaymentDateResponse"
    },
    "RepaymentDateResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WriteOffBalanceLoans" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffBalanceLoansBody"
        }
      },
      "description" : "WriteOffBalanceLoans"
    },
    "WriteOffBalanceLoansBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "balanceMaintenance" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "adjustProperties" : {
                "type" : "array",
                "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "writeOffs" : {
                      "type" : "array",
                      "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOff" : {
                            "type" : "string",
                            "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "writeOffAmount" : {
                            "type" : "string",
                            "description" : "Indicates that the corresponding balance needs to be written off partially. It should not be greater than the original balance amount.",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "WriteOffBalanceLoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffBalanceLoansResponseBody"
        }
      },
      "description" : "WriteOffBalanceLoansResponse"
    },
    "WriteOffBalanceLoansResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "adjustProperties" : {
                      "type" : "array",
                      "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOffs" : {
                            "type" : "array",
                            "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "writeOff" : {
                                  "type" : "string",
                                  "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "writeOffAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates that the corresponding balance needs to be written off partially. It should not be greater than the original balance amount.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WriteOffLoans" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffLoansBody"
        }
      },
      "description" : "WriteOffLoans"
    },
    "WriteOffLoansBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "balanceMaintenance" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "adjustProperties" : {
                "type" : "array",
                "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "writeOffs" : {
                      "type" : "array",
                      "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOff" : {
                            "type" : "string",
                            "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                            "minLength" : 0,
                            "maxLength" : 15
                          }
                        }
                      }
                    }
                  }
                }
              },
              "bills" : {
                "type" : "array",
                "description" : "List bills of all type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "writeOffBill" : {
                      "type" : "string",
                      "description" : "Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billAdjustmentNarrative" : {
                      "type" : "string",
                      "description" : "Contains the narration which is specific to the bill adjustment.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "adjustAmortAmounts" : {
                      "type" : "array",
                      "description" : "Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "amortEndDate" : {
                            "type" : "string",
                            "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "outstandingAmortAmount" : {
                            "type" : "string",
                            "description" : "Indicates the outstanding bill amount of a given property for a payment type.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "newAmortizationAmount" : {
                            "type" : "string",
                            "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    }
                  }
                }
              },
              "adjustmentDisplayname" : {
                "type" : "string",
                "description" : "Denotes the description for the adjustment",
                "minLength" : 0,
                "maxLength" : 35
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "WriteOffLoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffLoansResponseBody"
        }
      },
      "description" : "WriteOffLoansResponse"
    },
    "WriteOffLoansResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "adjustProperties" : {
                      "type" : "array",
                      "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOffs" : {
                            "type" : "array",
                            "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "writeOff" : {
                                  "type" : "string",
                                  "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "bills" : {
                      "type" : "array",
                      "description" : "List bills of all type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOffBill" : {
                            "type" : "string",
                            "description" : "Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billAdjustmentNarrative" : {
                            "type" : "string",
                            "description" : "Contains the narration which is specific to the bill adjustment.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "adjustAmortAmounts" : {
                            "type" : "array",
                            "description" : "Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "amortEndDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "outstandingAmortAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the outstanding bill amount of a given property for a payment type.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                },
                                "newAmortizationAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "adjustmentDisplayname" : {
                      "type" : "string",
                      "description" : "Denotes the description for the adjustment",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "WriteOffBillLoans" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffBillLoansBody"
        }
      },
      "description" : "WriteOffBillLoans"
    },
    "WriteOffBillLoansBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "balanceMaintenance" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "bills" : {
                "type" : "array",
                "description" : "List bills of all type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "writeOffBill" : {
                      "type" : "string",
                      "description" : "Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billAdjustmentNarrative" : {
                      "type" : "string",
                      "description" : "Contains the narration which is specific to the bill adjustment.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "adjustAmortAmounts" : {
                      "type" : "array",
                      "description" : "Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "amortEndDate" : {
                            "type" : "string",
                            "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "outstandingAmortAmount" : {
                            "type" : "string",
                            "description" : "Indicates the outstanding bill amount of a given property for a payment type.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "newAmortizationAmount" : {
                            "type" : "string",
                            "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "WriteOffBillLoansResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/WriteOffBillLoansResponseBody"
        }
      },
      "description" : "WriteOffBillLoansResponse"
    },
    "WriteOffBillLoansResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "bills" : {
                      "type" : "array",
                      "description" : "List bills of all type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "writeOffBill" : {
                            "type" : "string",
                            "description" : "Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billAdjustmentNarrative" : {
                            "type" : "string",
                            "description" : "Contains the narration which is specific to the bill adjustment.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "adjustAmortAmounts" : {
                            "type" : "array",
                            "description" : "Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "amortEndDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "outstandingAmortAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the outstanding bill amount of a given property for a payment type.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                },
                                "newAmortizationAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LinkedRateLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LinkedRateLoanBody"
        }
      },
      "description" : "LinkedRateLoan"
    },
    "LinkedRateLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixed" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "spread" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minMaxRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maxRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "upTo" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "negativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "orPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "margin" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperation" : {
                            "type" : "string",
                            "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attributes" : {
                "type" : "array",
                "description" : "attributes",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attributes" : {
                      "type" : "string",
                      "description" : "Specifies the special attributes for processing the message.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "The value of the field on which the Alert criteria is based",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "attribute" : {
                      "type" : "string",
                      "description" : "Specifies the special attributes for processing the message.",
                      "minLength" : 0,
                      "maxLength" : 30
                    }
                  }
                }
              },
              "periodicInterest" : {
                "type" : "array",
                "description" : "Indicates the details of periodic interest such as periodic index, periodic rate, periodic method, periodic reset, etc",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "negativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperation" : {
                            "type" : "string",
                            "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "activites" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "tiers" : {
                "type" : "string",
                "description" : "If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.",
                "minLength" : 0,
                "maxLength" : 6
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LinkedRateLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LinkedRateLoanResponseBody"
        }
      },
      "description" : "LinkedRateLoanResponse"
    },
    "LinkedRateLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "directcost" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitmentfees" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitmentcost" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "originationfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "purchasepremium" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "purchasediscoun" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "spread" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maxRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "upTo" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "orPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "description" : "attributes",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "description" : "Specifies the special attributes for processing the message.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The account which is linked for calculating interest that should be applied to this account",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "attribute" : {
                            "type" : "string",
                            "description" : "Specifies the special attributes for processing the message.",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "periodicInterest" : {
                      "type" : "array",
                      "description" : "Indicates the details of periodic interest such as periodic index, periodic rate, periodic method, periodic reset, etc",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "activites" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "description" : "If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "princiamort" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penamort" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CommercialLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CommercialLoanBody"
        }
      },
      "description" : "CommercialLoan"
    },
    "CommercialLoanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "CommercialLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CommercialLoanResponseBody"
        }
      },
      "description" : "CommercialLoanResponse"
    },
    "CommercialLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "accreporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Mortgage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MortgageBody"
        }
      },
      "description" : "Mortgage"
    },
    "MortgageBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixed" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "spread" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minMaxRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maxRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "upTo" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "negativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "orPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "margin" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperation" : {
                            "type" : "string",
                            "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attributes" : {
                "type" : "array",
                "description" : "attributes",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "attributes" : {
                      "type" : "string",
                      "description" : "Specifies the special attributes for processing the message.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "The value of the field on which the Alert criteria is based",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    }
                  }
                }
              },
              "effectiveFromDate" : {
                "type" : "string",
                "description" : "Indicates the date from when the instruction or condition is effective",
                "minLength" : 0,
                "maxLength" : 30
              },
              "tiers" : {
                "type" : "string",
                "description" : "If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.",
                "minLength" : 0,
                "maxLength" : 6
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "effectiveFromDate" : {
                "type" : "string",
                "description" : "Indicates the date from when the instruction or condition is effective",
                "minLength" : 0,
                "maxLength" : 30
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "MortgageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MortgageResponseBody"
        }
      },
      "description" : "MortgageResponse"
    },
    "MortgageResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "spread" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maxRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "upTo" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "orPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "description" : "This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "description" : "attributes",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "description" : "Specifies the special attributes for processing the message.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The account which is linked for calculating interest that should be applied to this account",
                            "minLength" : 0,
                            "maxLength" : 20
                          }
                        }
                      }
                    },
                    "effectiveFromDate" : {
                      "type" : "string",
                      "description" : "Indicates the date from when the instruction or condition is effective",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "tiers" : {
                      "type" : "string",
                      "description" : "If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier.",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "effectiveFromDate" : {
                      "type" : "string",
                      "description" : "Indicates the date from when the instruction or condition is effective",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pcdefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharge" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "InstallmentLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstallmentLoanBody"
        }
      },
      "description" : "InstallmentLoan"
    },
    "InstallmentLoanBody" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "effectiveDate" : {
          "type" : "string",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
          "minLength" : 0,
          "maxLength" : 11
        },
        "activity" : {
          "type" : "string",
          "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "number",
                "description" : "This is the payment amount",
                "minimum" : 0,
                "maximum" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "commitmentUtilisation" : {
                "type" : "string",
                "description" : "Specifies if commitment can be utilized beyond the available amount. Allowed value is 'Allow Overdraw', which indicates the commitment can be utilized beyond available amount.",
                "minLength" : 0,
                "maxLength" : 20
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "InstallmentLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/InstallmentLoanResponseBody"
        }
      },
      "description" : "InstallmentLoanResponse"
    },
    "InstallmentLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
              "minLength" : 0,
              "maxLength" : 11
            },
            "activity" : {
              "type" : "string",
              "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
              "minLength" : 0,
              "maxLength" : 80
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "closure" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "changeProduct" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityRestriction" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "overdue" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityMessaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "chargeoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "reporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "cashback" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payMerchant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "poCashback" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "number",
                      "description" : "This is the payment amount",
                      "minimum" : 0,
                      "maximum" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "commitmentUtilisation" : {
                      "type" : "string",
                      "description" : "Specifies if commitment can be utilized beyond the available amount. Allowed value is 'Allow Overdraw', which indicates the commitment can be utilized beyond available amount.",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "FundsTransfer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FundsTransferBody"
        }
      },
      "description" : "FundsTransfer"
    },
    "FundsTransferBody" : {
      "type" : "object",
      "required" : [ "creditAccountId", "debitAccountId", "debitAmount", "debitCurrency", "transactionType" ],
      "properties" : {
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 1,
          "maxLength" : 4
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 1,
          "maxLength" : 36
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 1,
          "maxLength" : 3
        },
        "debitAmount" : {
          "type" : "number",
          "description" : "Amount to be debited in a payment transaction",
          "minimum" : 1,
          "maximum" : 18
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 1,
          "maxLength" : 36
        },
        "creditCurrencyId" : {
          "type" : "string",
          "description" : "Specifies the credit currency. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "creditAmount" : {
          "type" : "number",
          "description" : "Amount to be credited in a payment transaction",
          "minimum" : 0,
          "maximum" : 18
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "commissionCode" : {
          "type" : "string",
          "description" : "These field control the allocation of Periodic commission where the field COMM.CODE is the trigger for periodic commission and the field CSN.CODE is a system maintained field and hold the commission amount relating to the period band",
          "minLength" : 0,
          "maxLength" : 20
        },
        "commissionType" : {
          "type" : "string",
          "description" : "Indicates the commission types which are applicable for the transaction",
          "minLength" : 0,
          "maxLength" : 11
        },
        "commissionAmount" : {
          "type" : "number",
          "description" : "Amount of commission charged for the payment created with respect to the commission type used.",
          "minimum" : 0,
          "maximum" : 22
        },
        "paymentDetails" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to respond by Transact"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "FundsTransferResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/FundsTransferResponseBody"
        }
      },
      "description" : "FundsTransferResponse"
    },
    "FundsTransferResponseBody" : {
      "type" : "object",
      "properties" : {
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "minLength" : 1,
          "maxLength" : 4
        },
        "debitAccountId" : {
          "type" : "string",
          "description" : "Indicates the debit account number of the payment or transaction.",
          "minLength" : 1,
          "maxLength" : 36
        },
        "debitCurrency" : {
          "type" : "string",
          "description" : "Currency of the debit account. For example: USD, EUR etc.",
          "minLength" : 1,
          "maxLength" : 3
        },
        "debitAmount" : {
          "type" : "number",
          "description" : "Amount to be debited in a payment transaction",
          "minimum" : 1,
          "maximum" : 18
        },
        "debitValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the amount will be debited for settlement"
        },
        "creditAccountId" : {
          "type" : "string",
          "description" : "Credit account identifier of the payment or transaction",
          "minLength" : 1,
          "maxLength" : 36
        },
        "creditCurrencyId" : {
          "type" : "string",
          "description" : "Specifies the credit currency. For example: USD, EUR etc.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "creditAmount" : {
          "type" : "number",
          "description" : "Amount to be credited in a payment transaction",
          "minimum" : 0,
          "maximum" : 18
        },
        "creditValueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Reference quoted by the credit account for a payment"
        },
        "commissionCode" : {
          "type" : "string",
          "description" : "These field control the allocation of Periodic commission where the field COMM.CODE is the trigger for periodic commission and the field CSN.CODE is a system maintained field and hold the commission amount relating to the period band",
          "minLength" : 0,
          "maxLength" : 20
        },
        "commissionType" : {
          "type" : "string",
          "description" : "Indicates the commission types which are applicable for the transaction",
          "minLength" : 0,
          "maxLength" : 11
        },
        "commissionAmount" : {
          "type" : "number",
          "description" : "Amount of commission charged for the payment created with respect to the commission type used.",
          "minimum" : 0,
          "maximum" : 22
        },
        "paymentDetails" : {
          "type" : "string",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual Transact error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "LoanOutstandingBillsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanOutstandingBillsResponseBody"
        }
      },
      "description" : "LoanOutstandingBillsResponse"
    },
    "LoanOutstandingBillsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "billDate" : {
            "type" : "string",
            "description" : "Indicates a date on which a bill has been raised"
          },
          "billType" : {
            "type" : "string",
            "description" : "The type of payment obligation generated"
          },
          "billed" : {
            "type" : "string",
            "description" : "Indicates the total billed amount of a bill",
            "maxLength" : 19
          },
          "outstanding" : {
            "type" : "string",
            "description" : "The remaining monetary amount on a loan",
            "maxLength" : 19
          },
          "status" : {
            "type" : "string",
            "description" : "Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure"
          },
          "billStatus" : {
            "type" : "string",
            "description" : "Indicates the status of a bill(Issued,Due,Ageing,Settled)",
            "maxLength" : 15
          },
          "billId" : {
            "type" : "string",
            "description" : "Indicates the bill reference or Id",
            "maxLength" : 35
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanPayoffDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffDetailsResponseBody"
        }
      },
      "description" : "LoanPayoffDetailsResponse"
    },
    "LoanPayoffDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "payoffs" : {
            "type" : "array",
            "description" : "Indicates the settlement of the loan amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "payoffDate" : {
                  "type" : "string",
                  "description" : "Indicates a date on which payoff bill has been raised"
                },
                "totPayoffAmount" : {
                  "type" : "string",
                  "description" : "Indicates the original amount of the bill",
                  "maxLength" : 19
                },
                "interestAmount" : {
                  "type" : "string",
                  "description" : "The accrued Interest due or accrued."
                }
              }
            }
          },
          "infoPayments" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "infoPayDate" : {
                  "type" : "string",
                  "description" : "Indicates the bill date of payoff bill for the perdiem amounts calculated"
                },
                "totPayAmount" : {
                  "type" : "string",
                  "description" : "Indicates the total payment amount which was made due over the tenure",
                  "maxLength" : 19
                },
                "totInterestAmount" : {
                  "type" : "string",
                  "description" : "Indicates the sum of interest amounts which was made due over the tenure",
                  "maxLength" : 19
                }
              }
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "type" : "object",
              "properties" : {
                "propertyName" : {
                  "type" : "string",
                  "description" : "Indicates the  property description to which benefit has been applied"
                },
                "propertyAmount" : {
                  "type" : "string",
                  "description" : "Indicates the payment amount which is corresponding to the product property",
                  "maxLength" : 19
                },
                "unallocatedAmount" : {
                  "type" : "string",
                  "description" : "Indicates an unallocated credit amount to an account",
                  "maxLength" : 19
                }
              }
            }
          },
          "payments" : {
            "type" : "array",
            "description" : "Indicates the initiation of payment for an account",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentType" : {
                  "type" : "string",
                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                  "maxLength" : 19
                },
                "paymentAmount" : {
                  "type" : "string",
                  "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
                  "maxLength" : 19
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "ArrangementDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ArrangementDetailsResponseBody"
        }
      },
      "description" : "ArrangementDetailsResponse"
    },
    "ArrangementDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 17
          },
          "beneficialOwner" : {
            "type" : "string",
            "description" : "Indicates the customer who is the legal owner of the arrangement and is the responsible customer of the contract with bank.",
            "maxLength" : 35
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          },
          "arrangementStartDate" : {
            "type" : "string",
            "description" : "Indicates the date on which the arrangement was created"
          },
          "originalContractDate" : {
            "type" : "string",
            "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
            "maxLength" : 11
          },
          "arrangementStatus" : {
            "type" : "string",
            "description" : "Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc.",
            "maxLength" : 15
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "ExternalEventStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalEventStatusResponseBody"
        }
      },
      "description" : "ExternalEventStatusResponse"
    },
    "ExternalEventStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementActivityId" : {
            "type" : "string",
            "description" : "Contains the arrangement activity reference identifier",
            "maxLength" : 40
          },
          "externalEventStatus" : {
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "adjustmentActivityReference" : {
            "type" : "string",
            "description" : "The unique identifier of an compensatory activity triggered for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "PaymentSchedulesProjectionResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSchedulesProjectionResponseBody"
        }
      },
      "description" : "PaymentSchedulesProjectionResponse"
    },
    "PaymentSchedulesProjectionResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231"
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          },
          "chargeAmount" : {
            "type" : "number",
            "description" : "Retrieves the charge amount after redeem",
            "maximum" : 19
          },
          "interestAmount" : {
            "type" : "number",
            "description" : "The accrued Interest due or accrued.",
            "maximum" : 19
          },
          "principalAmount" : {
            "type" : "number",
            "description" : "Specifies the price for the first leg of the repo contract in specified currency.  Accepts numeric with decimal values. Allowed values are a maximum of 19 digits of numerics including decimals may be entered.",
            "maximum" : 19
          },
          "outstandingAmount" : {
            "type" : "number",
            "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
            "maximum" : 19
          },
          "scheduleType" : {
            "type" : "string",
            "description" : "The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR)."
          },
          "taxAmount" : {
            "type" : "string",
            "description" : "Total amount of taxes applicable on all commission or charges calculated for the transaction/payment.",
            "maxLength" : 20
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanOverviewResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanOverviewResponseBody"
        }
      },
      "description" : "LoanOverviewResponse"
    },
    "LoanOverviewResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interests" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "interestRate" : {
                  "type" : "string",
                  "description" : "Identifies the bid rate of the related currency for the defined time period"
                },
                "interestProperty" : {
                  "type" : "string",
                  "description" : "Indicates the interest property name"
                },
                "interestPropertyName" : {
                  "type" : "string",
                  "description" : "Contains the property name of loan interest such as penalty Interest and principal interest."
                },
                "compoundType" : {
                  "type" : "string",
                  "description" : "Contains the frequency type of compound in loan. For example, annually or monthly."
                },
                "rateType" : {
                  "type" : "string",
                  "description" : "Indicates whether the rate is fixed or floating rate."
                },
                "effectiveRate" : {
                  "type" : "string",
                  "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value"
                },
                "tierType" : {
                  "type" : "string",
                  "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level"
                },
                "balanceTypes" : {
                  "type" : "string",
                  "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas."
                },
                "balanceAmount" : {
                  "type" : "number",
                  "description" : "Amount of the balance"
                }
              }
            }
          },
          "schedules" : {
            "type" : "array",
            "description" : "Indicates where this pool may be run either online or End of the day.",
            "items" : {
              "type" : "object",
              "properties" : {
                "schedulePaymentType" : {
                  "type" : "string",
                  "description" : "Indicates payment schedule type"
                },
                "schedulePaymentMethod" : {
                  "type" : "string",
                  "description" : "Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain."
                },
                "scheduleProperty" : {
                  "type" : "string",
                  "description" : "Denotes the property of the loans schedule"
                },
                "schedulePaymentAmount" : {
                  "type" : "number",
                  "description" : "Contains the amount payable in the schedule"
                },
                "schedulePaymentFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the frequency associated - Eg. Pay to customer or paid by bank"
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "maturityDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates maturity date of the contract"
          },
          "maturesIn" : {
            "type" : "string",
            "description" : "Indicates a date or period within which an account gets matured"
          },
          "coolingOffDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges."
          },
          "nextPaymentAmount" : {
            "type" : "number",
            "description" : "Indicates the payment amount to be settled in the next schedule"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "virtualBalance" : {
            "type" : "string",
            "description" : "Contains the virtual balance of the collateral"
          },
          "paidScheduleCount" : {
            "type" : "string",
            "description" : "Count of the paid dates for repayment."
          },
          "dueScheduleCount" : {
            "type" : "string",
            "description" : "Count of the due dates for repayment."
          },
          "futureScheduleCount" : {
            "type" : "string",
            "description" : "Count of the future scheduled payments involving the principal and interest for a given loan"
          },
          "lastPayment" : {
            "type" : "string",
            "format" : "date",
            "description" : "Last committed transaction"
          },
          "term" : {
            "type" : "string",
            "description" : "Indicates the period to which the BID and OFFER rates apply"
          },
          "payoffRequest" : {
            "type" : "string",
            "description" : "Request for loans settlement"
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanBillsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanBillsResponseBody"
        }
      },
      "description" : "LoanBillsResponse"
    },
    "LoanBillsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "type" : "object",
              "properties" : {
                "propertyName" : {
                  "type" : "string",
                  "description" : "Indicates the  property description to which benefit has been applied",
                  "maxLength" : 35
                },
                "interestAmount" : {
                  "type" : "number",
                  "description" : "The accrued Interest due or accrued."
                }
              }
            }
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanCollateralsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanCollateralsResponseBody"
        }
      },
      "description" : "LoanCollateralsResponse"
    },
    "LoanCollateralsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "collateralName" : {
            "type" : "string",
            "description" : "Contains the name of the collateral",
            "maxLength" : 3
          },
          "executionValue" : {
            "type" : "number",
            "description" : "Denotes the value for signing the document at what is commonly referred to as the closing of the sale",
            "maximum" : 19
          },
          "thirdPartyValue" : {
            "type" : "number",
            "description" : "Denotes the value given by any individual who does not have a direct connection with a legal transaction but might be affected by it",
            "maximum" : 19
          },
          "netAmount" : {
            "type" : "number",
            "description" : "Holds the total amount"
          },
          "netNominal" : {
            "type" : "number",
            "description" : "Denotes the sum of the Quantity",
            "maximum" : 19
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event."
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDetailsResponseBody"
        }
      },
      "description" : "LoanDetailsResponse"
    },
    "LoanDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "interests" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "interestRate" : {
                  "type" : "string",
                  "description" : "Identifies the bid rate of the related currency for the defined time period"
                },
                "interestProperty" : {
                  "type" : "string",
                  "description" : "Indicates the interest property name"
                },
                "interestPropertyName" : {
                  "type" : "string",
                  "description" : "Contains the property name of loan interest such as penalty Interest and principal interest."
                },
                "compoundType" : {
                  "type" : "string",
                  "description" : "Contains the frequency type of compound in loan. For example, annually or monthly."
                },
                "rateType" : {
                  "type" : "string",
                  "description" : "Indicates whether the rate is fixed or floating rate."
                },
                "effectiveRate" : {
                  "type" : "string",
                  "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value"
                },
                "tierType" : {
                  "type" : "string",
                  "description" : "Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level"
                },
                "balanceTypes" : {
                  "type" : "string",
                  "description" : "Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas."
                },
                "balanceAmount" : {
                  "type" : "number",
                  "description" : "Amount of the balance"
                },
                "dividentPaidYtd" : {
                  "type" : "number",
                  "description" : "Interest accrued for the specified period"
                },
                "lastPaidDivident" : {
                  "type" : "number",
                  "description" : "Deprecated - Interest accrued for the specified period"
                },
                "periodEnding" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Indicates the end date of the interest period"
                }
              }
            }
          },
          "schedules" : {
            "type" : "array",
            "description" : "Indicates where this pool may be run either online or End of the day.",
            "items" : {
              "type" : "object",
              "properties" : {
                "paidScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the paid dates for repayment."
                },
                "dueScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the due dates for repayment."
                },
                "futureScheduleCount" : {
                  "type" : "string",
                  "description" : "Count of the future scheduled payments involving the principal and interest for a given loan"
                },
                "schedulePaymentType" : {
                  "type" : "string",
                  "description" : "Indicates payment schedule type"
                },
                "schedulePaymentMethod" : {
                  "type" : "string",
                  "description" : "Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain."
                },
                "scheduleProperty" : {
                  "type" : "string",
                  "description" : "Denotes the property of the loans schedule"
                },
                "schedulePaymentAmount" : {
                  "type" : "number",
                  "description" : "Contains the amount payable in the schedule"
                },
                "schedulePaymentFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the frequency associated - Eg. Pay to customer or paid by bank"
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "maturityDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates maturity date of the contract"
          },
          "maturesIn" : {
            "type" : "string",
            "description" : "Indicates a date or period within which an account gets matured"
          },
          "coolingOffDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges."
          },
          "nextPaymentAmount" : {
            "type" : "number",
            "description" : "Indicates the payment amount to be settled in the next schedule"
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "virtualBalance" : {
            "type" : "string",
            "description" : "Contains the virtual balance of the collateral"
          },
          "lastPayment" : {
            "type" : "string",
            "format" : "date",
            "description" : "Last committed transaction"
          },
          "term" : {
            "type" : "string",
            "description" : "Indicates the period to which the BID and OFFER rates apply"
          },
          "payoffRequest" : {
            "type" : "string",
            "description" : "Request for loans settlement"
          },
          "accountWithBankBIC" : {
            "type" : "string",
            "description" : "This is the BIC code of the institution where beneficiary holds an account"
          },
          "pendingDeposit" : {
            "type" : "number",
            "description" : "Indicates the sum of debit transaction amounts that are yet to be processed and placed as holds on accounts, but will not be available for use"
          },
          "customerName" : {
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
          },
          "totalCredits" : {
            "type" : "string",
            "description" : "Contains the total number of credits"
          },
          "totalDebits" : {
            "type" : "string",
            "description" : "Contains the total number of debits"
          },
          "jointCustomerName" : {
            "type" : "string",
            "description" : "Name of Joint Customer"
          },
          "commitmentBalance" : {
            "type" : "number",
            "description" : "Indicates the total amount which will be lent or deposited for the term"
          },
          "lastPaidAmount" : {
            "type" : "number",
            "description" : "Indicates the original total paid amount"
          },
          "lastPaidDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date last payment was made"
          },
          "totalDueAmount" : {
            "type" : "string",
            "description" : "Indicates the total due amount"
          },
          "pendingWithdrawals" : {
            "type" : "number",
            "description" : "Contains the total withdrawal amount on hold until payment execution date"
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "PaymentSchedulesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentSchedulesResponseBody"
        }
      },
      "description" : "PaymentSchedulesResponse"
    },
    "PaymentSchedulesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231"
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total amount",
            "maximum" : 19
          },
          "chargeAmount" : {
            "type" : "number",
            "description" : "Retrieves the charge amount after redeem",
            "maximum" : 19
          },
          "interestAmount" : {
            "type" : "number",
            "description" : "The accrued Interest due or accrued.",
            "maximum" : 19
          },
          "principalAmount" : {
            "type" : "number",
            "description" : "Specifies the price for the first leg of the repo contract in specified currency.  Accepts numeric with decimal values. Allowed values are a maximum of 19 digits of numerics including decimals may be entered.",
            "maximum" : 19
          },
          "outstandingAmount" : {
            "type" : "number",
            "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans",
            "maximum" : 19
          },
          "scheduleType" : {
            "type" : "string",
            "description" : "The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR)."
          },
          "taxAmount" : {
            "type" : "string",
            "description" : "Total amount of taxes applicable on all commission or charges calculated for the transaction/payment.",
            "maxLength" : 20
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "SimulationCaptures" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SimulationCapturesBody"
        }
      },
      "description" : "SimulationCaptures"
    },
    "SimulationCapturesBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "payoff" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "array",
                "description" : "This is the payment amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedamount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              },
              "expiryDays" : {
                "type" : "string",
                "description" : "Contains the period within which the locked rate needs to be availed.",
                "minLength" : 0,
                "maxLength" : 3
              },
              "settleDues" : {
                "type" : "string",
                "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                "minLength" : 0,
                "maxLength" : 3
              },
              "percentage" : {
                "type" : "string",
                "description" : "Percentage of holdings that can be pledged as collateral",
                "minLength" : 0,
                "maxLength" : 12
              },
              "action" : {
                "type" : "string",
                "description" : "Refers to view or cancel options.",
                "minLength" : 0,
                "maxLength" : 9
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "SimulationCapturesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SimulationCapturesResponseBody"
        }
      },
      "description" : "SimulationCapturesResponse"
    },
    "SimulationCapturesResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedamount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Contains the period within which the locked rate needs to be availed.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "Percentage of holdings that can be pledged as collateral",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSimulationBody"
        }
      },
      "description" : "LoanSimulation"
    },
    "LoanSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "synchronous" : {
          "type" : "string",
          "description" : "Indicates that this simulation capture is a synchronous request",
          "minLength" : 0,
          "maxLength" : 3
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountTypes" : {
                "type" : "array",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "accountNames" : {
                "type" : "array",
                "description" : "Display name or short name of the account specified.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSimulationResponseBody"
        }
      },
      "description" : "LoanSimulationResponse"
    },
    "LoanSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "synchronous" : {
              "type" : "string",
              "description" : "Indicates that this simulation capture is a synchronous request",
              "minLength" : 0,
              "maxLength" : 3
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pcdefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharge" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanSimulation1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSimulation1Body"
        }
      },
      "description" : "LoanSimulation1"
    },
    "LoanSimulation1Body" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "synchronous" : {
          "type" : "string",
          "description" : "Indicates that this simulation capture is a synchronous request",
          "minLength" : 0,
          "maxLength" : 3
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountTypes" : {
                "type" : "array",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "accountNames" : {
                "type" : "array",
                "description" : "Display name or short name of the account specified.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanSimulationResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSimulationResponse1Body"
        }
      },
      "description" : "LoanSimulationResponse1"
    },
    "LoanSimulationResponse1Body" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "synchronous" : {
              "type" : "string",
              "description" : "Indicates that this simulation capture is a synchronous request",
              "minLength" : 0,
              "maxLength" : 3
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "itftax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanPayoffSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffSimulationBody"
        }
      },
      "description" : "LoanPayoffSimulation"
    },
    "LoanPayoffSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "synchronous" : {
          "type" : "string",
          "description" : "Indicates that this simulation capture is a synchronous request",
          "minLength" : 0,
          "maxLength" : 3
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "payoff" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "array",
                "description" : "This is the payment amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              },
              "expiryDays" : {
                "type" : "string",
                "description" : "Contains the period within which the locked rate needs to be availed.",
                "minLength" : 0,
                "maxLength" : 3
              },
              "settleDues" : {
                "type" : "string",
                "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                "minLength" : 0,
                "maxLength" : 3
              },
              "percentage" : {
                "type" : "string",
                "description" : "Percentage of holdings that can be pledged as collateral",
                "minLength" : 0,
                "maxLength" : 12
              },
              "action" : {
                "type" : "string",
                "description" : "Refers to view or cancel options.",
                "minLength" : 0,
                "maxLength" : 9
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanPayoffSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffSimulationResponseBody"
        }
      },
      "description" : "LoanPayoffSimulationResponse"
    },
    "LoanPayoffSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "synchronous" : {
              "type" : "string",
              "description" : "Indicates that this simulation capture is a synchronous request",
              "minLength" : 0,
              "maxLength" : 3
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedAmount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Contains the period within which the locked rate needs to be availed.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "Percentage of holdings that can be pledged as collateral",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanArrangementPayoff" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanArrangementPayoffBody"
        }
      },
      "description" : "LoanArrangementPayoff"
    },
    "LoanArrangementPayoffBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "LoanArrangementPayoffResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanArrangementPayoffResponseBody"
        }
      },
      "description" : "LoanArrangementPayoffResponse"
    },
    "LoanArrangementPayoffResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "OverpaymentDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OverpaymentDetailsResponseBody"
        }
      },
      "description" : "OverpaymentDetailsResponse"
    },
    "OverpaymentDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 30
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "commitmentAmount" : {
            "type" : "string",
            "description" : "Indicates the total amount which will be lent or deposited for the term"
          },
          "overpayType" : {
            "type" : "string",
            "description" : "Denotes the type of overpayment.It can have values either as regular or lumpsum"
          },
          "overpay" : {
            "type" : "string",
            "description" : "Indicates whether the overpayment type is allowed or restricted."
          },
          "periodType" : {
            "type" : "string",
            "description" : "Indicates the base period for a overpayment type. This can be calendar or arrangement"
          },
          "overpayLimitType" : {
            "type" : "string",
            "description" : "Indicates the base type on which overpay limit is derived .It can have values either as amount, total loan amount or principal loan amount"
          },
          "overpayLimitValue" : {
            "type" : "string",
            "description" : "Indicates the value of overpayment limit"
          },
          "utilisedYearToDate" : {
            "type" : "string",
            "description" : "Indicates the utilised overpayment limit within the current rule period"
          },
          "remainingYearToDate" : {
            "type" : "string",
            "description" : "Indicates the remaining overpayment limit available for the period"
          },
          "limitUtilised" : {
            "type" : "string",
            "description" : "Indicates the total utilised overpayment limit"
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "LoanDrawdownOffer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferBody"
        }
      },
      "description" : "LoanDrawdownOffer"
    },
    "LoanDrawdownOfferBody" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "offerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the offer is executed"
        },
        "drawdownDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the drawdown contract is created."
        },
        "activity" : {
          "type" : "string",
          "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penaltyint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penalinterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOfferResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferResponseBody"
        }
      },
      "description" : "LoanDrawdownOfferResponse"
    },
    "LoanDrawdownOfferResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "offerDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the offer is executed"
            },
            "drawdownDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the drawdown contract is created."
            },
            "activity" : {
              "type" : "string",
              "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
              "minLength" : 0,
              "maxLength" : 80
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pcdefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharge" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOfferAcceptance" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferAcceptanceBody"
        }
      },
      "description" : "LoanDrawdownOfferAcceptance"
    },
    "LoanDrawdownOfferAcceptanceBody" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "offerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the offer is executed"
        },
        "drawdownDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the drawdown contract is created."
        },
        "activity" : {
          "type" : "string",
          "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penaltyint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penalinterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOfferAcceptanceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferAcceptanceResponseBody"
        }
      },
      "description" : "LoanDrawdownOfferAcceptanceResponse"
    },
    "LoanDrawdownOfferAcceptanceResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "offerDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the offer is executed"
            },
            "drawdownDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the drawdown contract is created."
            },
            "activity" : {
              "type" : "string",
              "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
              "minLength" : 0,
              "maxLength" : 80
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pcdefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharge" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOfferRenegotiation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferRenegotiationBody"
        }
      },
      "description" : "LoanDrawdownOfferRenegotiation"
    },
    "LoanDrawdownOfferRenegotiationBody" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "offerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the offer is executed"
        },
        "drawdownDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the drawdown contract is created."
        },
        "activity" : {
          "type" : "string",
          "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penaltyint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "penalinterest" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOfferRenegotiationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferRenegotiationResponseBody"
        }
      },
      "description" : "LoanDrawdownOfferRenegotiationResponse"
    },
    "LoanDrawdownOfferRenegotiationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "offerDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the offer is executed"
            },
            "drawdownDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the drawdown contract is created."
            },
            "activity" : {
              "type" : "string",
              "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
              "minLength" : 0,
              "maxLength" : 80
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanDrawdownOffer1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOffer1Body"
        }
      },
      "description" : "LoanDrawdownOffer1"
    },
    "LoanDrawdownOffer1Body" : {
      "type" : "object",
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "items" : {
            "type" : "object",
            "properties" : {
              "customer" : {
                "type" : "string",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "offerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the offer is executed"
        },
        "drawdownDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date on which the drawdown contract is created."
        },
        "activity" : {
          "type" : "string",
          "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
          "minLength" : 0,
          "maxLength" : 80
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        }
      }
    },
    "LoanDrawdownOfferResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanDrawdownOfferResponse1Body"
        }
      },
      "description" : "LoanDrawdownOfferResponse1"
    },
    "LoanDrawdownOfferResponse1Body" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customers" : {
              "type" : "array",
              "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "offerDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the offer is executed"
            },
            "drawdownDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Indicates the date on which the drawdown contract is created."
            },
            "activity" : {
              "type" : "string",
              "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
              "minLength" : 0,
              "maxLength" : 80
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "LoanSettlement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSettlementBody"
        }
      },
      "description" : "LoanSettlement"
    },
    "LoanSettlementBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "externalEventStatus" : {
          "type" : "string",
          "description" : "Determines the status of events sent to external system from the current system for the given activity",
          "minLength" : 0,
          "maxLength" : 35
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payInSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payInRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payInRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payInAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payInBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payInPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payInPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payInAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payInActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payOutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutproperties" : {
                      "type" : "array",
                      "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutproperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "payoutpropertyclasses" : {
                      "type" : "array",
                      "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutpropertyclass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payOutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payOutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payOutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payOutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payOutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payOutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanSettlementResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanSettlementResponseBody"
        }
      },
      "description" : "LoanSettlementResponse"
    },
    "LoanSettlementResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "externalEventStatus" : {
              "type" : "string",
              "description" : "Determines the status of events sent to external system from the current system for the given activity",
              "minLength" : 0,
              "maxLength" : 35
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payInSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payInRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payInRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payInAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payInBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payInPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payInPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payInAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payInActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payOutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutproperties" : {
                            "type" : "array",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutproperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          },
                          "payoutpropertyclasses" : {
                            "type" : "array",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutpropertyclass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payOutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payOutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payOutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payOutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payOutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payOutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RepaymentSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentSimulationBody"
        }
      },
      "description" : "RepaymentSimulation"
    },
    "RepaymentSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "combineBills" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "Combine Bills" ]
              },
              "holidayRestrictType" : {
                "type" : "string",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Holiday Restrict Type" ]
              },
              "holidayRestrictItem" : {
                "type" : "string",
                "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Holiday Restrict Item" ]
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38,
                "enum" : [ "Recalc Frequency" ]
              },
              "periodicAttribute" : {
                "type" : "string",
                "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                "minLength" : 0,
                "maxLength" : 30,
                "enum" : [ "Periodic Attribute" ]
              },
              "repaymentHolidayLimit" : {
                "type" : "string",
                "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Repayment Holiday Limit" ]
              },
              "minimumPayment" : {
                "type" : "string",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "minLength" : 0,
                "maxLength" : 15
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "RepaymentSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentSimulationResponseBody"
        }
      },
      "description" : "RepaymentSimulationResponse"
    },
    "RepaymentSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "Combine Bills" ]
                    },
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Holiday Restrict Type" ]
                    },
                    "holidayRestrictItem" : {
                      "type" : "string",
                      "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Holiday Restrict Item" ]
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38,
                      "enum" : [ "Recalc Frequency" ]
                    },
                    "periodicAttribute" : {
                      "type" : "string",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "minLength" : 0,
                      "maxLength" : 30,
                      "enum" : [ "Periodic Attribute" ]
                    },
                    "repaymentHolidayLimit" : {
                      "type" : "string",
                      "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Repayment Holiday Limit" ]
                    },
                    "minimumPayment" : {
                      "type" : "string",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RepaymentDateChangeSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateChangeSimulationBody"
        }
      },
      "description" : "RepaymentDateChangeSimulation"
    },
    "RepaymentDateChangeSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberOfPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "adhocPaymentAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "holidayRestrictTypes" : {
                "type" : "array",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "items" : {
                      "type" : "array",
                      "description" : "Contains the payment reference and details for each bulk record.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictItem" : {
                            "type" : "string",
                            "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "minimumPayments" : {
                "type" : "array",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "minimumPaymentBillType" : {
                      "type" : "string",
                      "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "minimumPaymentAmount" : {
                      "type" : "string",
                      "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "properties" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentProperty" : {
                            "type" : "string",
                            "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "billLeadDays" : {
                "type" : "string",
                "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                "minLength" : 0,
                "maxLength" : 3
              },
              "finaliseBill" : {
                "type" : "string",
                "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "includeFutureDisbursement" : {
                "type" : "string",
                "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "RepaymentDateChangeSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateChangeSimulationResponseBody"
        }
      },
      "description" : "RepaymentDateChangeSimulationResponse"
    },
    "RepaymentDateChangeSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberOfPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "adhocPaymentAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "holidayRestrictTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "holidayRestrictType" : {
                            "type" : "string",
                            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "items" : {
                            "type" : "array",
                            "description" : "Contains the payment reference and details for each bulk record.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "holidayRestrictItem" : {
                                  "type" : "string",
                                  "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "minimumPayments" : {
                      "type" : "array",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "minimumPaymentBillType" : {
                            "type" : "string",
                            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "minimumPaymentAmount" : {
                            "type" : "string",
                            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "properties" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "minimumPaymentProperty" : {
                                  "type" : "string",
                                  "description" : "Defines the list of properties which will be used for minimum payment amount calculation",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "billLeadDays" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "finaliseBill" : {
                      "type" : "string",
                      "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "includeFutureDisbursement" : {
                      "type" : "string",
                      "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "RepaymentDateChangeSimulationSchedules" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateChangeSimulationSchedulesBody"
        }
      },
      "description" : "RepaymentDateChangeSimulationSchedules"
    },
    "RepaymentDateChangeSimulationSchedulesBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "baseDayKey" : {
                "type" : "string",
                "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                "minLength" : 0,
                "maxLength" : 20
              },
              "combineBills" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "Combine Bills" ]
              },
              "holidayRestrictType" : {
                "type" : "string",
                "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Holiday Restrict Type" ]
              },
              "holidayRestrictItem" : {
                "type" : "string",
                "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Holiday Restrict Item" ]
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38,
                "enum" : [ "Recalc Frequency" ]
              },
              "periodicAttribute" : {
                "type" : "string",
                "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                "minLength" : 0,
                "maxLength" : 30,
                "enum" : [ "Periodic Attribute" ]
              },
              "repaymentHolidayLimit" : {
                "type" : "string",
                "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Repayment Holiday Limit" ]
              },
              "minimumPayment" : {
                "type" : "string",
                "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                "minLength" : 0,
                "maxLength" : 15
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payinSettlement1" : {
                "type" : "string",
                "description" : "Flag to indicate whether Payin Settlement instruction is required or not. Valid input is Yes or No. Default value is Yes",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "Payin Settlement" ]
              },
              "ddMandateRef11" : {
                "type" : "string",
                "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "DD Mandate Ref" ]
              },
              "payinAccount11" : {
                "type" : "string",
                "description" : "Contains the account from which funds are to be debited against the payment type",
                "minLength" : 0,
                "maxLength" : 90,
                "enum" : [ "Payin Account" ]
              },
              "payinBeneficiary11" : {
                "type" : "string",
                "description" : "Contains the beneficiary Id used for settlement of the bills due",
                "minLength" : 0,
                "maxLength" : 17,
                "enum" : [ "Payin Beneficiary" ]
              },
              "payinPercentage11" : {
                "type" : "string",
                "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin Percentage" ]
              },
              "payinAmount11" : {
                "type" : "string",
                "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin Amount" ]
              },
              "payoutSettlement1" : {
                "type" : "string",
                "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "Payout Settlement" ]
              },
              "payoutAccount11" : {
                "type" : "string",
                "description" : "The account to which a settlement amount is transferred",
                "minLength" : 0,
                "maxLength" : 90,
                "enum" : [ "Payout Account" ]
              },
              "payoutBeneficiary11" : {
                "type" : "string",
                "description" : "The beneficiary that payment should be made to",
                "minLength" : 0,
                "maxLength" : 17,
                "enum" : [ "Payout Beneficiary" ]
              },
              "payoutPercentage11" : {
                "type" : "string",
                "description" : "Contains the percentage of the payment amount used for settlement of the payable",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout Percentage" ]
              },
              "payoutAmount11" : {
                "type" : "string",
                "description" : "Contains the finite amount of the payment used for settlement of the payables",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout Amount" ]
              },
              "payinAcctSettle" : {
                "type" : "string",
                "description" : "Contains the account from which funds are to be debited against the payment type",
                "minLength" : 0,
                "maxLength" : 8,
                "enum" : [ "Payin" ]
              },
              "payoutAcctSettle" : {
                "type" : "string",
                "description" : "Contains the account to which a settlement amount is transferred",
                "minLength" : 0,
                "maxLength" : 8,
                "enum" : [ "Payout" ]
              },
              "paymentType11" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30,
                "enum" : [ "Payment Type" ]
              },
              "payinPoProduct11" : {
                "type" : "string",
                "description" : "Contains the payment order product id for which the payment is initiated",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin Product" ]
              },
              "payinActivity11" : {
                "type" : "string",
                "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                "minLength" : 0,
                "maxLength" : 55,
                "enum" : [ "Payin Activity" ]
              },
              "payinAcDbRule1" : {
                "type" : "string",
                "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin Account Debit Rule" ]
              },
              "payinSettleActivity1" : {
                "type" : "string",
                "description" : "Indicates the activity to be used to settle the dues of the current contract",
                "minLength" : 0,
                "maxLength" : 55,
                "enum" : [ "Payin Settle Activity" ]
              },
              "payinRcType1" : {
                "type" : "string",
                "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin RC Type" ]
              },
              "payinRcCondition1" : {
                "type" : "string",
                "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payin RC Condition" ]
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90,
                "enum" : [ "Default Settlement Account" ]
              },
              "defaultBeneficiary" : {
                "type" : "string",
                "description" : "Indicates the beneficiary the payment should be made to in default.",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Default Beneficiary" ]
              },
              "updatePendingRetry" : {
                "type" : "string",
                "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills",
                "minLength" : 0,
                "maxLength" : 3
              },
              "accountSettlement" : {
                "type" : "string",
                "description" : "Specifies the account at which the interest or payment settlement is to be made.",
                "minLength" : 0,
                "maxLength" : 8,
                "enum" : [ "Account Settlement" ]
              },
              "payoutPptyClass11" : {
                "type" : "string",
                "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                "minLength" : 0,
                "maxLength" : 30,
                "enum" : [ "Property Class" ]
              },
              "payoutProperty11" : {
                "type" : "string",
                "description" : "Contains the payout payment order product for which payment is initiated",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout Property" ]
              },
              "payoutPoProduct11" : {
                "type" : "string",
                "description" : "Contains the payout payment order product for which payment is initiated",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout Product" ]
              },
              "payoutActivity11" : {
                "type" : "string",
                "description" : "Contains the transaction type used to credit the customer account for settlement of the payables",
                "minLength" : 0,
                "maxLength" : 55,
                "enum" : [ "Payout Activity" ]
              },
              "payoutAcCrRule1" : {
                "type" : "string",
                "description" : "Indicates the user exception routine",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout Account Credit Rule" ]
              },
              "payoutSettleActivity1" : {
                "type" : "string",
                "description" : "Indicates the activity used for payout when payout of funds need to happen automatically",
                "minLength" : 0,
                "maxLength" : 55,
                "enum" : [ "Payout Settle Activity" ]
              },
              "payoutRcType1" : {
                "type" : "string",
                "description" : "Indicates the Transaction Cycler type  reference to be used during handoff to inform the recycler what type of transaction is being handed-off",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout RC Type" ]
              },
              "payoutRcCondition1" : {
                "type" : "string",
                "description" : "Indicates the Transaction Cycler condition to be used for the payout property to allow variation of different retry conditions",
                "minLength" : 0,
                "maxLength" : 35,
                "enum" : [ "Payout RC Condition" ]
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "RepaymentDateChangeSimulationSchedulesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/RepaymentDateChangeSimulationSchedulesResponseBody"
        }
      },
      "description" : "RepaymentDateChangeSimulationSchedulesResponse"
    },
    "RepaymentDateChangeSimulationSchedulesResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "baseDayKey" : {
                      "type" : "string",
                      "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "combineBills" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "Combine Bills" ]
                    },
                    "holidayRestrictType" : {
                      "type" : "string",
                      "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Holiday Restrict Type" ]
                    },
                    "holidayRestrictItem" : {
                      "type" : "string",
                      "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Holiday Restrict Item" ]
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38,
                      "enum" : [ "Recalc Frequency" ]
                    },
                    "periodicAttribute" : {
                      "type" : "string",
                      "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
                      "minLength" : 0,
                      "maxLength" : 30,
                      "enum" : [ "Periodic Attribute" ]
                    },
                    "repaymentHolidayLimit" : {
                      "type" : "string",
                      "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Repayment Holiday Limit" ]
                    },
                    "minimumPayment" : {
                      "type" : "string",
                      "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement1" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not. Valid input is Yes or No. Default value is Yes",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "Payin Settlement" ]
                    },
                    "ddMandateRef11" : {
                      "type" : "string",
                      "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                      "minLength" : 0,
                      "maxLength" : 25,
                      "enum" : [ "DD Mandate Ref" ]
                    },
                    "payinAccount11" : {
                      "type" : "string",
                      "description" : "Contains the account from which funds are to be debited against the payment type",
                      "minLength" : 0,
                      "maxLength" : 90,
                      "enum" : [ "Payin Account" ]
                    },
                    "payinBeneficiary11" : {
                      "type" : "string",
                      "description" : "Contains the beneficiary Id used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 17,
                      "enum" : [ "Payin Beneficiary" ]
                    },
                    "payinPercentage11" : {
                      "type" : "string",
                      "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin Percentage" ]
                    },
                    "payinAmount11" : {
                      "type" : "string",
                      "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin Amount" ]
                    },
                    "payoutSettlement1" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "Payout Settlement" ]
                    },
                    "payoutAccount11" : {
                      "type" : "string",
                      "description" : "The account to which a settlement amount is transferred",
                      "minLength" : 0,
                      "maxLength" : 90,
                      "enum" : [ "Payout Account" ]
                    },
                    "payoutBeneficiary11" : {
                      "type" : "string",
                      "description" : "The beneficiary that payment should be made to",
                      "minLength" : 0,
                      "maxLength" : 17,
                      "enum" : [ "Payout Beneficiary" ]
                    },
                    "payoutPercentage11" : {
                      "type" : "string",
                      "description" : "Contains the percentage of the payment amount used for settlement of the payable",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout Percentage" ]
                    },
                    "payoutAmount11" : {
                      "type" : "string",
                      "description" : "Contains the finite amount of the payment used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout Amount" ]
                    },
                    "payinAcctSettle" : {
                      "type" : "string",
                      "description" : "Contains the account from which funds are to be debited against the payment type",
                      "minLength" : 0,
                      "maxLength" : 8,
                      "enum" : [ "Payin" ]
                    },
                    "payoutAcctSettle" : {
                      "type" : "string",
                      "description" : "Contains the account to which a settlement amount is transferred",
                      "minLength" : 0,
                      "maxLength" : 8,
                      "enum" : [ "Payout" ]
                    },
                    "paymentType11" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30,
                      "enum" : [ "Payment Type" ]
                    },
                    "payinPoProduct11" : {
                      "type" : "string",
                      "description" : "Contains the payment order product id for which the payment is initiated",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin Product" ]
                    },
                    "payinActivity11" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55,
                      "enum" : [ "Payin Activity" ]
                    },
                    "payinAcDbRule1" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin Account Debit Rule" ]
                    },
                    "payinSettleActivity1" : {
                      "type" : "string",
                      "description" : "Indicates the activity to be used to settle the dues of the current contract",
                      "minLength" : 0,
                      "maxLength" : 55,
                      "enum" : [ "Payin Settle Activity" ]
                    },
                    "payinRcType1" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin RC Type" ]
                    },
                    "payinRcCondition1" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payin RC Condition" ]
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90,
                      "enum" : [ "Default Settlement Account" ]
                    },
                    "defaultBeneficiary" : {
                      "type" : "string",
                      "description" : "Indicates the beneficiary the payment should be made to in default.",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Default Beneficiary" ]
                    },
                    "updatePendingRetry" : {
                      "type" : "string",
                      "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "accountSettlement" : {
                      "type" : "string",
                      "description" : "Specifies the account at which the interest or payment settlement is to be made.",
                      "minLength" : 0,
                      "maxLength" : 8,
                      "enum" : [ "Account Settlement" ]
                    },
                    "payoutPptyClass11" : {
                      "type" : "string",
                      "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                      "minLength" : 0,
                      "maxLength" : 30,
                      "enum" : [ "Property Class" ]
                    },
                    "payoutProperty11" : {
                      "type" : "string",
                      "description" : "Contains the payout payment order product for which payment is initiated",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout Property" ]
                    },
                    "payoutPoProduct11" : {
                      "type" : "string",
                      "description" : "Contains the payout payment order product for which payment is initiated",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout Product" ]
                    },
                    "payoutActivity11" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used to credit the customer account for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55,
                      "enum" : [ "Payout Activity" ]
                    },
                    "payoutAcCrRule1" : {
                      "type" : "string",
                      "description" : "Indicates the user exception routine",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout Account Credit Rule" ]
                    },
                    "payoutSettleActivity1" : {
                      "type" : "string",
                      "description" : "Indicates the activity used for payout when payout of funds need to happen automatically",
                      "minLength" : 0,
                      "maxLength" : 55,
                      "enum" : [ "Payout Settle Activity" ]
                    },
                    "payoutRcType1" : {
                      "type" : "string",
                      "description" : "Indicates the Transaction Cycler type  reference to be used during handoff to inform the recycler what type of transaction is being handed-off",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout RC Type" ]
                    },
                    "payoutRcCondition1" : {
                      "type" : "string",
                      "description" : "Indicates the Transaction Cycler condition to be used for the payout property to allow variation of different retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35,
                      "enum" : [ "Payout RC Condition" ]
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Takeoverloan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TakeoverloanBody"
        }
      },
      "description" : "Takeoverloan"
    },
    "TakeoverloanBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "facilityId" : {
          "type" : "string",
          "description" : "Unique identifier (contract number) of the facility",
          "minLength" : 0,
          "maxLength" : 20
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "originalContractDate" : {
          "type" : "string",
          "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountTitles" : {
                "type" : "array",
                "description" : "Short title on an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitle" : {
                      "type" : "string",
                      "description" : "Short title on an account",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "accountTitles2" : {
                "type" : "array",
                "description" : "Title line 2 that will appear in notice and statements",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitle2" : {
                      "type" : "string",
                      "description" : "Title line 2 that will appear in notice and statements",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "shortTitles" : {
                "type" : "array",
                "description" : "Contains the short title given to the name of an account or an arrangement",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "shortTitle" : {
                      "type" : "string",
                      "description" : "Contains the short title given to the name of an account or an arrangement",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    }
                  }
                }
              },
              "businessDayCentres" : {
                "type" : "array",
                "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "businessDayCentre" : {
                      "type" : "string",
                      "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    }
                  }
                }
              },
              "referalCodes" : {
                "type" : "array",
                "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "referalCode" : {
                      "type" : "string",
                      "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "postingRestrictions" : {
                "type" : "array",
                "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "postingRestriction" : {
                      "type" : "string",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "restrictionReason" : {
                      "type" : "string",
                      "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "restrictionText" : {
                      "type" : "string",
                      "description" : "Free text information to capture the reason for restriction applied on an account",
                      "minLength" : 0,
                      "maxLength" : 100
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "expiryDate" : {
                      "type" : "string",
                      "description" : "This indicates the  date  on which the offer or privilege terminates for the event.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "unrestrictionReason" : {
                      "type" : "string",
                      "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "unrestrictionText" : {
                      "type" : "string",
                      "description" : "Reason for unblocking the restriction set on an account",
                      "minLength" : 0,
                      "maxLength" : 100
                    }
                  }
                }
              },
              "aprTypes" : {
                "type" : "array",
                "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "aprType" : {
                      "type" : "string",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "aprRate" : {
                      "type" : "string",
                      "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "mnemonic" : {
                "type" : "string",
                "description" : "Shortcut code for referring an Entity/Company/Branch.",
                "minLength" : 0,
                "maxLength" : 10
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "accountingCompany" : {
                "type" : "string",
                "description" : "Indicates the accounting company of the account record",
                "minLength" : 0,
                "maxLength" : 11
              },
              "originationReference" : {
                "type" : "string",
                "description" : "Identifier of the account in source system, eg, a origination system.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "category" : {
                "type" : "string",
                "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc.",
                "minLength" : 0,
                "maxLength" : 5
              },
              "baseDateType" : {
                "type" : "string",
                "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date",
                "minLength" : 0,
                "maxLength" : 10
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "dateConvention" : {
                "type" : "string",
                "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR.",
                "minLength" : 0,
                "maxLength" : 18
              },
              "dateAdjustment" : {
                "type" : "string",
                "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "inactiveMonths" : {
                "type" : "string",
                "description" : "Indicates the number of months without customer activity before an account is declared as inactive",
                "minLength" : 0,
                "maxLength" : 3
              },
              "baseDateKey" : {
                "type" : "string",
                "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)",
                "minLength" : 0,
                "maxLength" : 10
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "repayment" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payInRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payInSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "paymentTypes" : {
                      "type" : "array",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payOutRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payOutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "propertyClass" : {
                      "type" : "array",
                      "description" : "Condition that is used to build a product",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          }
                        }
                      }
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "limit" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitReference" : {
                "type" : "string",
                "description" : "Identifies the credit limit reference for the underlying account.",
                "minLength" : 0,
                "maxLength" : 12
              },
              "limitAmount" : {
                "type" : "string",
                "description" : "The Limit amount that is actually available for use. The system limit checks are preformed against the online limit",
                "minLength" : 0,
                "maxLength" : 19
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "TakeoverloanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TakeoverloanResponseBody"
        }
      },
      "description" : "TakeoverloanResponse"
    },
    "TakeoverloanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "facilityId" : {
              "type" : "string",
              "description" : "Unique identifier (contract number) of the facility",
              "minLength" : 0,
              "maxLength" : 20
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "originalContractDate" : {
              "type" : "string",
              "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountTitles" : {
                      "type" : "array",
                      "description" : "Short title on an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountTitle" : {
                            "type" : "string",
                            "description" : "Short title on an account",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "accountTitles2" : {
                      "type" : "array",
                      "description" : "Title line 2 that will appear in notice and statements",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountTitle2" : {
                            "type" : "string",
                            "description" : "Title line 2 that will appear in notice and statements",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "shortTitles" : {
                      "type" : "array",
                      "description" : "Contains the short title given to the name of an account or an arrangement",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "shortTitle" : {
                            "type" : "string",
                            "description" : "Contains the short title given to the name of an account or an arrangement",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "businessDayCentres" : {
                      "type" : "array",
                      "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "businessDayCentre" : {
                            "type" : "string",
                            "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          }
                        }
                      }
                    },
                    "referalCodes" : {
                      "type" : "array",
                      "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "referalCode" : {
                            "type" : "string",
                            "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "postingRestrictions" : {
                      "type" : "array",
                      "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "postingRestriction" : {
                            "type" : "string",
                            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "restrictionReason" : {
                            "type" : "string",
                            "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. ",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "restrictionText" : {
                            "type" : "string",
                            "description" : "Free text information to capture the reason for restriction applied on an account",
                            "minLength" : 0,
                            "maxLength" : 100
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "expiryDate" : {
                            "type" : "string",
                            "description" : "This indicates the  date  on which the offer or privilege terminates for the event.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "unrestrictionReason" : {
                            "type" : "string",
                            "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "unrestrictionText" : {
                            "type" : "string",
                            "description" : "Reason for unblocking the restriction set on an account",
                            "minLength" : 0,
                            "maxLength" : 100
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "mnemonic" : {
                      "type" : "string",
                      "description" : "Shortcut code for referring an Entity/Company/Branch.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "accountingCompany" : {
                      "type" : "string",
                      "description" : "Indicates the accounting company of the account record",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "originationReference" : {
                      "type" : "string",
                      "description" : "Identifier of the account in source system, eg, a origination system.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "category" : {
                      "type" : "string",
                      "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc.",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "baseDateType" : {
                      "type" : "string",
                      "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "dateConvention" : {
                      "type" : "string",
                      "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR.",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "dateAdjustment" : {
                      "type" : "string",
                      "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "inactiveMonths" : {
                      "type" : "string",
                      "description" : "Indicates the number of months without customer activity before an account is declared as inactive",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "baseDateKey" : {
                      "type" : "string",
                      "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drawingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyintrfr" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "repayment" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payInRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payInSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "paymentTypes" : {
                            "type" : "array",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "paymentType" : {
                                  "type" : "string",
                                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payOutRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payOutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "propertyClass" : {
                            "type" : "array",
                            "description" : "Condition that is used to build a product",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                }
                              }
                            }
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "limitReference" : {
                      "type" : "string",
                      "description" : "Identifies the credit limit reference for the underlying account.",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAmount" : {
                      "type" : "string",
                      "description" : "The Limit amount that is actually available for use. The system limit checks are preformed against the online limit",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "exchRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricinggrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Balance" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BalanceBody"
        }
      },
      "description" : "Balance"
    },
    "BalanceBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "balanceMaintenance" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "adjustProperties" : {
                "type" : "array",
                "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "adjustProperty" : {
                      "type" : "string",
                      "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "adjustBalanceTypes" : {
                      "type" : "array",
                      "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "adjustBalanceType" : {
                            "type" : "string",
                            "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc.",
                            "minLength" : 0,
                            "maxLength" : 22
                          },
                          "newBalanceAmount" : {
                            "type" : "string",
                            "description" : "Indicates the new balance amount for the corresponding balance type while capturing a new balance type or adjusting an existing balance type. This is a signed field. For write off activities, system will default this field to zero.",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    }
                  }
                }
              },
              "adjustmentDisplayname" : {
                "type" : "string",
                "description" : "Denotes the description for the adjustment",
                "minLength" : 0,
                "maxLength" : 35
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "BalanceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BalanceResponseBody"
        }
      },
      "description" : "BalanceResponse"
    },
    "BalanceResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "adjustProperties" : {
                      "type" : "array",
                      "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "adjustProperty" : {
                            "type" : "string",
                            "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "adjustBalanceTypes" : {
                            "type" : "array",
                            "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc.",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "adjustBalanceType" : {
                                  "type" : "string",
                                  "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc.",
                                  "minLength" : 0,
                                  "maxLength" : 22
                                },
                                "newBalanceAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the new balance amount for the corresponding balance type while capturing a new balance type or adjusting an existing balance type. This is a signed field. For write off activities, system will default this field to zero.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "adjustmentDisplayname" : {
                      "type" : "string",
                      "description" : "Denotes the description for the adjustment",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Bills" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BillsBody"
        }
      },
      "description" : "Bills"
    },
    "BillsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "balanceMaintenance" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "bills" : {
                "type" : "array",
                "description" : "List bills of all type",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "billId" : {
                      "type" : "string",
                      "description" : "Indicates the bill reference or Id",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "delinquentAmount" : {
                      "type" : "string",
                      "description" : "Indicates the bill amount during the ageing status(Bill which crossed the due date)",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "billDate" : {
                      "type" : "string",
                      "description" : "Indicates a date on which a bill has been raised",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "paymentDate" : {
                      "type" : "string",
                      "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentAmount" : {
                      "type" : "string",
                      "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "properties" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "property" : {
                            "type" : "string",
                            "description" : "Id of the product property",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "originalPropertyAmount" : {
                            "type" : "string",
                            "description" : "Indicates the original amount of a given property for a payment type.",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "newPropertyAmount" : {
                            "type" : "string",
                            "description" : "Indicates the oustanding amount of interest or account or charge property after bill adjustment. For write off activities, system will default zero amount in this field.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "amortEndDate" : {
                            "type" : "string",
                            "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "newAmortizationAmount" : {
                            "type" : "string",
                            "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    }
                  }
                }
              },
              "adjustmentDisplayname" : {
                "type" : "string",
                "description" : "Denotes the description for the adjustment",
                "minLength" : 0,
                "maxLength" : 35
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "BillsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BillsResponseBody"
        }
      },
      "description" : "BillsResponse"
    },
    "BillsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "bills" : {
                      "type" : "array",
                      "description" : "List bills of all type",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "billId" : {
                            "type" : "string",
                            "description" : "Indicates the bill reference or Id",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "delinquentAmount" : {
                            "type" : "string",
                            "description" : "Indicates the bill amount during the ageing status(Bill which crossed the due date)",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "billDate" : {
                            "type" : "string",
                            "description" : "Indicates a date on which a bill has been raised",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "paymentDate" : {
                            "type" : "string",
                            "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231",
                            "minLength" : 0,
                            "maxLength" : 11
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentAmount" : {
                            "type" : "string",
                            "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "properties" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "property" : {
                                  "type" : "string",
                                  "description" : "Id of the product property",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "originalPropertyAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the original amount of a given property for a payment type.",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "newPropertyAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the oustanding amount of interest or account or charge property after bill adjustment. For write off activities, system will default zero amount in this field.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                },
                                "amortEndDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the amortisation end date for an amortisation type of charge.",
                                  "minLength" : 0,
                                  "maxLength" : 11
                                },
                                "newAmortizationAmount" : {
                                  "type" : "string",
                                  "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised.",
                                  "minLength" : 0,
                                  "maxLength" : 19
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "adjustmentDisplayname" : {
                      "type" : "string",
                      "description" : "Denotes the description for the adjustment",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ChangeProduct" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ChangeProductBody"
        }
      },
      "description" : "ChangeProduct"
    },
    "ChangeProductBody" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "accountTypes" : {
                "type" : "array",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "accountNames" : {
                "type" : "array",
                "description" : "Display name or short name of the account specified.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "ChangeProductResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ChangeProductResponseBody"
        }
      },
      "description" : "ChangeProductResponse"
    },
    "ChangeProductResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountTypes" : {
                      "type" : "array",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountType" : {
                            "type" : "string",
                            "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "accountNames" : {
                      "type" : "array",
                      "description" : "Display name or short name of the account specified.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "accountName" : {
                            "type" : "string",
                            "description" : "Display name or short name of the account specified.",
                            "minLength" : 0,
                            "maxLength" : 70
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drawingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyintrfr" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "balanceMaintenance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricinggrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Evidence" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/EvidenceBody"
        }
      },
      "description" : "Evidence"
    },
    "EvidenceBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "partyRoles" : {
          "type" : "array",
          "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyRole" : {
                "type" : "string",
                "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "agentCustomerIds" : {
          "type" : "array",
          "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentCustomerId" : {
                "type" : "string",
                "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                "minLength" : 0,
                "maxLength" : 10
              }
            }
          }
        },
        "agentArrangementIds" : {
          "type" : "array",
          "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentArrangementId" : {
                "type" : "string",
                "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                "minLength" : 0,
                "maxLength" : 17
              }
            }
          }
        },
        "agentRoles" : {
          "type" : "array",
          "description" : "The role of the 3rd party, select from standard list",
          "items" : {
            "type" : "object",
            "properties" : {
              "agentRole" : {
                "type" : "string",
                "description" : "The role of the 3rd party, select from standard list",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "description" : "Indicates an unique identifier of an account",
          "minLength" : 0,
          "maxLength" : 20
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "currency" : {
          "type" : "string",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "minLength" : 0,
          "maxLength" : 3
        },
        "productVariation" : {
          "type" : "string",
          "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "pricingSelection" : {
          "type" : "string",
          "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "pricingPlan" : {
          "type" : "string",
          "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
          "minLength" : 0,
          "maxLength" : 35
        },
        "rewardsArrangementId" : {
          "type" : "string",
          "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
          "minLength" : 0,
          "maxLength" : 17
        },
        "tradeDate" : {
          "type" : "string",
          "description" : "Indicates the trade date in yyyymmdd format.",
          "minLength" : 0,
          "maxLength" : 11
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "description" : "It is a date on/upon which an account is considered to take effect",
          "minLength" : 0,
          "maxLength" : 11
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "evidence" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "covenants" : {
                "type" : "array",
                "description" : "Identifies the agreement with the customer",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "covenantsCategory" : {
                      "type" : "string",
                      "description" : "Specifies the category on which the evidence requirement of the covenant can be grouped, e.g., FINANCIAL, LEGAL.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsType" : {
                      "type" : "string",
                      "description" : "Specifies the evidence requirement of a covenant which defines the document specification to be submitted on a periodic basis.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsFrequency" : {
                      "type" : "string",
                      "description" : "Specifies the frequency on which the covenant must be requested. The frequency could be defined as weekly, monthly, yearly, etc. The accepted format is e0Y e0M e0W e0D.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "covenantsInitialDate" : {
                      "type" : "string",
                      "description" : "Specifies the start date on which the covenant must be requested. The accepted format is YYYYMMDD.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "covenantsNoticeDays" : {
                      "type" : "string",
                      "description" : "Contains the number of days the covenant must be requested before the due date.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsMetrics" : {
                      "type" : "string",
                      "description" : "Specifies a valid related requirement that fulfils a metrics for the defined covenant.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsEvaluationOperand" : {
                      "type" : "string",
                      "description" : "Specifies the operand by which the covenant metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsEvaluationValue" : {
                      "type" : "string",
                      "description" : "Specifies the value that is identified to fulfil the metrics.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "covenantsRestriction" : {
                      "type" : "string",
                      "description" : "Specifies the consequences defined when a covenant is not submitted/met.",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "conditions" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "conditionsCategory" : {
                      "type" : "string",
                      "description" : "Specifies the category on which the evidence requirement of the conditions can be grouped, e.g., FINANCIAL, LEGAL.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsType" : {
                      "type" : "string",
                      "description" : "Contains the evidence requirement of a condition which defines the document specification to be submitted when an event occurs.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsDueEvent" : {
                      "type" : "string",
                      "description" : "Specifies the event on which the condition must be requested",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsMetrics" : {
                      "type" : "string",
                      "description" : "Specifies a valid related requirement that fulfils a metrics for the defined condition.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsEvaluationOperand" : {
                      "type" : "string",
                      "description" : "Specifies the operand by which the condition metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsEvaluationValue" : {
                      "type" : "string",
                      "description" : "Specifies the value that is identified to fulfil the metrics.",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "conditionsRestriction" : {
                      "type" : "string",
                      "description" : "Specifies the consequences defined when a condition is not submitted/met",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "EvidenceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/EvidenceResponseBody"
        }
      },
      "description" : "EvidenceResponse"
    },
    "EvidenceResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "partyRoles" : {
              "type" : "array",
              "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyRole" : {
                    "type" : "string",
                    "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "agentCustomerIds" : {
              "type" : "array",
              "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentCustomerId" : {
                    "type" : "string",
                    "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "agentArrangementIds" : {
              "type" : "array",
              "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentArrangementId" : {
                    "type" : "string",
                    "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "agentRoles" : {
              "type" : "array",
              "description" : "The role of the 3rd party, select from standard list",
              "items" : {
                "type" : "object",
                "properties" : {
                  "agentRole" : {
                    "type" : "string",
                    "description" : "The role of the 3rd party, select from standard list",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "currency" : {
              "type" : "string",
              "description" : "Identifies the currency. E.g. USD, GBP etc",
              "minLength" : 0,
              "maxLength" : 3
            },
            "productVariation" : {
              "type" : "string",
              "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer",
              "minLength" : 0,
              "maxLength" : 15
            },
            "pricingSelection" : {
              "type" : "string",
              "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "pricingPlan" : {
              "type" : "string",
              "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment",
              "minLength" : 0,
              "maxLength" : 35
            },
            "rewardsArrangementId" : {
              "type" : "string",
              "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)",
              "minLength" : 0,
              "maxLength" : 17
            },
            "tradeDate" : {
              "type" : "string",
              "description" : "Indicates the trade date in yyyymmdd format.",
              "minLength" : 0,
              "maxLength" : 11
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "description" : "It is a date on/upon which an account is considered to take effect",
              "minLength" : 0,
              "maxLength" : 11
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "covenants" : {
                      "type" : "array",
                      "description" : "Identifies the agreement with the customer",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "covenantsCategory" : {
                            "type" : "string",
                            "description" : "Specifies the category on which the evidence requirement of the covenant can be grouped, e.g., FINANCIAL, LEGAL.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsType" : {
                            "type" : "string",
                            "description" : "Specifies the evidence requirement of a covenant which defines the document specification to be submitted on a periodic basis.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsFrequency" : {
                            "type" : "string",
                            "description" : "Specifies the frequency on which the covenant must be requested. The frequency could be defined as weekly, monthly, yearly, etc. The accepted format is e0Y e0M e0W e0D.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "covenantsInitialDate" : {
                            "type" : "string",
                            "description" : "Specifies the start date on which the covenant must be requested. The accepted format is YYYYMMDD.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "covenantsNoticeDays" : {
                            "type" : "string",
                            "description" : "Contains the number of days the covenant must be requested before the due date.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsMetrics" : {
                            "type" : "string",
                            "description" : "Specifies a valid related requirement that fulfils a metrics for the defined covenant.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsEvaluationOperand" : {
                            "type" : "string",
                            "description" : "Specifies the operand by which the covenant metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsEvaluationValue" : {
                            "type" : "string",
                            "description" : "Specifies the value that is identified to fulfil the metrics.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "covenantsRestriction" : {
                            "type" : "string",
                            "description" : "Specifies the consequences defined when a covenant is not submitted/met.",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "conditions" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "conditionsCategory" : {
                            "type" : "string",
                            "description" : "Specifies the category on which the evidence requirement of the conditions can be grouped, e.g., FINANCIAL, LEGAL.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsType" : {
                            "type" : "string",
                            "description" : "Contains the evidence requirement of a condition which defines the document specification to be submitted when an event occurs.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsDueEvent" : {
                            "type" : "string",
                            "description" : "Specifies the event on which the condition must be requested",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsMetrics" : {
                            "type" : "string",
                            "description" : "Specifies a valid related requirement that fulfils a metrics for the defined condition.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsEvaluationOperand" : {
                            "type" : "string",
                            "description" : "Specifies the operand by which the condition metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsEvaluationValue" : {
                            "type" : "string",
                            "description" : "Specifies the value that is identified to fulfil the metrics.",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "conditionsRestriction" : {
                            "type" : "string",
                            "description" : "Specifies the consequences defined when a condition is not submitted/met",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "EvidenceResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/EvidenceResponse1Body"
        }
      },
      "description" : "EvidenceResponse1"
    },
    "EvidenceResponse1Body" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "covenants" : {
            "type" : "array",
            "description" : "Identifies the agreement with the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "covenantsCategory" : {
                  "type" : "string",
                  "description" : "Specifies the category on which the evidence requirement of the covenant can be grouped, e.g., FINANCIAL, LEGAL.",
                  "maxLength" : 35
                },
                "covenantsType" : {
                  "type" : "string",
                  "description" : "Specifies the evidence requirement of a covenant which defines the document specification to be submitted on a periodic basis.",
                  "maxLength" : 35
                },
                "covenantsMetrics" : {
                  "type" : "string",
                  "description" : "Specifies a valid related requirement that fulfils a metrics for the defined covenant.",
                  "maxLength" : 35
                },
                "covenantsEvaluationOperand" : {
                  "type" : "string",
                  "description" : "Specifies the operand by which the covenant metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                  "maxLength" : 35
                },
                "covenantsEvaluationValue" : {
                  "type" : "string",
                  "description" : "Specifies the value that is identified to fulfil the metrics.",
                  "maxLength" : 35
                },
                "covenantsInitialDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Specifies the start date on which the covenant must be requested. The accepted format is YYYYMMDD."
                },
                "covenantsFrequency" : {
                  "type" : "string",
                  "description" : "Specifies the frequency on which the covenant must be requested. The frequency could be defined as weekly, monthly, yearly, etc. The accepted format is e0Y e0M e0W e0D.",
                  "maxLength" : 30
                },
                "covenantsNoticeDays" : {
                  "type" : "number",
                  "description" : "Contains the number of days the covenant must be requested before the due date.",
                  "maximum" : 35
                },
                "covenantsRestriction" : {
                  "type" : "string",
                  "description" : "Specifies the consequences defined when a covenant is not submitted/met.",
                  "maxLength" : 35
                }
              }
            }
          },
          "conditions" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "conditionsCategory" : {
                  "type" : "string",
                  "description" : "Specifies the category on which the evidence requirement of the conditions can be grouped, e.g., FINANCIAL, LEGAL.",
                  "maxLength" : 35
                },
                "conditionsType" : {
                  "type" : "string",
                  "description" : "Contains the evidence requirement of a condition which defines the document specification to be submitted when an event occurs.",
                  "maxLength" : 35
                },
                "conditionsMetrics" : {
                  "type" : "string",
                  "description" : "Specifies a valid related requirement that fulfils a metrics for the defined condition.",
                  "maxLength" : 35
                },
                "conditionsEvaluationOperand" : {
                  "type" : "string",
                  "description" : "Specifies the operand by which the condition metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.",
                  "maxLength" : 35
                },
                "conditionsRestriction" : {
                  "type" : "string",
                  "description" : "Specifies the consequences defined when a condition is not submitted/met",
                  "maxLength" : 35
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 30
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "PaymentHolidaySimResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PaymentHolidaySimResponseBody"
        }
      },
      "description" : "PaymentHolidaySimResponse"
    },
    "PaymentHolidaySimResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentHoliday" : {
            "type" : "array",
            "description" : "Contains the details of payment holiday. It includes payment type, bill type, start date and holiday period, etc.",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentType" : {
                  "type" : "string",
                  "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                  "maxLength" : 35
                },
                "billType" : {
                  "type" : "string",
                  "description" : "The type of payment obligation generated",
                  "maxLength" : 11
                },
                "startDate" : {
                  "type" : "string",
                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                  "maxLength" : 11
                },
                "holidayPeriod" : {
                  "type" : "array",
                  "description" : "Contains the details of holiday period. It includes holiday date , original payment amount, new payment amount etc.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "holidayDate" : {
                        "type" : "string",
                        "description" : "Indicates the date which needs to be declared as payment holiday and customer is allowed to skip the repayments.",
                        "maxLength" : 11
                      },
                      "newPaymentAmount" : {
                        "type" : "string",
                        "description" : "Indicates the new schedule amount which will be processed during the payment holiday period",
                        "maxLength" : 18
                      },
                      "originalPaymentAmount" : {
                        "type" : "string",
                        "description" : "Indicates the original payment amount of the interest or account or charge property.",
                        "maxLength" : 18
                      }
                    }
                  }
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 20
          },
          "simulationReference" : {
            "type" : "string",
            "description" : "Indicates the reference id for simulation activity",
            "maxLength" : 17
          },
          "extensions" : {
            "type" : "object",
            "description" : "Indicates the extension data"
          }
        }
      }
    },
    "BusinessLoan" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessLoanBody"
        }
      },
      "description" : "BusinessLoan"
    },
    "BusinessLoanBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "channel" : {
          "type" : "string",
          "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
          "minLength" : 0,
          "maxLength" : 30
        },
        "branch" : {
          "type" : "string",
          "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant",
          "minLength" : 0,
          "maxLength" : 16
        },
        "lineOfBusiness" : {
          "type" : "string",
          "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant",
          "minLength" : 0,
          "maxLength" : 4
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "aprTypes" : {
                "type" : "array",
                "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "aprType" : {
                      "type" : "string",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "aprRate" : {
                      "type" : "string",
                      "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "BusinessLoanResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessLoanResponseBody"
        }
      },
      "description" : "BusinessLoanResponse"
    },
    "BusinessLoanResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "channel" : {
              "type" : "string",
              "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant",
              "minLength" : 0,
              "maxLength" : 30
            },
            "branch" : {
              "type" : "string",
              "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant",
              "minLength" : 0,
              "maxLength" : 16
            },
            "lineOfBusiness" : {
              "type" : "string",
              "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant",
              "minLength" : 0,
              "maxLength" : 4
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "participant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodicCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "aprTypes" : {
                      "type" : "array",
                      "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "aprType" : {
                            "type" : "string",
                            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "aprRate" : {
                            "type" : "string",
                            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prefpricing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "accreporting" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoanPayoffAutoSimulation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffAutoSimulationBody"
        }
      },
      "description" : "LoanPayoffAutoSimulation"
    },
    "LoanPayoffAutoSimulationBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "synchronous" : {
          "type" : "string",
          "description" : "Indicates that this simulation capture is a synchronous request",
          "minLength" : 0,
          "maxLength" : 3
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "payoff" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "array",
                "description" : "This is the payment amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedAmount" : {
                      "type" : "string",
                      "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              },
              "expiryDays" : {
                "type" : "string",
                "description" : "Contains the period within which the locked rate needs to be availed.",
                "minLength" : 0,
                "maxLength" : 3
              },
              "settleDues" : {
                "type" : "string",
                "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                "minLength" : 0,
                "maxLength" : 3
              },
              "percentage" : {
                "type" : "string",
                "description" : "Percentage of holdings that can be pledged as collateral",
                "minLength" : 0,
                "maxLength" : 12
              },
              "action" : {
                "type" : "string",
                "description" : "Refers to view or cancel options.",
                "minLength" : 0,
                "maxLength" : 9
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "LoanPayoffAutoSimulationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LoanPayoffAutoSimulationResponseBody"
        }
      },
      "description" : "LoanPayoffAutoSimulationResponse"
    },
    "LoanPayoffAutoSimulationResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "synchronous" : {
              "type" : "string",
              "description" : "Indicates that this simulation capture is a synchronous request",
              "minLength" : 0,
              "maxLength" : 3
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "array",
                      "description" : "This is the payment amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedAmount" : {
                            "type" : "string",
                            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period",
                            "minLength" : 0,
                            "maxLength" : 19
                          }
                        }
                      }
                    },
                    "expiryDays" : {
                      "type" : "string",
                      "description" : "Contains the period within which the locked rate needs to be availed.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "settleDues" : {
                      "type" : "string",
                      "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "percentage" : {
                      "type" : "string",
                      "description" : "Percentage of holdings that can be pledged as collateral",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "action" : {
                      "type" : "string",
                      "description" : "Refers to view or cancel options.",
                      "minLength" : 0,
                      "maxLength" : 9
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AutoSimulations" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AutoSimulationsBody"
        }
      },
      "description" : "AutoSimulations"
    },
    "AutoSimulationsBody" : {
      "type" : "object",
      "properties" : {
        "customerIds" : {
          "type" : "array",
          "description" : "Identifier of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerId" : {
                "type" : "string",
                "description" : "Identifier of the customer",
                "minLength" : 0,
                "maxLength" : 10
              },
              "customerRole" : {
                "type" : "string",
                "description" : "Indicates role of a customer for an arrangement.",
                "minLength" : 0,
                "maxLength" : 30
              }
            }
          }
        },
        "properties" : {
          "type" : "array",
          "description" : "Id of the product property",
          "items" : {
            "type" : "object",
            "properties" : {
              "propertyId" : {
                "type" : "string",
                "description" : "The identifier of the product condition",
                "minLength" : 0,
                "maxLength" : 30
              },
              "fields" : {
                "type" : "array",
                "description" : "Input is the valid field name for the metrics evaluation of alerts",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fieldName" : {
                      "type" : "string",
                      "description" : "The name of the field",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "fieldValue" : {
                      "type" : "string",
                      "description" : "Indicates the field value of the arrangement property",
                      "minLength" : 0,
                      "maxLength" : 500
                    }
                  }
                }
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "productId" : {
          "type" : "string",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "minLength" : 0,
          "maxLength" : 30
        },
        "masterArrangementId" : {
          "type" : "string",
          "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
          "minLength" : 0,
          "maxLength" : 20
        },
        "roleName" : {
          "type" : "string",
          "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 3
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
        },
        "activityId" : {
          "type" : "string",
          "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
          "minLength" : 0,
          "maxLength" : 80
        },
        "transactionAmount" : {
          "type" : "number",
          "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
          "minimum" : 0,
          "maximum" : 19
        },
        "reason" : {
          "type" : "string",
          "description" : "Contains the reason for performing the current activity",
          "minLength" : 0,
          "maxLength" : 100
        },
        "automaticRun" : {
          "type" : "string",
          "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
          "minLength" : 0,
          "maxLength" : 35
        },
        "simulationRunReference" : {
          "type" : "string",
          "description" : "Indicates the runner Reference ID for simulation activity",
          "minLength" : 0,
          "maxLength" : 30
        },
        "synchronous" : {
          "type" : "string",
          "description" : "Indicates that this simulation capture is a synchronous request",
          "minLength" : 0,
          "maxLength" : 3
        },
        "extensions" : {
          "type" : "object",
          "description" : "Indicates the extensions"
        },
        "account" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "alternateIds" : {
                "type" : "array",
                "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIdType" : {
                      "type" : "string",
                      "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "alternateId" : {
                      "type" : "string",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "minLength" : 0,
                      "maxLength" : 36
                    }
                  }
                }
              },
              "accountType" : {
                "type" : "string",
                "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountName" : {
                "type" : "string",
                "description" : "Display name or short name of the account specified.",
                "minLength" : 0,
                "maxLength" : 70
              },
              "accountId" : {
                "type" : "string",
                "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                "minLength" : 0,
                "maxLength" : 35
              },
              "portfolioId" : {
                "type" : "string",
                "description" : "Id of the portfolio or security account",
                "minLength" : 0,
                "maxLength" : 35
              },
              "anniversary" : {
                "type" : "string",
                "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                "minLength" : 0,
                "maxLength" : 6
              },
              "customerReference" : {
                "type" : "string",
                "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                "minLength" : 0,
                "maxLength" : 16
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "customer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "customers" : {
                "type" : "array",
                "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customer" : {
                      "type" : "string",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "customerRole" : {
                      "type" : "string",
                      "description" : "Indicates role of a customer for an arrangement.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "taxLiabilityPercentage" : {
                      "type" : "string",
                      "description" : "Tax liability percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "limitAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "GLAllocactionPercentage" : {
                      "type" : "string",
                      "description" : "Indicates GL allocation percentage of the customer",
                      "minLength" : 0,
                      "maxLength" : 12
                    }
                  }
                }
              },
              "jointLiability" : {
                "type" : "string",
                "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                "minLength" : 0,
                "maxLength" : 1
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "principalint" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "onThisActivity" : {
                      "type" : "string",
                      "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                      "minLength" : 0,
                      "maxLength" : 80
                    },
                    "recalculate" : {
                      "type" : "string",
                      "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "interest" : {
                "type" : "array",
                "description" : "Interest amount",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fixedRate" : {
                      "type" : "string",
                      "description" : "Numeric value for the interest rate entered manually.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "floatingRate" : {
                      "type" : "string",
                      "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicIndex" : {
                      "type" : "string",
                      "description" : "Denotes an index which points to the right period of the securities or holdings.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "periodicRate" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "usagePercent" : {
                      "type" : "string",
                      "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "periodicPeriodType" : {
                      "type" : "string",
                      "description" : "Specify the period which will be used to fetch the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicPeriod" : {
                      "type" : "string",
                      "description" : "Define the period which has to be used to calculate the interest rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "periodicMethod" : {
                      "type" : "string",
                      "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "initialResetDate" : {
                      "type" : "string",
                      "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "periodicReset" : {
                      "type" : "string",
                      "description" : "Indicates the reset period of the periodic index defined",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "linkedRateIndicator" : {
                      "type" : "string",
                      "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "minimumTierRate" : {
                      "type" : "string",
                      "description" : "A minimum interest rate can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "maximumTierRate" : {
                      "type" : "string",
                      "description" : "The maximum rate that can be applied at each tier.",
                      "minLength" : 0,
                      "maxLength" : 13
                    },
                    "effectiveRate" : {
                      "type" : "string",
                      "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierAmount" : {
                      "type" : "string",
                      "description" : "The monetary amount for the tier.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "tierNegativeRate" : {
                      "type" : "string",
                      "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                      "minLength" : 0,
                      "maxLength" : 12
                    },
                    "tierPercent" : {
                      "type" : "string",
                      "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "rateTierType" : {
                      "type" : "string",
                      "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "margins" : {
                      "type" : "array",
                      "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "marginType" : {
                            "type" : "string",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "marginOperand" : {
                            "type" : "string",
                            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "marginRate" : {
                            "type" : "string",
                            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    }
                  }
                }
              },
              "references" : {
                "type" : "array",
                "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "customType" : {
                      "type" : "string",
                      "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customName" : {
                      "type" : "string",
                      "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "customValue" : {
                      "type" : "string",
                      "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "dayBasis" : {
                "type" : "string",
                "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                "minLength" : 0,
                "maxLength" : 3
              },
              "calcThreshold" : {
                "type" : "string",
                "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                "minLength" : 0,
                "maxLength" : 19
              },
              "accrualRule" : {
                "type" : "string",
                "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                "minLength" : 0,
                "maxLength" : 35
              },
              "compounding" : {
                "type" : "string",
                "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                "minLength" : 0,
                "maxLength" : 15
              },
              "compoundYieldMethod" : {
                "type" : "string",
                "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                "minLength" : 0,
                "maxLength" : 8
              },
              "minIntAmount" : {
                "type" : "string",
                "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                "minLength" : 0,
                "maxLength" : 19
              },
              "minIntWaive" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 3
              },
              "suppressAccrual" : {
                "type" : "string",
                "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                "minLength" : 0,
                "maxLength" : 10
              },
              "linkedArrangement" : {
                "type" : "string",
                "description" : "The account which is linked for calculating interest that should be applied to this account",
                "minLength" : 0,
                "maxLength" : 20
              },
              "linkedProperty" : {
                "type" : "string",
                "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrConvention" : {
                "type" : "string",
                "description" : "Define the market convention to be used as risk free rate calculation convention",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackType" : {
                "type" : "string",
                "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                "minLength" : 0,
                "maxLength" : 30
              },
              "rfrCalculationMethod" : {
                "type" : "string",
                "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrLookbackDays" : {
                "type" : "string",
                "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                "minLength" : 0,
                "maxLength" : 2
              },
              "rfrSpreadTreatment" : {
                "type" : "string",
                "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrPeriodDayCount" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "rfrRoundingRule" : {
                "type" : "string",
                "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                "minLength" : 0,
                "maxLength" : 20
              },
              "referLimit" : {
                "type" : "string",
                "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                "minLength" : 0,
                "maxLength" : 18
              },
              "referToRoutine" : {
                "type" : "string",
                "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                "minLength" : 0,
                "maxLength" : 30
              },
              "priorDays" : {
                "type" : "string",
                "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                "minLength" : 0,
                "maxLength" : 4
              },
              "initiationType" : {
                "type" : "string",
                "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                "minLength" : 0,
                "maxLength" : 6
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "officers" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "primaryOfficer" : {
                "type" : "string",
                "description" : "Specify the primary officer responsible for the arrangement",
                "minLength" : 0,
                "maxLength" : 4
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "schedule" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "payment" : {
                "type" : "array",
                "description" : "Indicates the initiation of payment for an account",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "paymentMethod" : {
                      "type" : "string",
                      "description" : "Method chosen to make the payment",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "paymentFrequency" : {
                      "type" : "string",
                      "description" : "The frequency at which a payment is required to be generated",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "billType" : {
                      "type" : "string",
                      "description" : "The type of payment obligation generated",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "billProduced" : {
                      "type" : "string",
                      "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "autoSettle" : {
                      "type" : "string",
                      "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "propertyId" : {
                            "type" : "string",
                            "description" : "The identifier of the product condition",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "dueFrequency" : {
                            "type" : "string",
                            "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                            "minLength" : 0,
                            "maxLength" : 38
                          }
                        }
                      }
                    },
                    "payments" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "percentage" : {
                            "type" : "string",
                            "description" : "Percentage of holdings that can be pledged as collateral",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "startDate" : {
                            "type" : "string",
                            "description" : "Contains the date on which the transaction or payment gets initiated.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "endDate" : {
                            "type" : "string",
                            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "numberPayments" : {
                            "type" : "string",
                            "description" : "Specifies the number of coupon or interest payments in a year",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "calcAmount" : {
                            "type" : "string",
                            "description" : "System calculated Payment amount",
                            "minLength" : 0,
                            "maxLength" : 18
                          },
                          "actualAmount" : {
                            "type" : "string",
                            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    }
                  }
                }
              },
              "amortisationTerm" : {
                "type" : "string",
                "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                "minLength" : 0,
                "maxLength" : 4
              },
              "residualAmount" : {
                "type" : "string",
                "description" : "The amount to be paid at the maturity date",
                "minLength" : 0,
                "maxLength" : 18
              },
              "billsCombined" : {
                "type" : "string",
                "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                "minLength" : 0,
                "maxLength" : 3
              },
              "recalcFrequency" : {
                "type" : "string",
                "description" : "This defines the payment schedule amount recalculation frequency",
                "minLength" : 0,
                "maxLength" : 38
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "commitment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "amount" : {
                "type" : "string",
                "description" : "This is the payment amount",
                "minLength" : 0,
                "maxLength" : 19
              },
              "changeAmount" : {
                "type" : "string",
                "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                "minLength" : 0,
                "maxLength" : 19
              },
              "term" : {
                "type" : "string",
                "description" : "Indicates the period to which the BID and OFFER rates apply",
                "minLength" : 0,
                "maxLength" : 6
              },
              "revolving" : {
                "type" : "string",
                "description" : "Indicates if commitment is revolving or non revolving in nature",
                "minLength" : 0,
                "maxLength" : 10,
                "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
              },
              "updateLimit" : {
                "type" : "string",
                "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                "minLength" : 0,
                "maxLength" : 3,
                "enum" : [ "YES", "NO" ]
              },
              "maturityDate" : {
                "type" : "string",
                "description" : "Indicates maturity date of the contract",
                "minLength" : 0,
                "maxLength" : 11
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        },
        "settlement" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "settlement" : {
                "type" : "array",
                "description" : "Indicates settlement conditions associated with the account.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPoProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    }
                  }
                }
              },
              "fxSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "fxSettlementCurrency" : {
                      "type" : "string",
                      "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "fxSettlementAccount" : {
                      "type" : "string",
                      "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              },
              "assocSettlement" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payinSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payinRule" : {
                      "type" : "string",
                      "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the bills due",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "payinRCType" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "payinRCCondition" : {
                      "type" : "string",
                      "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "reference" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "ddMandateReference" : {
                            "type" : "string",
                            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                            "minLength" : 0,
                            "maxLength" : 25
                          },
                          "payinAccount" : {
                            "type" : "string",
                            "description" : "Contains the account from which funds are to be debited against the payment type",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payinBeneficiary" : {
                            "type" : "string",
                            "description" : "Contains the beneficiary Id used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payinPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payment order product Id for which the payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "payout" : {
                "type" : "array",
                "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "payoutSettlement" : {
                      "type" : "string",
                      "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "payoutSettlementActivity" : {
                      "type" : "string",
                      "description" : "Contains the transaction type used for settlement of the payables",
                      "minLength" : 0,
                      "maxLength" : 55
                    },
                    "property" : {
                      "type" : "array",
                      "description" : "Id of the product property",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutPropertyClass" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "payoutProperty" : {
                            "type" : "string",
                            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAccount" : {
                            "type" : "string",
                            "description" : "The account to which a settlement amount is transferred.",
                            "minLength" : 0,
                            "maxLength" : 90
                          },
                          "payoutBeneficiary" : {
                            "type" : "string",
                            "description" : "The beneficiary that payment should be made to .",
                            "minLength" : 0,
                            "maxLength" : 17
                          },
                          "payoutPOProduct" : {
                            "type" : "string",
                            "description" : "Contains the payout payment order product for which payment is initiated",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutPercentage" : {
                            "type" : "string",
                            "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutAmount" : {
                            "type" : "string",
                            "description" : "Contains the finite amount of the payment used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payoutActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                            "minLength" : 0,
                            "maxLength" : 55
                          }
                        }
                      }
                    }
                  }
                }
              },
              "paymentType" : {
                "type" : "string",
                "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                "minLength" : 0,
                "maxLength" : 30
              },
              "defaultSettlementAccount" : {
                "type" : "string",
                "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                "minLength" : 0,
                "maxLength" : 90
              },
              "extensions" : {
                "type" : "object",
                "description" : "Indicates the extensions"
              }
            }
          }
        }
      }
    },
    "AutoSimulationsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AutoSimulationsResponseBody"
        }
      },
      "description" : "AutoSimulationsResponse"
    },
    "AutoSimulationsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "customerIds" : {
              "type" : "array",
              "description" : "Identifier of the customer",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customerId" : {
                    "type" : "string",
                    "description" : "Identifier of the customer",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "customerRole" : {
                    "type" : "string",
                    "description" : "Indicates role of a customer for an arrangement.",
                    "minLength" : 0,
                    "maxLength" : 30
                  }
                }
              }
            },
            "properties" : {
              "type" : "array",
              "description" : "Id of the product property",
              "items" : {
                "type" : "object",
                "properties" : {
                  "propertyId" : {
                    "type" : "string",
                    "description" : "The identifier of the product condition",
                    "minLength" : 0,
                    "maxLength" : 30
                  },
                  "fields" : {
                    "type" : "array",
                    "description" : "Input is the valid field name for the metrics evaluation of alerts",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "fieldName" : {
                          "type" : "string",
                          "description" : "The name of the field",
                          "minLength" : 0,
                          "maxLength" : 35
                        },
                        "fieldValue" : {
                          "type" : "string",
                          "description" : "Indicates the field value of the arrangement property",
                          "minLength" : 0,
                          "maxLength" : 500
                        }
                      }
                    }
                  }
                }
              }
            },
            "overrides" : {
              "type" : "array",
              "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
              "items" : {
                "type" : "object",
                "properties" : {
                  "override" : {
                    "type" : "string",
                    "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                    "minLength" : 0,
                    "maxLength" : 35
                  }
                }
              }
            },
            "arrangementId" : {
              "type" : "string",
              "description" : "Indicates an unique identifier of an account",
              "minLength" : 0,
              "maxLength" : 20
            },
            "productId" : {
              "type" : "string",
              "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
              "minLength" : 0,
              "maxLength" : 30
            },
            "masterArrangementId" : {
              "type" : "string",
              "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created.",
              "minLength" : 0,
              "maxLength" : 20
            },
            "roleName" : {
              "type" : "string",
              "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc.",
              "minLength" : 0,
              "maxLength" : 35
            },
            "currencyId" : {
              "type" : "string",
              "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
              "minLength" : 0,
              "maxLength" : 3
            },
            "effectiveDate" : {
              "type" : "string",
              "format" : "date",
              "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
            },
            "activityId" : {
              "type" : "string",
              "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE",
              "minLength" : 0,
              "maxLength" : 80
            },
            "transactionAmount" : {
              "type" : "number",
              "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency",
              "minimum" : 0,
              "maximum" : 19
            },
            "reason" : {
              "type" : "string",
              "description" : "Contains the reason for performing the current activity",
              "minLength" : 0,
              "maxLength" : 100
            },
            "automaticRun" : {
              "type" : "string",
              "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go",
              "minLength" : 0,
              "maxLength" : 35
            },
            "simulationRunReference" : {
              "type" : "string",
              "description" : "Indicates the runner Reference ID for simulation activity",
              "minLength" : 0,
              "maxLength" : 30
            },
            "synchronous" : {
              "type" : "string",
              "description" : "Indicates that this simulation capture is a synchronous request",
              "minLength" : 0,
              "maxLength" : 3
            },
            "extensions" : {
              "type" : "object",
              "description" : "Indicates the extensions"
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string",
                  "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "inheritance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "splitsMerges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "exchangeRate" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xrateSetup" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xtxlimit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xumaumiIndicator" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisFinance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisPoolid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xauLoanProductControls" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "xisDrawing" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "statement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingGrid" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "facility" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "constraint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "dormancy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pricingRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "restructureRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "evidence" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "account" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "alternateIds" : {
                      "type" : "array",
                      "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateIdType" : {
                            "type" : "string",
                            "description" : "Contains the alternate account system identifier used for defining the alternate account Id",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "alternateId" : {
                            "type" : "string",
                            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
                            "minLength" : 0,
                            "maxLength" : 36
                          }
                        }
                      }
                    },
                    "accountType" : {
                      "type" : "string",
                      "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountName" : {
                      "type" : "string",
                      "description" : "Display name or short name of the account specified.",
                      "minLength" : 0,
                      "maxLength" : 70
                    },
                    "accountId" : {
                      "type" : "string",
                      "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "portfolioId" : {
                      "type" : "string",
                      "description" : "Id of the portfolio or security account",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "anniversary" : {
                      "type" : "string",
                      "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "customerReference" : {
                      "type" : "string",
                      "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
                      "minLength" : 0,
                      "maxLength" : 16
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "activityCharges" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "messaging" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "arrangementRules" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "agentCommission" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "rewardsPoints" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ageingfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "maintenancefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "newarrfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "payofffee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prindecreasefee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bonus" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "escrow" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "insurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "mortginsurance" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "solicitorfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "disbursementfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "redemptionfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "prepayfee" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "customer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "customers" : {
                      "type" : "array",
                      "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "customerRole" : {
                            "type" : "string",
                            "description" : "Indicates role of a customer for an arrangement.",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "taxLiabilityPercentage" : {
                            "type" : "string",
                            "description" : "Tax liability percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "limitAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates percentage of limit allocated to the customer out of overall limit",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "GLAllocactionPercentage" : {
                            "type" : "string",
                            "description" : "Indicates GL allocation percentage of the customer",
                            "minLength" : 0,
                            "maxLength" : 12
                          }
                        }
                      }
                    },
                    "jointLiability" : {
                      "type" : "string",
                      "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  ",
                      "minLength" : 0,
                      "maxLength" : 1
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "principalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "activities" : {
                      "type" : "array",
                      "description" : "Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "onThisActivity" : {
                            "type" : "string",
                            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,.",
                            "minLength" : 0,
                            "maxLength" : 80
                          },
                          "recalculate" : {
                            "type" : "string",
                            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "interest" : {
                      "type" : "array",
                      "description" : "Interest amount",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixedRate" : {
                            "type" : "string",
                            "description" : "Numeric value for the interest rate entered manually.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "floatingRate" : {
                            "type" : "string",
                            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicIndex" : {
                            "type" : "string",
                            "description" : "Denotes an index which points to the right period of the securities or holdings.",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "periodicRate" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 20
                          },
                          "usagePercent" : {
                            "type" : "string",
                            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "periodicPeriodType" : {
                            "type" : "string",
                            "description" : "Specify the period which will be used to fetch the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicPeriod" : {
                            "type" : "string",
                            "description" : "Define the period which has to be used to calculate the interest rate",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "periodicMethod" : {
                            "type" : "string",
                            "description" : "Indicates the method used to calculate the interest rate for period interest setup",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "initialResetDate" : {
                            "type" : "string",
                            "description" : "Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "periodicReset" : {
                            "type" : "string",
                            "description" : "Indicates the reset period of the periodic index defined",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "linkedRateIndicator" : {
                            "type" : "string",
                            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator",
                            "minLength" : 0,
                            "maxLength" : 4
                          },
                          "minimumTierRate" : {
                            "type" : "string",
                            "description" : "A minimum interest rate can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "maximumTierRate" : {
                            "type" : "string",
                            "description" : "The maximum rate that can be applied at each tier.",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierAmount" : {
                            "type" : "string",
                            "description" : "The monetary amount for the tier.",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "tierNegativeRate" : {
                            "type" : "string",
                            "description" : "A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin",
                            "minLength" : 0,
                            "maxLength" : 12
                          },
                          "tierPercent" : {
                            "type" : "string",
                            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "rateTierType" : {
                            "type" : "string",
                            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "margins" : {
                            "type" : "array",
                            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "marginType" : {
                                  "type" : "string",
                                  "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginOperand" : {
                                  "type" : "string",
                                  "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -",
                                  "minLength" : 0,
                                  "maxLength" : 9
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "references" : {
                      "type" : "array",
                      "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customType" : {
                            "type" : "string",
                            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customName" : {
                            "type" : "string",
                            "description" : "Defines the name of the customized rate attribute to calculate the custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "customValue" : {
                            "type" : "string",
                            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "dayBasis" : {
                      "type" : "string",
                      "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "calcThreshold" : {
                      "type" : "string",
                      "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "accrualRule" : {
                      "type" : "string",
                      "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "compounding" : {
                      "type" : "string",
                      "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "compoundYieldMethod" : {
                      "type" : "string",
                      "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "minIntAmount" : {
                      "type" : "string",
                      "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "minIntWaive" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "suppressAccrual" : {
                      "type" : "string",
                      "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "linkedArrangement" : {
                      "type" : "string",
                      "description" : "The account which is linked for calculating interest that should be applied to this account",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrConvention" : {
                      "type" : "string",
                      "description" : "Define the market convention to be used as risk free rate calculation convention",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackType" : {
                      "type" : "string",
                      "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "rfrCalculationMethod" : {
                      "type" : "string",
                      "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrLookbackDays" : {
                      "type" : "string",
                      "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate",
                      "minLength" : 0,
                      "maxLength" : 2
                    },
                    "rfrSpreadTreatment" : {
                      "type" : "string",
                      "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrPeriodDayCount" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate.",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "rfrRoundingRule" : {
                      "type" : "string",
                      "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. ",
                      "minLength" : 0,
                      "maxLength" : 20
                    },
                    "referLimit" : {
                      "type" : "string",
                      "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "referToRoutine" : {
                      "type" : "string",
                      "description" : "Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation.",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "priorDays" : {
                      "type" : "string",
                      "description" : "Indicates the number of days prior to  which change product needs to be triggered from the actual change product date",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "initiationType" : {
                      "type" : "string",
                      "description" : "It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "penaltyint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "penalinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "offsetint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "officers" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "primaryOfficer" : {
                      "type" : "string",
                      "description" : "Specify the primary officer responsible for the arrangement",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "schedule" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "payment" : {
                      "type" : "array",
                      "description" : "Indicates the initiation of payment for an account",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "paymentType" : {
                            "type" : "string",
                            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                            "minLength" : 0,
                            "maxLength" : 30
                          },
                          "paymentMethod" : {
                            "type" : "string",
                            "description" : "Method chosen to make the payment",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "paymentFrequency" : {
                            "type" : "string",
                            "description" : "The frequency at which a payment is required to be generated",
                            "minLength" : 0,
                            "maxLength" : 38
                          },
                          "billType" : {
                            "type" : "string",
                            "description" : "The type of payment obligation generated",
                            "minLength" : 0,
                            "maxLength" : 15
                          },
                          "billProduced" : {
                            "type" : "string",
                            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "autoSettle" : {
                            "type" : "string",
                            "description" : "Indicates if the settlement is automatic at the Customer / Broker side",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "propertyId" : {
                                  "type" : "string",
                                  "description" : "The identifier of the product condition",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "dueFrequency" : {
                                  "type" : "string",
                                  "description" : "Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency",
                                  "minLength" : 0,
                                  "maxLength" : 38
                                }
                              }
                            }
                          },
                          "payments" : {
                            "type" : "array",
                            "description" : "Indicates the initiation of payment for an account",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "percentage" : {
                                  "type" : "string",
                                  "description" : "Percentage of holdings that can be pledged as collateral",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "startDate" : {
                                  "type" : "string",
                                  "description" : "Contains the date on which the transaction or payment gets initiated.",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "endDate" : {
                                  "type" : "string",
                                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "numberPayments" : {
                                  "type" : "string",
                                  "description" : "Specifies the number of coupon or interest payments in a year",
                                  "minLength" : 0,
                                  "maxLength" : 3
                                },
                                "calcAmount" : {
                                  "type" : "string",
                                  "description" : "System calculated Payment amount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                },
                                "actualAmount" : {
                                  "type" : "string",
                                  "description" : "One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount",
                                  "minLength" : 0,
                                  "maxLength" : 18
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "amortisationTerm" : {
                      "type" : "string",
                      "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity.",
                      "minLength" : 0,
                      "maxLength" : 4
                    },
                    "residualAmount" : {
                      "type" : "string",
                      "description" : "The amount to be paid at the maturity date",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "billsCombined" : {
                      "type" : "string",
                      "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined",
                      "minLength" : 0,
                      "maxLength" : 3
                    },
                    "recalcFrequency" : {
                      "type" : "string",
                      "description" : "This defines the payment schedule amount recalculation frequency",
                      "minLength" : 0,
                      "maxLength" : 38
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "renewal" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "commitment" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "amount" : {
                      "type" : "string",
                      "description" : "This is the payment amount",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "changeAmount" : {
                      "type" : "string",
                      "description" : "Indicates the amount by which the original commitment amount increased or decreased.",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "term" : {
                      "type" : "string",
                      "description" : "Indicates the period to which the BID and OFFER rates apply",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "revolving" : {
                      "type" : "string",
                      "description" : "Indicates if commitment is revolving or non revolving in nature",
                      "minLength" : 0,
                      "maxLength" : 10,
                      "enum" : [ "NO", "PAYMENT", "PREPAYMENT" ]
                    },
                    "updateLimit" : {
                      "type" : "string",
                      "description" : "Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default).",
                      "minLength" : 0,
                      "maxLength" : 3,
                      "enum" : [ "YES", "NO" ]
                    },
                    "maturityDate" : {
                      "type" : "string",
                      "description" : "Indicates maturity date of the contract",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "payoff" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "alerts" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "settlement" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object",
                      "properties" : {
                        "T24_time" : {
                          "type" : "integer",
                          "format" : "int32",
                          "description" : "Time taken to respond by Transact"
                        },
                        "versionNumber" : {
                          "type" : "string",
                          "description" : "Current number of the record"
                        },
                        "requestParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the request by IRIS"
                        },
                        "responseParse_time" : {
                          "type" : "number",
                          "description" : "Time taken to parse the response by IRIS"
                        }
                      }
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "settlement" : {
                      "type" : "array",
                      "description" : "Indicates settlement conditions associated with the account.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPoProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "fxSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fxSettlementCurrency" : {
                            "type" : "string",
                            "description" : "Contains the currency for which foreign exchange contra settlement account needs to be maintained",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "fxSettlementAccount" : {
                            "type" : "string",
                            "description" : "Contains the contra settlement accounts used for posting the foreign exchange offset entries",
                            "minLength" : 0,
                            "maxLength" : 35
                          }
                        }
                      }
                    },
                    "assocSettlement" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payinSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payinRule" : {
                            "type" : "string",
                            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the bills due",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "payinRCType" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "payinRCCondition" : {
                            "type" : "string",
                            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
                            "minLength" : 0,
                            "maxLength" : 35
                          },
                          "reference" : {
                            "type" : "array",
                            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "ddMandateReference" : {
                                  "type" : "string",
                                  "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
                                  "minLength" : 0,
                                  "maxLength" : 25
                                },
                                "payinAccount" : {
                                  "type" : "string",
                                  "description" : "Contains the account from which funds are to be debited against the payment type",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payinBeneficiary" : {
                                  "type" : "string",
                                  "description" : "Contains the beneficiary Id used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payinPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payment order product Id for which the payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payinActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "payout" : {
                      "type" : "array",
                      "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "payoutSettlement" : {
                            "type" : "string",
                            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes.",
                            "minLength" : 0,
                            "maxLength" : 3
                          },
                          "payoutSettlementActivity" : {
                            "type" : "string",
                            "description" : "Contains the transaction type used for settlement of the payables",
                            "minLength" : 0,
                            "maxLength" : 55
                          },
                          "property" : {
                            "type" : "array",
                            "description" : "Id of the product property",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "payoutPropertyClass" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 30
                                },
                                "payoutProperty" : {
                                  "type" : "string",
                                  "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAccount" : {
                                  "type" : "string",
                                  "description" : "The account to which a settlement amount is transferred.",
                                  "minLength" : 0,
                                  "maxLength" : 90
                                },
                                "payoutBeneficiary" : {
                                  "type" : "string",
                                  "description" : "The beneficiary that payment should be made to .",
                                  "minLength" : 0,
                                  "maxLength" : 17
                                },
                                "payoutPOProduct" : {
                                  "type" : "string",
                                  "description" : "Contains the payout payment order product for which payment is initiated",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutPercentage" : {
                                  "type" : "string",
                                  "description" : "Contains the percentage of the payment amount used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutAmount" : {
                                  "type" : "string",
                                  "description" : "Contains the finite amount of the payment used for settlement of the payables",
                                  "minLength" : 0,
                                  "maxLength" : 35
                                },
                                "payoutActivity" : {
                                  "type" : "string",
                                  "description" : "Contains the transaction type used to credit the customer account for settlement of the payables ",
                                  "minLength" : 0,
                                  "maxLength" : 55
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "paymentType" : {
                      "type" : "string",
                      "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
                      "minLength" : 0,
                      "maxLength" : 30
                    },
                    "defaultSettlementAccount" : {
                      "type" : "string",
                      "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
                      "minLength" : 0,
                      "maxLength" : 90
                    },
                    "extensions" : {
                      "type" : "object",
                      "description" : "Indicates the extensions"
                    }
                  }
                }
              }
            },
            "tax" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "pcdefer" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "periodiccharge" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "subparticipant" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}