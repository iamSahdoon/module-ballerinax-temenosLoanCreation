// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/constraint;
import ballerina/data.jsondata;
import ballerina/http;

# Represents the Headers record for the operation: getArrangementDetails
public type GetArrangementDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanOutstandingBillsResponse
public type LoanOutstandingBillsResponse record {
    QueryHeader header?;
    LoanOutstandingBillsResponseBody body?;
};

# Represents the Headers record for the operation: getOverpaymentDetails
public type GetOverpaymentDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type BNPLLoanResponseBodyActivitiesactivityName record {
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    string activity?;
    # The status of the transaction
    string transactionStatus?;
    # The Identifier of the record created
    string id?;
};

public type TakeoverloanBodyLimit record {
    # Indicates the extensions
    record {} extensions?;
    # Identifies the credit limit reference for the underlying account
    @constraint:String {maxLength: 12}
    string limitReference?;
    # The Limit amount that is actually available for use. The system limit checks are preformed against the online limit
    @constraint:String {maxLength: 19}
    string limitAmount?;
};

public type ScreenHeader record {
    # The status of the transaction
    string transactionStatus?;
    ArrangementHeaderAudit audit?;
    # The Identifier of the record created
    string id?;
    # Status of the API(success/failed)
    string status?;
    # The unique identifier/Message Reference of the record created
    string uniqueIdentifier?;
};

# Represents the Headers record for the operation: getLoanInformation
public type GetLoanInformationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type InstallmentLoanResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangmentId?;
    # Indicates the extensions
    record {} extensions?;
    # Unique identifier (contract number) of the facility
    @constraint:String {maxLength: 20}
    string facilityId?;
    # Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity
    @constraint:String {maxLength: 80}
    string activity?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    InstallmentLoanBodyCustomers[] customers?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    @constraint:String {maxLength: 11}
    string effectiveDate?;
};

# Represents the Headers record for the operation: createLoanPayoffAutoSimulation
public type CreateLoanPayoffAutoSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LinkedRateLoanResponseBodyPropertiesPrincipalint record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LinkedRateLoanBodyPrincipalint body?;
};

public type LinkedRateLoanBodyPrincipalint record {
    # If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier
    @constraint:String {maxLength: 6}
    string tiers?;
    # Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived
    @constraint:String {maxLength: 19}
    string minIntAmount?;
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    ConsumerLoanBodyReferences[] references?;
    # This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount
    @constraint:String {maxLength: 3}
    string minIntWaive?;
    # Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null
    @constraint:String {maxLength: 10}
    string suppressAccrual?;
    # The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated
    @constraint:String {maxLength: 19}
    string calcThreshold?;
    # Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations
    @constraint:String {maxLength: 35}
    string accrualRule?;
    LinkedRateLoanBodyActivites[] activites?;
    # This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year
    @constraint:String {maxLength: 15}
    string compounding?;
    # This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount
    @constraint:String {maxLength: 18}
    string referLimit?;
    # Indicates the extensions
    record {} extensions?;
    # Interest amount
    LinkedRateLoanBodyInterest[] interest?;
    # Indicates the details of periodic interest such as periodic index, periodic rate, periodic method, periodic reset, etc
    LinkedRateLoanBodyPeriodicInterest[] periodicInterest?;
    # Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate
    @constraint:String {maxLength: 8}
    string compoundYieldMethod?;
    # Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate
    @constraint:String {maxLength: 30}
    string linkedProperty?;
    # attributes
    LinkedRateLoanBodyAttributes[] attributes?;
    # Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)
    @constraint:String {maxLength: 3}
    string dayBasis?;
};

public type OverpaymentDetailsResponseBody OverpaymentDetailsResponseBodyInner[];

public type BNPLLoanResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant
    @constraint:String {maxLength: 4}
    string lineOfBusiness?;
    # Contains the reason for performing the current activity
    @constraint:String {maxLength: 100}
    string reason?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant
    @constraint:String {maxLength: 30}
    string channel?;
    # The override message is captured  that was generated at the time of commitment of the transaction to the database
    BNPLLoanBodyOverrides[] overrides?;
    # Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant
    @constraint:String {maxLength: 16}
    string branch?;
    # The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created
    @constraint:String {maxLength: 20}
    string masterArrangementId?;
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    @constraint:String {maxLength: 50}
    string alternateId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the runner Reference ID for simulation activity
    @constraint:String {maxLength: 30}
    string simulationRunReference?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc
    @constraint:String {maxLength: 35}
    string roleName?;
    # Identifier of the customer
    BNPLLoanBodyCustomerIds[] customerIds?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # Id of the product property
    BNPLLoanBodyProperties[] properties?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type BNPLLoanBodyProperties record {
    # Input is the valid field name for the metrics evaluation of alerts
    BNPLLoanBodyFields[] fields?;
    # The identifier of the product condition
    @constraint:String {maxLength: 30}
    string propertyId?;
};

public type ConsumerLoanBodyPrincipalint record {
    # Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived
    @constraint:String {maxLength: 19}
    string minIntAmount?;
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    ConsumerLoanBodyReferences[] references?;
    # Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null
    @constraint:String {maxLength: 10}
    string suppressAccrual?;
    # Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)
    @constraint:String {maxLength: 30}
    string rfrLookbackType?;
    # Define the market convention to be used as risk free rate calculation convention
    @constraint:String {maxLength: 15}
    string rfrConvention?;
    # Interest amount
    ConsumerLoanBodyInterest[] interest?;
    # Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate
    @constraint:String {maxLength: 8}
    string compoundYieldMethod?;
    # Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate
    @constraint:String {maxLength: 30}
    string linkedProperty?;
    # Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate
    @constraint:String {maxLength: 15}
    string rfrSpreadTreatment?;
    # The account which is linked for calculating interest that should be applied to this account
    @constraint:String {maxLength: 20}
    string linkedArrangement?;
    # This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount
    @constraint:String {maxLength: 3}
    string minIntWaive?;
    # Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)
    @constraint:String {maxLength: 15}
    string rfrCalculationMethod?;
    # The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated
    @constraint:String {maxLength: 19}
    string calcThreshold?;
    # Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations
    @constraint:String {maxLength: 35}
    string accrualRule?;
    # Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. 
    @constraint:String {maxLength: 20}
    string rfrRoundingRule?;
    # This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year
    @constraint:String {maxLength: 15}
    string compounding?;
    # It indicates whether the renewal activity will be triggered automatically or manually by the user. Possible values are AUTO , MANUAL
    @constraint:String {maxLength: 6}
    string initiationType?;
    # This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount
    @constraint:String {maxLength: 18}
    string referLimit?;
    # Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate
    @constraint:String {maxLength: 2}
    string rfrLookbackDays?;
    # Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate
    @constraint:String {maxLength: 15}
    string rfrPeriodDayCount?;
    # Indicates the extensions
    record {} extensions?;
    # Indicates the number of days prior to  which change product needs to be triggered from the actual change product date
    @constraint:String {maxLength: 4}
    string priorDays?;
    # Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity
    ConsumerLoanBodyActivities[] activities?;
    # Contains a routine to return the tier amounts for the first two tiers which would be used for interest calculation
    @constraint:String {maxLength: 30}
    string referToRoutine?;
    # Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)
    @constraint:String {maxLength: 3}
    string dayBasis?;
};

public type LoanDrawdownOfferBodyAssocSettlement record {
    # Contains the transaction type used by the transaction recycler for retrying the debits
    @constraint:String {maxLength: 35}
    string payinRCType?;
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    BNPLLoanBodyReference1[] reference?;
    # Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payinSettlement?;
    # Contains the transaction type used for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payinSettlementActivity?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    LoanDrawdownOfferBodyPaymentTypes[] paymentTypes?;
    # Contains the transaction recycling rules which define the set of retry conditions
    @constraint:String {maxLength: 35}
    string payinRCCondition?;
    # Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None
    @constraint:String {maxLength: 35}
    string payinRule?;
};

public type ConsumerLoanResponseBodyPropertiesOfficersBodyOfficrers record {
    # Indicates the Role of the Customer
    @constraint:String {maxLength: 30}
    string role?;
    # Other officers managing the Customer
    @constraint:String {maxLength: 4}
    string otherOfficerId?;
};

public type LoanDecreaseAmountResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanDecreaseAmountResponseBodyProperties properties?;
};

# WriteOffBalanceLoansResponse
public type WriteOffBalanceLoansResponse record {
    ArrangementHeader header?;
    WriteOffBalanceLoansResponseBody body?;
};

public type LoanBillsResponseBodyInner record {
    # Total amount
    @constraint:Number {maxValue: 19}
    decimal totalAmount?;
    # Indicates the extension data
    record {} extensions?;
    # Id of the product property
    LoanBillsResponseBodyInner_properties[] properties?;
};

public type RepaymentSimulationResponseBodyProperties record {
    RepaymentSimulationResponseBodyPropertiesSchedule schedule?;
};

# Represents the Queries record for the operation: getArrangementDetails
public type GetArrangementDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type TakeoverloanBodyPayments record {
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 30}
    string startDate?;
};

# LoanConditionsResponse
public type LoanConditionsResponse record {
    ArrangementHeader header?;
    LoanConditionsResponseBody body?;
};

public type BNPLLoanResponseBodyPropertiesInheritanceHeader record {
    string transactionStatus?;
    string id?;
    string status?;
};

# Represents the Queries record for the operation: cancelArrangement
public type CancelArrangementQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: cancelLoanDrawdownOffer
public type CancelLoanDrawdownOfferQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BNPLLoanResponseBodyPropertiesSettlement record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BNPLLoanBodySettlement1 body?;
};

public type LoanPayoffDetailsResponseBodyInner_infoPayments record {
    # Indicates the bill date of payoff bill for the perdiem amounts calculated
    string infoPayDate?;
    # Indicates the total payment amount which was made due over the tenure
    @constraint:String {maxLength: 19}
    string totPayAmount?;
    # Indicates the sum of interest amounts which was made due over the tenure
    @constraint:String {maxLength: 19}
    string totInterestAmount?;
};

public type LoanDrawdownOfferBodySettlement record {
    # Indicates the extensions
    record {} extensions?;
    # Details of the concentration account to which the surplus funds available in the sweeping account is paid out to
    BNPLLoanBodyPayout[] payout?;
    # Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type
    @constraint:String {maxLength: 90}
    string defaultSettlementAccount?;
    LoanDrawdownOfferBodyAssocSettlement[] assocSettlement?;
};

public type LoanDrawdownOfferAcceptanceResponseBody record {
    LoanDrawdownOfferResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanDrawdownOfferAcceptanceResponseBodyProperties properties?;
};

public type ConsumerLoanResponseBodyPropertiesSchedule record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanBodySchedule body?;
};

public type LoanAccountBodyAlternateIds record {
    # Contains the alternate account system identifier used for defining the alternate account Id
    @constraint:String {maxLength: 10}
    string alternateIdType?;
};

# Represents the Queries record for the operation: updateLoansCustomer
public type UpdateLoansCustomerQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# ConsumerLoanResponse
public type ConsumerLoanResponse record {
    ArrangementHeader header?;
    ConsumerLoanResponseBody body?;
};

# LoanDecreaseAmountResponse
public type LoanDecreaseAmountResponse record {
    ArrangementHeader header?;
    LoanDecreaseAmountResponseBody body?;
};

public type RepaymentSimulationResponseBodyPropertiesSchedule record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    RepaymentSimulationBodySchedule body?;
};

# Represents the Queries record for the operation: simulatePaymentHoliday
public type SimulatePaymentHolidayQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type PaymentHolidayResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the runner Reference ID for simulation activity
    @constraint:String {maxLength: 30}
    string simulationRunReference?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # This field is used to hold the notes for the reason of account closure
    PaymentHolidayBodyClosureNotes[] closureNotes?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go
    @constraint:String {maxLength: 35}
    string automaticRun?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
    # This field contains the reason for closing the account
    @constraint:String {maxLength: 35}
    string closureReason?;
};

# Represents the Headers record for the operation: updateBills
public type UpdateBillsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createLoanDisbursement
public type CreateLoanDisbursementQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type TakeoverloanBodyReference1 record {
    # Contains the finite amount of the payment used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutAmount?;
    # Contains the transaction type used to credit the customer account for settlement of the payables 
    @constraint:String {maxLength: 55}
    string payoutActivity?;
    # The account to which a settlement amount is transferred
    @constraint:String {maxLength: 90}
    string payoutAccount?;
    # Contains the percentage of the payment amount used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutPercentage?;
};

public type BNPLLoanBodyCustomer record {
    # Indicates the extensions
    record {} extensions?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    BNPLLoanBodyCustomers[] customers?;
    # Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  
    @constraint:String {maxLength: 1}
    string jointLiability?;
};

public type LoanPayoffDetailsResponseBodyInner_properties record {
    # Indicates the  property description to which benefit has been applied
    string propertyName?;
    # Indicates the payment amount which is corresponding to the product property
    @constraint:String {maxLength: 19}
    string propertyAmount?;
    # Indicates an unallocated credit amount to an account
    @constraint:String {maxLength: 19}
    string unallocatedAmount?;
};

public type LoanInterestBodyMinimumPayments record {
    # Specify the bill type for which minimum payment amount must be made due or capitalised
    @constraint:String {maxLength: 15}
    string minimumPaymentBillType?;
    # minimum amount that needs to be made due or capitalised for the associated bill type
    @constraint:String {maxLength: 18}
    string minimumPaymentAmount?;
    # Id of the product property
    LoanInterestBodyProperties[] properties?;
};

public type WriteOffLoansBodyAdjustProperties record {
    # Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors
    WriteOffLoansBodyWriteOffs[] writeOffs?;
};

# Represents the Queries record for the operation: createAutoSimulations
public type CreateAutoSimulationsQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type RepaymentDateResponseBodyProperties record {
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
};

# Represents the Queries record for the operation: initiateTakeoverloan
public type InitiateTakeoverloanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type EvidenceBodyConditions record {
    # Contains the evidence requirement of a condition which defines the document specification to be submitted when an event occurs
    @constraint:String {maxLength: 35}
    string conditionsType?;
    # Specifies the value that is identified to fulfil the metrics
    @constraint:String {maxLength: 35}
    string conditionsEvaluationValue?;
    # Specifies the operand by which the condition metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal
    @constraint:String {maxLength: 35}
    string conditionsEvaluationOperand?;
    # Specifies a valid related requirement that fulfils a metrics for the defined condition
    @constraint:String {maxLength: 35}
    string conditionsMetrics?;
    # Specifies the category on which the evidence requirement of the conditions can be grouped, e.g., FINANCIAL, LEGAL
    @constraint:String {maxLength: 35}
    string conditionsCategory?;
    # Specifies the event on which the condition must be requested
    @constraint:String {maxLength: 35}
    string conditionsDueEvent?;
    # Specifies the consequences defined when a condition is not submitted/met
    @constraint:String {maxLength: 35}
    string conditionsRestriction?;
};

# Represents the Headers record for the operation: cancelArrangement
public type CancelArrangementHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanSimulationResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance pcdefer?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesInheritance periodiccharge?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type LoanSimulationResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Contains the reason for performing the current activity
    @constraint:String {maxLength: 100}
    string reason?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Indicates that this simulation capture is a synchronous request
    @constraint:String {maxLength: 3}
    string synchronous?;
    # The override message is captured  that was generated at the time of commitment of the transaction to the database
    BNPLLoanBodyOverrides[] overrides?;
    # This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go
    @constraint:String {maxLength: 35}
    string automaticRun?;
    # The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created
    @constraint:String {maxLength: 20}
    string masterArrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the runner Reference ID for simulation activity
    @constraint:String {maxLength: 30}
    string simulationRunReference?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc
    @constraint:String {maxLength: 35}
    string roleName?;
    # Identifier of the customer
    BNPLLoanBodyCustomerIds[] customerIds?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # Id of the product property
    BNPLLoanBodyProperties[] properties?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type ConsumerLoanBodyReferences record {
    # Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency
    @constraint:String {maxLength: 35}
    string customType?;
    # Defines the value for the corresponding customized rate attribute to calculate custom rate
    @constraint:String {maxLength: 35}
    string customValue?;
    # Defines the name of the customized rate attribute to calculate the custom rate
    @constraint:String {maxLength: 35}
    string customName?;
};

public type LoanPayoffDetailsResponseBodyInner_payoffs record {
    # Indicates a date on which payoff bill has been raised
    string payoffDate?;
    # Indicates the original amount of the bill
    @constraint:String {maxLength: 19}
    string totPayoffAmount?;
    # The accrued Interest due or accrued.
    string interestAmount?;
};

# Represents the Headers record for the operation: cancelLoanDrawdownOffer
public type CancelLoanDrawdownOfferHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type EvidenceResponse1BodyInner_covenants record {
    # Specifies the category on which the evidence requirement of the covenant can be grouped, e.g., FINANCIAL, LEGAL.
    @constraint:String {maxLength: 35}
    string covenantsCategory?;
    # Specifies the evidence requirement of a covenant which defines the document specification to be submitted on a periodic basis.
    @constraint:String {maxLength: 35}
    string covenantsType?;
    # Specifies a valid related requirement that fulfils a metrics for the defined covenant.
    @constraint:String {maxLength: 35}
    string covenantsMetrics?;
    # Specifies the operand by which the covenant metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.
    @constraint:String {maxLength: 35}
    string covenantsEvaluationOperand?;
    # Specifies the value that is identified to fulfil the metrics.
    @constraint:String {maxLength: 35}
    string covenantsEvaluationValue?;
    # Specifies the start date on which the covenant must be requested. The accepted format is YYYYMMDD.
    string covenantsInitialDate?;
    # Specifies the frequency on which the covenant must be requested. The frequency could be defined as weekly, monthly, yearly, etc. The accepted format is e0Y e0M e0W e0D.
    @constraint:String {maxLength: 30}
    string covenantsFrequency?;
    # Contains the number of days the covenant must be requested before the due date.
    @constraint:Number {maxValue: 35}
    decimal covenantsNoticeDays?;
    # Specifies the consequences defined when a covenant is not submitted/met.
    @constraint:String {maxLength: 35}
    string covenantsRestriction?;
};

public type RepaymentDateChangeSimulationResponseBodyProperties record {
    LoanInterestResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
};

public type ConsumerLoanResponseBodyPropertiesActivityChargesBodyCharges record {
    # Denotes the method that needs to be applied to the rule break charges. Allowed values are Due, Defer, Capitalise. If it is set to Due then the Rule break charges are made due. If it is set to Capitalise then the Rule break charges are capitalised. If it is set to Defer then the Rule break charges are calculated but not applied immediately, charge are deferred and are collected over a period of time
    "DUE"|"CAPITALISE"|"DEFER" applicationMethod?;
    # This field aids turning off the automatic settlement for the corresponding charge. If set to yes settlement processing for the associated chage will be done based on the settlement configuration for the charge
    @constraint:String {maxLength: 3}
    string chargeAutoSettle?;
    # Denotes the application period for the given rule break charges which will be applied at the end of the period.If the value defined is zero, then the charges are applied immediately
    @constraint:String {maxLength: 4}
    string appplicationPeriod?;
};

public type LoanDetailsResponseBody LoanDetailsResponseBodyInner[];

# LoanDrawdownOfferAcceptanceResponse
public type LoanDrawdownOfferAcceptanceResponse record {
    ArrangementHeader header?;
    LoanDrawdownOfferAcceptanceResponseBody body?;
};

public type BNPLLoanBodySettlement record {
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    BNPLLoanBodyReference[] reference?;
    # Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payinSettlement?;
    # Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payoutSettlement?;
};

# Represents the Headers record for the operation: getPaymentSchedulesProjection
public type GetPaymentSchedulesProjectionHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getPaymentSchedules
public type GetPaymentSchedulesQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # End date of the loan
    string dateTo?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Start date of the loan
    string dateFrom?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: updateLoanSimulation
public type UpdateLoanSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createRepaymentSimulation
public type CreateRepaymentSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanSettlementBodyRepayment record {
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    LoanSettlementBodyReference[] reference?;
    # Contains the transaction recycling rules which define the set of retry conditions
    @constraint:String {maxLength: 35}
    string payInRCCondition?;
    # Contains the transaction type used by the transaction recycler for retrying the debits
    @constraint:String {maxLength: 35}
    string payInRCType?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    LoanDrawdownOfferBodyPaymentTypes[] paymentTypes?;
    # Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payInSettlement?;
};

public type BNPLLoanBodyReference1 record {
    # Contains the percentage of the payment amount used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinPercentage?;
    # Contains the transaction type used to debit the customer account for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payinActivity?;
    # Contains the account from which funds are to be debited against the payment type
    @constraint:String {maxLength: 90}
    string payinAccount?;
    # Contains the payment order product Id for which the payment is initiated
    @constraint:String {maxLength: 35}
    string payinPOProduct?;
    # Contains the finite amount of the payment used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinAmount?;
    # Contains the beneficiary Id used for settlement of the bills due
    @constraint:String {maxLength: 17}
    string payinBeneficiary?;
    # Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1
    @constraint:String {maxLength: 25}
    string ddMandateReference?;
};

public type EvidenceResponse1BodyInner_conditions record {
    # Specifies the category on which the evidence requirement of the conditions can be grouped, e.g., FINANCIAL, LEGAL.
    @constraint:String {maxLength: 35}
    string conditionsCategory?;
    # Contains the evidence requirement of a condition which defines the document specification to be submitted when an event occurs.
    @constraint:String {maxLength: 35}
    string conditionsType?;
    # Specifies a valid related requirement that fulfils a metrics for the defined condition.
    @constraint:String {maxLength: 35}
    string conditionsMetrics?;
    # Specifies the operand by which the condition metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal.
    @constraint:String {maxLength: 35}
    string conditionsEvaluationOperand?;
    # Specifies the consequences defined when a condition is not submitted/met
    @constraint:String {maxLength: 35}
    string conditionsRestriction?;
};

public type ConsumerLoanResponseBodyPropertiesArrangementRules record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanResponseBodyPropertiesArrangementRulesBody body?;
};

# Represents the Headers record for the operation: updateLoansCustomer
public type UpdateLoansCustomerHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type PaymentSchedulesProjectionResponseBody PaymentSchedulesProjectionResponseBodyInner[];

public type RepaymentDateChangeSimulationSchedulesResponseBody record {
    SimulationCapturesResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    RepaymentDateChangeSimulationSchedulesResponseBodyProperties properties?;
};

public type WriteOffBillLoansBodyBalanceMaintenance record {
    # Indicates the extensions
    record {} extensions?;
    # List bills of all type
    WriteOffLoansBodyBills[] bills?;
};

public type BNPLLoanBodyPayout record {
    # Contains the transaction type used for settlement of the payables
    @constraint:String {maxLength: 55}
    string payoutSettlementActivity?;
    # Id of the product property
    BNPLLoanBodyProperty[] property?;
    # Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payoutSettlement?;
};

# Represents the Headers record for the operation: updateLoanTopupAmount
public type UpdateLoanTopupAmountHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getLoanInformation
public type GetLoanInformationQueries record {
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    string alternateId?;
    # Indicates an unique identifier of an account
    string arrangementId?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Identifier of the customer
    string customerId?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type BNPLLoanResponseBodyPropertiesInheritance record {
    BNPLLoanResponseBodyPropertiesInheritanceHeader header?;
};

public type LoanSimulationResponse1BodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesInheritance itftax?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

# Represents the Headers record for the operation: getLoanPayoffDetails
public type GetLoanPayoffDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createFundsTransfer
public type CreateFundsTransferQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type SimulationCapturesResponseBodyProperties record {
    SimulationCapturesResponseBodyPropertiesPayoff payoff?;
};

# FundsTransferResponse
public type FundsTransferResponse record {
    ScreenHeader header?;
    FundsTransferResponseBody body?;
};

# CommercialLoanResponse
public type CommercialLoanResponse record {
    ArrangementHeader header?;
    CommercialLoanResponseBody body?;
};

public type TakeoverloanBodyProperty record {
    # Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 35}
    string payoutProperty?;
};

# Represents the Queries record for the operation: updateLoanConditions
public type UpdateLoanConditionsQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ChargeOffActivityResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # System ID of the originating transaction
    @constraint:String {maxLength: 6}
    string systemId?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # Indicates the unique identifier of the transaction or contract which initiated the activity
    @constraint:String {maxLength: 100}
    string contractId?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # Determines the status of events sent to external system from the current system for the given activity
    @constraint:String {maxLength: 35}
    string externalEventStatus?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type ConsumerLoanResponseBodyPropertiesAgeingfee record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanResponseBodyPropertiesAgeingfeeBody body?;
};

# Represents the Headers record for the operation: getLoanBills
public type GetLoanBillsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanDisbursementResponse
public type LoanDisbursementResponse record {
    ArrangementHeader header?;
    LoanDisbursementResponseBody body?;
};

public type LoanInterestResponseBodyPropertiesSchedule record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LoanInterestBodySchedule body?;
};

# LoanDrawdownOfferResponse
public type LoanDrawdownOfferResponse record {
    ArrangementHeader header?;
    LoanDrawdownOfferResponseBody body?;
};

public type TakeoverloanBodySchedule record {
    # Indicates the extensions
    record {} extensions?;
    # Indicates the initiation of payment for an account
    TakeoverloanBodyPayment[] payment?;
};

# Represents the Queries record for the operation: createRepaymentSchedule
public type CreateRepaymentScheduleQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: getPaymentSchedulesProjection
public type GetPaymentSchedulesProjectionQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # End date of the loan
    string dateTo?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Start date of the loan
    string dateFrom?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type LoanDetailsResponseBodyInner_schedules record {
    # Count of the paid dates for repayment.
    string paidScheduleCount?;
    # Count of the due dates for repayment.
    string dueScheduleCount?;
    # Count of the future scheduled payments involving the principal and interest for a given loan
    string futureScheduleCount?;
    # Indicates payment schedule type
    string schedulePaymentType?;
    # Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain.
    string schedulePaymentMethod?;
    # Denotes the property of the loans schedule
    string scheduleProperty?;
    # Contains the amount payable in the schedule
    decimal schedulePaymentAmount?;
    # Indicates the frequency associated - Eg. Pay to customer or paid by bank
    string schedulePaymentFrequency?;
};

public type BillsBodyBalanceMaintenance record {
    # Indicates the extensions
    record {} extensions?;
    # Denotes the description for the adjustment
    @constraint:String {maxLength: 35}
    string adjustmentDisplayname?;
    # List bills of all type
    BillsBodyBills[] bills?;
};

public type ConsumerLoanResponseBodyPropertiesActivityChargesBody record {
    # Indicates the extensions
    record {} extensions?;
    # Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity
    ConsumerLoanResponseBodyPropertiesActivityChargesBodyActivities[] activities?;
};

public type ChangeProductResponseBodyPropertiesAccount record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LoanSimulationBodyAccount body?;
};

# Represents the Queries record for the operation: updateLoanInterest
public type UpdateLoanInterestQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ConsumerLoanResponseBodyPropertiesArrangementRulesBodyRules record {
    # Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas
    @constraint:String {maxLength: 20}
    string balanceType?;
    # Name of the validation rule to be checked against an online or periodic activity
    @constraint:String {maxLength: 35}
    string ruleName?;
    # Contains the periodic value for a specific product condition
    @constraint:String {maxLength: 35}
    string periodicValue?;
};

# Represents the Queries record for the operation: getOverpaymentDetails
public type GetOverpaymentDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# WriteOffLoansResponse
public type WriteOffLoansResponse record {
    ArrangementHeader header?;
    WriteOffLoansResponseBody body?;
};

public type PaymentHolidaySimResponseBodyInner_paymentHoliday record {
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 35}
    string paymentType?;
    # The type of payment obligation generated
    @constraint:String {maxLength: 11}
    string billType?;
    # Contains the date on which the transaction or payment gets initiated.
    @constraint:String {maxLength: 11}
    string startDate?;
    # Contains the details of holiday period. It includes holiday date , original payment amount, new payment amount etc.
    PaymentHolidaySimResponseBodyInner_holidayPeriod[] holidayPeriod?;
};

# Represents the Headers record for the operation: getPaymentSchedules
public type GetPaymentSchedulesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# PaymentSchedulesResponse
public type PaymentSchedulesResponse record {
    QueryHeader header?;
    PaymentSchedulesResponseBody body?;
};

public type LoanSettlementResponseBodyProperties record {
    LoanSettlementResponseBodyPropertiesSettlement settlement?;
};

public type BNPLLoanBodyAprTypes record {
    # Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest
    @constraint:String {maxLength: 30}
    string aprType?;
    # Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type
    @constraint:String {maxLength: 35}
    string aprRate?;
};

# Represents the Queries record for the operation: updateBalance
public type UpdateBalanceQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ConsumerLoanResponseBodyPropertiesActivityChargesBodyActivities record {
    # The charges or fees for this transaction
    ConsumerLoanResponseBodyPropertiesActivityChargesBodyCharges[] charges?;
};

public type ConsumerLoanResponseBodyPropertiesAccount record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanBodyAccount body?;
};

public type LoanCollateralsResponseBodyInner record {
    # Contains the name of the collateral
    @constraint:String {maxLength: 3}
    string collateralName?;
    # This indicates the  date  on which the offer or privilege terminates for the event
    string expiryDate?;
    # Denotes the value given by any individual who does not have a direct connection with a legal transaction but might be affected by it
    @constraint:Number {maxValue: 19}
    decimal thirdPartyValue?;
    # Indicates the extension data
    record {} extensions?;
    # Holds the total amount
    decimal netAmount?;
    # Denotes the sum of the Quantity
    @constraint:Number {maxValue: 19}
    decimal netNominal?;
    # Denotes the value for signing the document at what is commonly referred to as the closing of the sale
    @constraint:Number {maxValue: 19}
    decimal executionValue?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
};

# ChargeOffActivityResponse
public type ChargeOffActivityResponse record {
    ArrangementHeader header?;
    ChargeOffActivityResponseBody body?;
};

# Represents the Headers record for the operation: createLoanDisbursement
public type CreateLoanDisbursementHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: updateLoanDecreaseAmount
public type UpdateLoanDecreaseAmountQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# RepaymentDateChangeSimulationResponse
public type RepaymentDateChangeSimulationResponse record {
    ArrangementHeader header?;
    RepaymentDateChangeSimulationResponseBody body?;
};

public type LoanOverviewResponseBody LoanOverviewResponseBodyInner[];

# RepaymentDateResponse
public type RepaymentDateResponse record {
    ArrangementHeader header?;
    RepaymentDateResponseBody body?;
};

public type LoanPayoffSimulationResponseBody record {
    LoanSimulationResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanPayoffSimulationResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: initiateTakeoverloan
public type InitiateTakeoverloanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanInformationResponseBodyInner record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 17}
    string arrangementId?;
    # Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc
    @constraint:String {maxLength: 15}
    string arrangementStatus?;
    # Indicates the interest rate of the loan
    string loanInterestRate?;
    # Indicates the loan commencement date
    string loanStartDate?;
    # Indicates the type of role of a customer
    string roleDisplayName?;
    # Indicates loan amount
    decimal loanAmount?;
    # Indicates the interest rate type - Eg. Fixed, floating, periodic
    string loanInterestType?;
    # Product name of the bank for this account, proprietary definition
    @constraint:String {maxLength: 30}
    string productName?;
    # Indicates the outstanding balance of the loan
    decimal loanBalance?;
    # Indicates the next payment date for the loan
    string loanNextPayDate?;
    # Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account
    decimal availableBalance?;
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    @constraint:String {maxLength: 36}
    string alternateId?;
    # Indicates the short name of Customer
    @constraint:String {maxLength: 10}
    string customerShortName?;
    # Indicates the extension data
    record {} extensions?;
    # The loan account product
    @constraint:String {maxLength: 30}
    string loanProduct?;
    # Indicates the loan account id of an individual customer
    @constraint:String {maxLength: 35}
    string loanAccountId?;
    # Indicates the currency of the loan
    @constraint:String {maxLength: 3}
    string loanCurrency?;
    # Indicates the loan maturity date
    string loanEndDate?;
};

public type WriteOffBalanceLoansResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    WriteOffBalanceLoansResponseBodyProperties properties?;
};

public type WriteOffLoansBodyWriteOffs record {
    # Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors
    @constraint:String {maxLength: 15}
    string writeOff?;
};

public type ConsumerLoanResponseBodyPropertiesAgeingfeeBody record {
    # Indicates the extensions
    record {} extensions?;
    # Specified the fixed charge amount to be collected
    @constraint:String {maxLength: 19}
    string flatCharge?;
};

public type ChangeProductResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance drawingfee?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance exchRate?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyintrfr?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance balanceMaintenance?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance commitment?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance pricinggrid?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    ChangeProductResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type LinkedRateLoanBodyAgentArrangementIds record {
    # The id of the arrangement with the 3rd party that has sold the product on behalf of the institution
    @constraint:String {maxLength: 17}
    string agentArrangementId?;
};

public type LoanSettlementBodyReference record {
    # Contains the percentage of the payment amount used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payInPercentage?;
    # Contains the payment order product Id for which the payment is initiated
    @constraint:String {maxLength: 35}
    string payInPoProduct?;
    # Contains the transaction type used to debit the customer account for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payInActivity?;
    # Contains the account from which funds are to be debited against the payment type
    @constraint:String {maxLength: 90}
    string payInAccount?;
    # Contains the finite amount of the payment used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payInAmount?;
    # Contains the beneficiary Id used for settlement of the bills due
    @constraint:String {maxLength: 17}
    string payInBeneficiary?;
    # Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1
    @constraint:String {maxLength: 25}
    string ddMandateReference?;
};

public type ConsumerLoanBodyPayment record {
    # If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days
    @constraint:String {maxLength: 3}
    string billProduced?;
    # Indicates if the settlement is automatic at the Customer / Broker side
    @constraint:String {maxLength: 35}
    string autoSettle?;
    # The type of payment obligation generated
    @constraint:String {maxLength: 15}
    string billType?;
    # Indicates the initiation of payment for an account
    ConsumerLoanBodyPayments[] payments?;
    # Id of the product property
    ConsumerLoanBodyProperty[] property?;
    # Method chosen to make the payment
    @constraint:String {maxLength: 10}
    string paymentMethod?;
    # The frequency at which a payment is required to be generated
    @constraint:String {maxLength: 38}
    string paymentFrequency?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 30}
    string paymentType?;
};

# Represents the Headers record for the operation: updateLoanInterest
public type UpdateLoanInterestHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: initiateWriteOffBillLoans
public type InitiateWriteOffBillLoansHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanInterestResponseBody record {
    LoanConditionsResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanInterestResponseBodyProperties properties?;
};

public type TakeoverloanResponseBodyPropertiesLimit record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    TakeoverloanBodyLimit body?;
};

# Represents the Headers record for the operation: createFundsTransfer
public type CreateFundsTransferHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type EvidenceResponseBodyProperties record {
    EvidenceResponseBodyPropertiesEvidence evidence?;
};

# Represents the Queries record for the operation: getLoanOutstandingBills
public type GetLoanOutstandingBillsQueries record {
    # Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans
    string outstandingAmount?;
    # Identifies settled transaction
    string settled?;
    # Indicates the bill amount during the ageing status(Bill which crossed the due date)
    string delinquentAmount?;
    # Indicates a date on which a bill has been raised
    string billDate?;
    # Date that the payment has been deferred to
    string deferDate?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    string paymentType?;
    # Indicates the bill amount
    string billedAmount?;
    # Defines the status of the settlement for the incoming MT548 swift message.The values allowed are: Waiting : pending to receive settlement status update meaning pending to receive MT548 swift message,  Action required : awaiting action to be performed to get the final update on settlement status.Matched : transactions whose nominals have matched with the depository position
    string settlementStatus?;
    # Indicates the ageing status of a bill
    string agingStatus?;
    # Indicates whether advance payment made is set on an account
    string advancePayment?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Id of the product property
    string property?;
    # Indicates the status of a bill(Issued,Due,Ageing,Settled)
    string billStatus?;
    # Indicates a bill which is raised when a loan is paid off
    string infoPayType?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Method chosen to make the payment
    string paymentMethod?;
    # Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231
    string paymentDate?;
    # Indicates if the file is of type simulation or live
    string fileVersion?;
    # Indicates the reference id for simulation activity
    string simulationReference?;
    # Indicates whether its a credit/debit type of bill
    string paymentIndicator?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type CommercialLoanResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    CommercialLoanResponseBodyProperties properties?;
};

public type LinkedRateLoanResponseBodyArrangementActivity record {
    # Contains the reason for performing the current activity
    @constraint:String {maxLength: 100}
    string reason?;
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangmentId?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing
    @constraint:String {maxLength: 35}
    string pricingSelection?;
    # Indicates the Rewards account id assigned to a financial account(Loans,Deposits)
    @constraint:String {maxLength: 17}
    string rewardsArrangementId?;
    # Indicates the trade date in yyyymmdd format
    @constraint:String {maxLength: 11}
    string tradeDate?;
    # Contains the identifier used for the role played by the party or customer in the contract or account
    LinkedRateLoanBodyPartyRoles[] partyRoles?;
    # The id of the arrangement with the 3rd party that has sold the product on behalf of the institution
    LinkedRateLoanBodyAgentArrangementIds[] agentArrangementIds?;
    # It is a date on/upon which an account is considered to take effect
    @constraint:String {maxLength: 11}
    string arrangementEffectiveDate?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    LinkedRateLoanBodyPartyIds[] partyIds?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # The role of the 3rd party, select from standard list
    LinkedRateLoanBodyAgentRoles[] agentRoles?;
    # Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment
    @constraint:String {maxLength: 35}
    string pricingPlan?;
    # Indicates the extensions
    record {} extensions?;
    # The id of the 3rd party who sold the product on behalf of the institution
    LinkedRateLoanBodyAgentCustomerIds[] agentCustomerIds?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer
    @constraint:String {maxLength: 15}
    string productVariation?;
};

public type BNPLLoanBodyOverrides record {
    # The override message is captured  that was generated at the time of commitment of the transaction to the database
    @constraint:String {maxLength: 35}
    string override?;
};

public type ExternalEventStatusResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Contains the arrangement activity reference identifier
    @constraint:String {maxLength: 40}
    string arrangementActivityId?;
    # Determines the status of events sent to external system from the current system for the given activity
    string externalEventStatus?;
    # The unique identifier of an compensatory activity triggered for the given activity
    string adjustmentActivityReference?;
};

public type BalanceResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    BalanceResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: createpersonalLoans
public type CreatepersonalLoansHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanDrawdownOfferRenegotiationResponse
public type LoanDrawdownOfferRenegotiationResponse record {
    ArrangementHeader header?;
    LoanDrawdownOfferRenegotiationResponseBody body?;
};

public type ConsumerLoanResponseBodyPropertiesOfficers record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanResponseBodyPropertiesOfficersBody body?;
};

# Represents the Headers record for the operation: createCommercialLoan
public type CreateCommercialLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanDrawdownOfferResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment
    @constraint:String {maxLength: 35}
    string pricingPlan?;
    # Indicates the extensions
    record {} extensions?;
    # Unique identifier (contract number) of the facility
    @constraint:String {maxLength: 20}
    string facilityId?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity
    @constraint:String {maxLength: 80}
    string activity?;
    # If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing
    @constraint:String {maxLength: 35}
    string pricingSelection?;
    # Indicates the date on which the offer is executed
    string offerDate?;
    # Indicates the Rewards account id assigned to a financial account(Loans,Deposits)
    @constraint:String {maxLength: 17}
    string rewardsArrangementId?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    InstallmentLoanBodyCustomers[] customers?;
    # Indicates the date on which the drawdown contract is created
    string drawdownDate?;
};

public type ConsumerLoanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    ConsumerLoanResponseBodyPropertiesArrangementRules arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance closureDefer?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesSettlement settlement?;
    ConsumerLoanResponseBodyPropertiesActivityCharges activityCharges?;
    ConsumerLoanResponseBodyPropertiesAgeingfee payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    ConsumerLoanResponseBodyPropertiesOfficers officers?;
    ConsumerLoanResponseBodyPropertiesAgeingfee newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance refundfee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    ConsumerLoanResponseBodyPropertiesAgeingfee ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    ConsumerLoanResponseBodyPropertiesPayoff payoff?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance prefpricing?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    ConsumerLoanResponseBodyPropertiesAgeingfee disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    ConsumerLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
};

# WriteOffBillLoansResponse
public type WriteOffBillLoansResponse record {
    ArrangementHeader header?;
    WriteOffBillLoansResponseBody body?;
};

public type BNPLLoanBodyAlternateIds record {
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    @constraint:String {maxLength: 36}
    string alternateId?;
    # Contains the alternate account system identifier used for defining the alternate account Id
    @constraint:String {maxLength: 10}
    string alternateIdType?;
};

public type ConsumerLoanResponseBodyPropertiesPayoffBody record {
    # This is the payment amount
    ConsumerLoanResponseBodyPropertiesPayoffBodyAmount[] amount?;
    # Indicates the extensions
    record {} extensions?;
    # Percentage of holdings that can be pledged as collateral
    @constraint:String {maxLength: 12}
    string percentage?;
    # Refers to view or cancel options
    @constraint:String {maxLength: 9}
    string action?;
    # Contains the period within which the locked rate needs to be availed
    @constraint:String {maxLength: 3}
    string expiryDays?;
    # Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically
    @constraint:String {maxLength: 3}
    string settleDues?;
};

public type LoanOverviewResponseBodyInner_interests record {
    # Identifies the bid rate of the related currency for the defined time period
    string interestRate?;
    # Indicates the interest property name
    string interestProperty?;
    # Contains the property name of loan interest such as penalty Interest and principal interest.
    string interestPropertyName?;
    # Contains the frequency type of compound in loan. For example, annually or monthly.
    string compoundType?;
    # Indicates whether the rate is fixed or floating rate.
    string rateType?;
    # Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value
    string effectiveRate?;
    # Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level
    string tierType?;
    # Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.
    string balanceTypes?;
    # Amount of the balance
    decimal balanceAmount?;
};

public type LoanPayoffSimulationResponseBodyProperties record {
    ConsumerLoanResponseBodyPropertiesPayoff payoff?;
};

public type BNPLLoanResponseBodyPropertiesAccountHeaderAudit record {
    # Time taken to respond by Transact
    @jsondata:Name {value: "T24_time"}
    int:Signed32 t24Time?;
    # Time taken to parse the response by IRIS
    @jsondata:Name {value: "responseParse_time"}
    decimal responseParseTime?;
    # Current number of the record
    string versionNumber?;
    # Time taken to parse the request by IRIS
    @jsondata:Name {value: "requestParse_time"}
    decimal requestParseTime?;
};

public type LinkedRateLoanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance purchasepremium?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance originationfee?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance purchasediscoun?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    LinkedRateLoanResponseBodyPropertiesPrincipalint principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance princiamort?;
    BNPLLoanResponseBodyPropertiesInheritance restructure?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance penamort?;
    BNPLLoanResponseBodyPropertiesInheritance commitmentcost?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance directcost?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance prefpricing?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance commitmentfees?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type RepaymentSimulationBodySchedule record {
    # Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity
    @constraint:String {maxLength: 4}
    string amortisationTerm?;
    # Customer is eligible for requesting payment holiday upto the limit amount specified here
    "Repayment Holiday Limit" repaymentHolidayLimit?;
    # Indicates the extensions
    record {} extensions?;
    # The amount to be paid at the maturity date
    @constraint:String {maxLength: 18}
    string residualAmount?;
    # Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied
    @constraint:String {maxLength: 20}
    string baseDayKey?;
    # Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined
    "Combine Bills" combineBills?;
    # Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type
    @constraint:String {maxLength: 15}
    string minimumPayment?;
    # Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type
    "Holiday Restrict Item" holidayRestrictItem?;
    # This defines the payment schedule amount recalculation frequency
    "Recalc Frequency" recalcFrequency?;
    # Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type
    "Holiday Restrict Type" holidayRestrictType?;
    # Contains the user defined rule definition which is evaluated during the transaction based on the defined period
    "Periodic Attribute" periodicAttribute?;
};

public type MortgageBodySchedule record {
    # Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity
    @constraint:String {maxLength: 4}
    string amortisationTerm?;
    # Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined
    @constraint:String {maxLength: 3}
    string billsCombined?;
    # Indicates the extensions
    record {} extensions?;
    # The amount to be paid at the maturity date
    @constraint:String {maxLength: 18}
    string residualAmount?;
    # Indicates the initiation of payment for an account
    ConsumerLoanBodyPayment[] payment?;
    # Indicates the date from when the instruction or condition is effective
    @constraint:String {maxLength: 30}
    string effectiveFromDate?;
    # This defines the payment schedule amount recalculation frequency
    @constraint:String {maxLength: 38}
    string recalcFrequency?;
};

# Represents the Headers record for the operation: createConsumerLoan
public type CreateConsumerLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ConsumerLoanBodySchedule record {
    # Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity
    @constraint:String {maxLength: 4}
    string amortisationTerm?;
    # Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined
    @constraint:String {maxLength: 3}
    string billsCombined?;
    # Indicates the extensions
    record {} extensions?;
    # The amount to be paid at the maturity date
    @constraint:String {maxLength: 18}
    string residualAmount?;
    # Indicates the initiation of payment for an account
    ConsumerLoanBodyPayment[] payment?;
    # This defines the payment schedule amount recalculation frequency
    @constraint:String {maxLength: 38}
    string recalcFrequency?;
};

public type LoanInterestBodySchedule record {
    # Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity
    @constraint:String {maxLength: 4}
    string amortisationTerm?;
    # Indicates the extensions
    record {} extensions?;
    # The amount to be paid at the maturity date
    @constraint:String {maxLength: 18}
    string residualAmount?;
    # Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied
    @constraint:String {maxLength: 20}
    string baseDayKey?;
    # If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days
    @constraint:String {maxLength: 3}
    string billLeadDays?;
    # Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type
    LoanInterestBodyHolidayRestrictTypes[] holidayRestrictTypes?;
    # Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date
    @constraint:String {maxLength: 4}
    string finaliseBill?;
    # Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation
    @constraint:String {maxLength: 11}
    string includeFutureDisbursement?;
    # Indicates the initiation of payment for an account
    LoanInterestBodyPayment[] payment?;
    # This defines the payment schedule amount recalculation frequency
    @constraint:String {maxLength: 38}
    string recalcFrequency?;
    # Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type
    LoanInterestBodyMinimumPayments[] minimumPayments?;
};

public type TakeoverloanBodyPayment record {
    # Indicates the initiation of payment for an account
    TakeoverloanBodyPayments[] payments?;
    # Method chosen to make the payment
    @constraint:String {maxLength: 10}
    string paymentMethod?;
    # The frequency at which a payment is required to be generated
    @constraint:String {maxLength: 38}
    string paymentFrequency?;
};

# Represents the Headers record for the operation: initiateWriteOffLoans
public type InitiateWriteOffLoansHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type TakeoverloanBodyPropertyClass record {
    # Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 30}
    string payoutPropertyClass?;
};

public type ArrangementHeaderAudit record {
    # Time taken to respond by Transact
    @jsondata:Name {value: "T24_time"}
    int:Signed32 t24Time?;
    # Time taken to parse the response by IRIS
    @jsondata:Name {value: "responseParse_time"}
    decimal responseParseTime?;
    # The CURR.NO. of the record
    string versionNumber?;
    # Time taken to parse the request by IRIS
    @jsondata:Name {value: "requestParse_time"}
    decimal requestParseTime?;
};

public type BNPLLoanBodyFields record {
    # The name of the field
    @constraint:String {maxLength: 35}
    string fieldName?;
    # Indicates the field value of the arrangement property
    @constraint:String {maxLength: 500}
    string fieldValue?;
};

public type PaymentSchedulesResponseBody PaymentSchedulesProjectionResponseBodyInner[];

# Represents the Headers record for the operation: createChargeOffActivity
public type CreateChargeOffActivityHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanDetailsResponseBodyInner record {
    # Indicates an unique identifier of an account
    string arrangementId?;
    # Name of Joint Customer
    string jointCustomerName?;
    # Indicates the original total paid amount
    decimal lastPaidAmount?;
    # Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges
    string coolingOffDate?;
    # Contains the total number of credits
    string totalCredits?;
    # Date last payment was made
    string lastPaidDate?;
    # Contains the total withdrawal amount on hold until payment execution date
    decimal pendingWithdrawals?;
    # Indicates a date or period within which an account gets matured
    string maturesIn?;
    # Indicates the total amount which will be lent or deposited for the term
    decimal commitmentBalance?;
    # Indicates maturity date of the contract
    string maturityDate?;
    # Indicates where this pool may be run either online or End of the day
    LoanDetailsResponseBodyInner_schedules[] schedules?;
    # Indicates the period to which the BID and OFFER rates apply
    string term?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    string currencyId?;
    # Request for loans settlement
    string payoffRequest?;
    # Contains the total number of debits
    string totalDebits?;
    # Indicates next payment date for the contract
    string nextPaymentDate?;
    # Contains the virtual balance of the collateral
    string virtualBalance?;
    # Indicates the sum of debit transaction amounts that are yet to be processed and placed as holds on accounts, but will not be available for use
    decimal pendingDeposit?;
    # Indicates the name of the customer. Originator is the party who requests the payment cancellation
    string customerName?;
    # This is the BIC code of the institution where beneficiary holds an account
    string accountWithBankBIC?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the total due amount
    string totalDueAmount?;
    # Last committed transaction
    string lastPayment?;
    # Interest amount
    LoanDetailsResponseBodyInner_interests[] interests?;
    # Contains the date on which the transaction or payment gets initiated
    string startDate?;
    # Indicates the payment amount to be settled in the next schedule
    decimal nextPaymentAmount?;
};

# Represents the Headers record for the operation: createInstallmentLoan
public type CreateInstallmentLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type TakeoverloanBodyRepayment record {
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    TakeoverloanBodyReference[] reference?;
    # Contains the transaction type used for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payInSettlementActivity?;
    # Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None
    @constraint:String {maxLength: 35}
    string payInRule?;
    # Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payinSettlement?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    LoanDrawdownOfferBodyPaymentTypes[] paymentTypes?;
};

public type SimulationCapturesResponseBody record {
    SimulationCapturesResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    SimulationCapturesResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: updateBalance
public type UpdateBalanceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanDrawdownOfferResponse1Body record {
    LoanDrawdownOfferResponse1BodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    record {} properties?;
};

public type WriteOffLoansBodyBalanceMaintenance record {
    # Indicates the extensions
    record {} extensions?;
    # Denotes the description for the adjustment
    @constraint:String {maxLength: 35}
    string adjustmentDisplayname?;
    # List bills of all type
    WriteOffLoansBodyBills[] bills?;
    # Indicates the interest or account or charge properties for which balances are to be captured or adjusted
    WriteOffLoansBodyAdjustProperties[] adjustProperties?;
};

public type BNPLLoanResponseBodyPropertiesAccountHeader record {
    # The status of the transaction
    string transactionStatus?;
    BNPLLoanResponseBodyPropertiesAccountHeaderAudit audit?;
    # The Identifier of the record created
    string id?;
    # The status of the record
    string status?;
};

# Represents the Headers record for the operation: createRepaymentDateChangeSimulation
public type CreateRepaymentDateChangeSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type BalanceBodyBalanceMaintenance record {
    # Indicates the extensions
    record {} extensions?;
    # Denotes the description for the adjustment
    @constraint:String {maxLength: 35}
    string adjustmentDisplayname?;
    # Indicates the interest or account or charge properties for which balances are to be captured or adjusted
    BalanceBodyAdjustProperties[] adjustProperties?;
};

public type LoanPayoffDetailsResponseBody LoanPayoffDetailsResponseBodyInner[];

# LinkedRateLoanResponse
public type LinkedRateLoanResponse record {
    ArrangementHeader header?;
    LinkedRateLoanResponseBody body?;
};

public type SimulationCapturesBodyAmount record {
    # Indicates the monetary amount that is fixed during the associated account's effective period
    @constraint:String {maxLength: 19}
    string fixedamount?;
};

public type LoanDrawdownOfferResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance pcdefer?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    LoanDrawdownOfferResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance balanceMaintenance?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance periodiccharge?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type LoanDrawdownOfferResponseBodyPropertiesSettlement record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LoanDrawdownOfferBodySettlement body?;
};

public type LoanSettlementResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanSettlementResponseBodyProperties properties?;
};

# BalanceResponse
public type BalanceResponse record {
    ArrangementHeader header?;
    BalanceResponseBody body?;
};

# Represents the Headers record for the operation: createMortgage
public type CreateMortgageHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanTopupAmountResponse
public type LoanTopupAmountResponse record {
    ArrangementHeader header?;
    LoanTopupAmountResponseBody body?;
};

public type LoanInterestResponseBodyProperties record {
    LoanInterestResponseBodyPropertiesSchedule schedule?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penaltyint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penalinterest?;
    ConsumerLoanResponseBodyPropertiesPrincipalint offsetint?;
};

public type LoanSimulationResponse1Body record {
    LoanSimulationResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanSimulationResponse1BodyProperties properties?;
};

public type ConsumerLoanResponseBodyPropertiesActivityCharges record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanResponseBodyPropertiesActivityChargesBody body?;
};

public type LinkedRateLoanBodyAgentCustomerIds record {
    # The id of the 3rd party who sold the product on behalf of the institution
    @constraint:String {maxLength: 10}
    string agentCustomerId?;
};

public type WriteOffBalanceLoansBodyBalanceMaintenance record {
    # Indicates the extensions
    record {} extensions?;
    # Indicates the interest or account or charge properties for which balances are to be captured or adjusted
    WriteOffBalanceLoansBodyAdjustProperties[] adjustProperties?;
};

public type LoanOverviewResponseBodyInner record {
    # Indicates an unique identifier of an account
    string arrangementId?;
    # Indicates next payment date for the contract
    string nextPaymentDate?;
    # Contains the virtual balance of the collateral
    string virtualBalance?;
    # Count of the paid dates for repayment
    string paidScheduleCount?;
    # Count of the future scheduled payments involving the principal and interest for a given loan
    string futureScheduleCount?;
    # Indicates cooling off period for an account until which pre-closure can be triggered without incurring any fees or charges
    string coolingOffDate?;
    # Count of the due dates for repayment
    string dueScheduleCount?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates a date or period within which an account gets matured
    string maturesIn?;
    # Indicates maturity date of the contract
    string maturityDate?;
    # Indicates where this pool may be run either online or End of the day
    LoanOverviewResponseBodyInner_schedules[] schedules?;
    # Last committed transaction
    string lastPayment?;
    # Indicates the period to which the BID and OFFER rates apply
    string term?;
    # Interest amount
    LoanOverviewResponseBodyInner_interests[] interests?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    string currencyId?;
    # Contains the date on which the transaction or payment gets initiated
    string startDate?;
    # Indicates the payment amount to be settled in the next schedule
    decimal nextPaymentAmount?;
    # Request for loans settlement
    string payoffRequest?;
};

# Represents the Headers record for the operation: getExternalEventStatus
public type GetExternalEventStatusHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createConsumerLoan
public type CreateConsumerLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanTopupAmountResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanTopupAmountResponseBodyProperties properties?;
};

# Represents the Queries record for the operation: createLoanDrawdownOfferRenegotiation
public type CreateLoanDrawdownOfferRenegotiationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ArrangementResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the extensions
    record {} extensions?;
    # Determines the status of events sent to external system from the current system for the given activity
    @constraint:String {maxLength: 35}
    string externalEventStatus?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

# Represents the Queries record for the operation: getLoanBills
public type GetLoanBillsQueries record {
    # The type of payment obligation generated
    string billType?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231
    string paymentDate?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: initiateWriteOffBalanceLoans
public type InitiateWriteOffBalanceLoansHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanInterestBodyPayment record {
    # Indicates the initiation of payment for an account
    LoanInterestBodyPayments[] payments?;
    # Method chosen to make the payment
    @constraint:String {maxLength: 10}
    string paymentMethod?;
    # The frequency at which a payment is required to be generated
    @constraint:String {maxLength: 38}
    string paymentFrequency?;
};

public type WriteOffLoansResponseBodyPropertiesBalanceMaintenance record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    WriteOffLoansBodyBalanceMaintenance body?;
};

# ChangeProductResponse
public type ChangeProductResponse record {
    ArrangementHeader header?;
    ChangeProductResponseBody body?;
};

public type MortgageResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    MortgageResponseBodyProperties properties?;
};

public type TakeoverloanBodyReference record {
    # Contains the percentage of the payment amount used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinPercentage?;
    # Contains the transaction type used to debit the customer account for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payinActivity?;
    # Contains the account from which funds are to be debited against the payment type
    @constraint:String {maxLength: 90}
    string payinAccount?;
    # Contains the finite amount of the payment used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinAmount?;
};

# LoanPayoffAutoSimulationResponse
public type LoanPayoffAutoSimulationResponse record {
    ArrangementHeader header?;
    LoanPayoffAutoSimulationResponseBody body?;
};

public type LoanSettlementResponseBodyPropertiesSettlement record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LoanSettlementBodySettlement body?;
};

public type RepaymentSimulationResponseBody record {
    SimulationCapturesResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    RepaymentSimulationResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: getLoanOverview
public type GetLoanOverviewHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type AutoSimulationsResponseBodyPropertiesOfficers record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanBodyOfficers body?;
};

public type ConsumerLoanBodyMargins record {
    # This is the rate applied over the default interest rate or commission rate to achieve the actual rate
    @constraint:String {maxLength: 12}
    string marginRate?;
    # Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -
    @constraint:String {maxLength: 9}
    string marginOperand?;
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    @constraint:String {maxLength: 15}
    string marginType?;
};

# Represents the Headers record for the operation: getLoanOutstandingBills
public type GetLoanOutstandingBillsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createpersonalLoans
public type CreatepersonalLoansQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanInterestBodyHolidayRestrictTypes record {
    # Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type
    @constraint:String {maxLength: 35}
    string holidayRestrictType?;
    # Contains the payment reference and details for each bulk record
    LoanInterestBodyItems[] items?;
};

public type WriteOffLoansBodyAdjustAmortAmounts record {
    # Indicates the outstanding bill amount of a given property for a payment type
    @constraint:String {maxLength: 19}
    string outstandingAmortAmount?;
    # Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised
    @constraint:String {maxLength: 19}
    string newAmortizationAmount?;
    # Indicates the amortisation end date for an amortisation type of charge
    @constraint:String {maxLength: 11}
    string amortEndDate?;
};

public type ConsumerLoanBodyPartyIds record {
    # Contains the identifier used for the role played by the party or customer in the contract or account
    @constraint:String {maxLength: 30}
    string partyRole?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 10}
    string partyId?;
};

public type AutoSimulationsResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance pcdefer?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    AutoSimulationsResponseBodyPropertiesOfficers officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    BNPLLoanResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    ConsumerLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesInheritance periodiccharge?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
};

public type ConsumerLoanResponseBodyPropertiesPrincipalint record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanBodyPrincipalint body?;
};

public type LinkedRateLoanBodyPeriodicInterest record {
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    LinkedRateLoanBodyMargins1[] margins?;
    # Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates
    @constraint:String {maxLength: 30}
    string initialResetDate?;
    # Indicates the reset period of the periodic index defined
    @constraint:String {maxLength: 30}
    string periodicReset?;
    # Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value
    @constraint:String {maxLength: 19}
    string effectiveRate?;
    # A negative interest rate can be applied at each tier, select Yes, No, Block margin
    @constraint:String {maxLength: 12}
    string negativeRate?;
    # Indicates the method used to calculate the interest rate for period interest setup
    @constraint:String {maxLength: 15}
    string periodicMethod?;
    # Specify the period which will be used to fetch the interest rate
    @constraint:String {maxLength: 20}
    string periodicRate?;
    # Specify the period which will be used to fetch the interest rate
    @constraint:String {maxLength: 15}
    string periodicPeriodType?;
    # Define the period which has to be used to calculate the interest rate
    @constraint:String {maxLength: 15}
    string periodicPeriod?;
    # Denotes an index which points to the right period of the securities or holdings
    @constraint:String {maxLength: 4}
    string periodicIndex?;
};

public type LoanSimulationBodyAccountNames record {
    # Display name or short name of the account specified
    @constraint:String {maxLength: 70}
    string accountName?;
};

public type LoanDrawdownOfferRenegotiationResponseBody record {
    LoanDrawdownOfferResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanDrawdownOfferRenegotiationResponseBodyProperties properties?;
};

# LoansCustomerResponse
public type LoansCustomerResponse record {
    ArrangementHeader header?;
    LoansCustomerResponseBody body?;
};

public type LoanSettlementBodyPayoutproperties record {
    # Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 35}
    string payoutproperty?;
};

public type PaymentHolidaySimResponseBodyInner_holidayPeriod record {
    # Indicates the date which needs to be declared as payment holiday and customer is allowed to skip the repayments.
    @constraint:String {maxLength: 11}
    string holidayDate?;
    # Indicates the new schedule amount which will be processed during the payment holiday period
    @constraint:String {maxLength: 18}
    string newPaymentAmount?;
    # Indicates the original payment amount of the interest or account or charge property.
    @constraint:String {maxLength: 18}
    string originalPaymentAmount?;
};

public type QueryHeader record {
    ArrangementHeaderAudit audit?;
    # The record from which the response should be displayed
    @jsondata:Name {value: "page_start"}
    int:Signed32 pageStart?;
    # The total number of records present
    @jsondata:Name {value: "total_size"}
    int:Signed32 totalSize?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @jsondata:Name {value: "page_token"}
    string pageToken?;
    # Status of the API(success/failed)
    string status?;
    # The total number of records per page
    @jsondata:Name {value: "page_size"}
    int:Signed32 pageSize?;
};

public type ConsumerLoanBodyOfficers record {
    # Indicates the extensions
    record {} extensions?;
    # Specify the primary officer responsible for the arrangement
    @constraint:String {maxLength: 4}
    string primaryOfficer?;
};

public type BalanceResponseBodyProperties record {
    BalanceResponseBodyPropertiesBalanceMaintenance balanceMaintenance?;
};

# Represents the Queries record for the operation: updateRepaymentDate
public type UpdateRepaymentDateQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: createRepaymentSimulation
public type CreateRepaymentSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: updateLoanSimulation
public type UpdateLoanSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# PaymentHolidaySimResponse
public type PaymentHolidaySimResponse record {
    QueryHeader header?;
    PaymentHolidaySimResponseBody body?;
};

public type ArrangementHeader record {
    # The status of the transaction
    string transactionStatus?;
    ArrangementHeaderAudit audit?;
    # The Identifier of the aa record created
    string aaaId?;
    # The Identifier of the record created
    string id?;
    # Status of the API(success/failed)
    string status?;
    # The unique identifier/Message Reference of the record created
    string uniqueIdentifier?;
};

public type LoanDecreaseAmountResponseBodyProperties record {
    LoanInterestResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
};

public type LoanPayoffAutoSimulationResponseBody record {
    LoanSimulationResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanPayoffSimulationResponseBodyProperties properties?;
};

public type LoanAccountBodyBusinessDayCentres record {
    # The country or region code to be considered for determining the holidays and used while calculating the schedule dates
    @constraint:String {maxLength: 4}
    string businessDayCentre?;
};

# BNPLLoanResponse
public type BNPLLoanResponse record {
    ArrangementHeader header?;
    BNPLLoanResponseBody body?;
};

public type WriteOffLoansResponseBodyProperties record {
    WriteOffLoansResponseBodyPropertiesBalanceMaintenance balanceMaintenance?;
};

public type RepaymentDateResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    RepaymentDateResponseBodyProperties properties?;
};

# SimulationCapturesResponse
public type SimulationCapturesResponse record {
    ArrangementHeader header?;
    SimulationCapturesResponseBody body?;
};

# LoanCollateralsResponse
public type LoanCollateralsResponse record {
    QueryHeader header?;
    LoanCollateralsResponseBody body?;
};

# Represents the Queries record for the operation: createRepaymentDateChangeSimulation
public type CreateRepaymentDateChangeSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: createAutoSimulations
public type CreateAutoSimulationsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createMortgage
public type CreateMortgageQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type CommercialLoanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance accreporting?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance prefpricing?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

# Represents the Queries record for the operation: createRepaymentDateChangeSimulationSchedules
public type CreateRepaymentDateChangeSimulationSchedulesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type ExternalEventStatusResponseBody ExternalEventStatusResponseBodyInner[];

# LoanArrangementPayoffResponse
public type LoanArrangementPayoffResponse record {
    ArrangementHeader header?;
    LoanArrangementPayoffResponseBody body?;
};

public type BNPLLoanResponseBody record {
    BNPLLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    BNPLLoanResponseBodyProperties properties?;
};

public type ArrangementDetailsResponseBody ArrangementDetailsResponseBodyInner[];

public type WriteOffBillLoansResponseBodyPropertiesBalanceMaintenance record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    WriteOffBillLoansBodyBalanceMaintenance body?;
};

public type BNPLLoanBodyCommitment record {
    # This is the payment amount
    @constraint:String {maxLength: 19}
    string amount?;
    # Indicates the extensions
    record {} extensions?;
    # Flag to define if the limits are to be booked or not at the time of issuing the pre-advice LC. Allowed values: - YES - NO (same as null) - null (default)
    "YES"|"NO" updateLimit?;
    # Indicates maturity date of the contract
    @constraint:String {maxLength: 11}
    string maturityDate?;
    # Indicates the period to which the BID and OFFER rates apply
    @constraint:String {maxLength: 6}
    string term?;
    # Indicates the amount by which the original commitment amount increased or decreased
    @constraint:String {maxLength: 19}
    string changeAmount?;
    # Indicates if commitment is revolving or non revolving in nature
    "NO"|"PAYMENT"|"PREPAYMENT" revolving?;
};

public type ArrangementDetailsResponseBodyInner record {
    # Indicates an unique identifier of an account
    string arrangementId?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    string accountId?;
    # Indicates the date on which the arrangement was created
    string arrangementStartDate?;
    # Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc
    @constraint:String {maxLength: 15}
    string arrangementStatus?;
    # Indicates the original contract date of the arrangement which was migrated from the legacy system
    @constraint:String {maxLength: 11}
    string originalContractDate?;
    # Indicates the extension data
    record {} extensions?;
    # Identifier of the customer
    @constraint:String {maxLength: 17}
    string customerId?;
    # Indicates the customer who is the legal owner of the arrangement and is the responsible customer of the contract with bank
    @constraint:String {maxLength: 35}
    string beneficialOwner?;
    # Indicates the description of the Product
    string productDescription?;
};

public type PaymentHolidayResponseBodyProperties record {
    PaymentHolidayResponseBodyPropertiesPaymentHoliday paymentHoliday?;
};

public type MortgageBodyPrincipalint record {
    # If the charge calculated for this tier is less than the amount defined in this field then minimum amount will be the charge amount for this tier
    @constraint:String {maxLength: 6}
    string tiers?;
    # Indicates the extensions
    record {} extensions?;
    # Interest amount
    LinkedRateLoanBodyInterest[] interest?;
    # Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate
    @constraint:String {maxLength: 30}
    string linkedProperty?;
    # attributes
    MortgageBodyAttributes[] attributes?;
    # Indicates the date from when the instruction or condition is effective
    @constraint:String {maxLength: 30}
    string effectiveFromDate?;
};

# Represents the Headers record for the operation: createLoanDrawdownOfferRenegotiationSchedules
public type CreateLoanDrawdownOfferRenegotiationSchedulesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateRepaymentDateAndSchedules
public type UpdateRepaymentDateAndSchedulesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanInformationResponse
public type LoanInformationResponse record {
    QueryHeader header?;
    LoanInformationResponseBody body?;
};

public type LinkedRateLoanBodyMargins1 record {
    # This is the rate applied over the default interest rate or commission rate to achieve the actual rate
    @constraint:String {maxLength: 12}
    string marginRate?;
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    @constraint:String {maxLength: 15}
    string marginType?;
    # This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB
    @constraint:String {maxLength: 9}
    string marginOperation?;
};

public type EvidenceResponseBodyPropertiesEvidence record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    EvidenceBodyEvidence body?;
};

public type ConsumerLoanResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    ConsumerLoanBodyPartyIds[] partyIds?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Determines the status of events sent to external system from the current system for the given activity
    @constraint:String {maxLength: 35}
    string externalEventStatus?;
    # It is a date on/upon which an account is considered to take effect
    @constraint:String {maxLength: 11}
    string arrangementEffectiveDate?;
};

# Represents the Headers record for the operation: createSimulationCaptures
public type CreateSimulationCapturesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type WriteOffBalanceLoansResponseBodyPropertiesBalanceMaintenance record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    WriteOffBalanceLoansBodyBalanceMaintenance body?;
};

# LoanSettlementResponse
public type LoanSettlementResponse record {
    ArrangementHeader header?;
    LoanSettlementResponseBody body?;
};

public type LoanPayoffDetailsResponseBodyInner_payments record {
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 19}
    string paymentType?;
    # Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest
    @constraint:String {maxLength: 19}
    string paymentAmount?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    http:ClientHttp1Settings http1Settings = {};
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings = {};
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 30;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with Redirection
    http:FollowRedirects followRedirects?;
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache = {};
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with cookies
    http:CookieConfig cookieConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits = {};
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Provides settings related to client socket configuration
    http:ClientSocketConfig socketConfig = {};
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
    # Enables relaxed data binding on the client side. When enabled, `nil` values are treated as optional, 
    # and absent fields are handled as `nilable` types. Enabled by default.
    boolean laxDataBinding = true;
|};

public type RepaymentDateChangeSimulationSchedulesResponseBodyPropertiesSettlement record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    RepaymentDateChangeSimulationSchedulesBodySettlement body?;
};

# Represents the Queries record for the operation: createLoanDrawdownOfferAcceptanceSchedules
public type CreateLoanDrawdownOfferAcceptanceSchedulesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanArrangementPayoffResponseBody record {
    SimulationCapturesResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    record {} properties?;
};

# Represents the Queries record for the operation: updateEvidence
public type UpdateEvidenceQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BNPLLoanResponseBodyPropertiesCommitment record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BNPLLoanBodyCommitment body?;
};

public type OverpaymentDetailsResponseBodyInner record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 30}
    string arrangementId?;
    # Indicates whether the overpayment type is allowed or restricted
    string overpay?;
    # Indicates the remaining overpayment limit available for the period
    string remainingYearToDate?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the base period for a overpayment type. This can be calendar or arrangement
    string periodType?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    string productId?;
    # Denotes the type of overpayment.It can have values either as regular or lumpsum
    string overpayType?;
    # Indicates the value of overpayment limit
    string overpayLimitValue?;
    # Indicates the total amount which will be lent or deposited for the term
    string commitmentAmount?;
    # Indicates the total utilised overpayment limit
    string limitUtilised?;
    # Indicates the base type on which overpay limit is derived .It can have values either as amount, total loan amount or principal loan amount
    string overpayLimitType?;
    # Indicates the utilised overpayment limit within the current rule period
    string utilisedYearToDate?;
};

# Represents the Headers record for the operation: createLoanDrawdownOfferAcceptanceSchedules
public type CreateLoanDrawdownOfferAcceptanceSchedulesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: updateEvidence
public type UpdateEvidenceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type EvidenceResponse1Body EvidenceResponse1BodyInner[];

public type LoanSettlementBodyPayoutpropertyclasses record {
    # Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 30}
    string payoutpropertyclass?;
};

public type PaymentSchedulesProjectionResponseBodyInner record {
    # Total amount
    @constraint:Number {maxValue: 19}
    decimal totalAmount?;
    # Indicates the extension data
    record {} extensions?;
    # Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans
    @constraint:Number {maxValue: 19}
    decimal outstandingAmount?;
    # The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR)
    string scheduleType?;
    # The accrued Interest due or accrued
    @constraint:Number {maxValue: 19}
    decimal interestAmount?;
    # Retrieves the charge amount after redeem
    @constraint:Number {maxValue: 19}
    decimal chargeAmount?;
    # Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231
    string paymentDate?;
    # Total amount of taxes applicable on all commission or charges calculated for the transaction/payment
    @constraint:String {maxLength: 20}
    string taxAmount?;
    # Specifies the price for the first leg of the repo contract in specified currency.  Accepts numeric with decimal values. Allowed values are a maximum of 19 digits of numerics including decimals may be entered
    @constraint:Number {maxValue: 19}
    decimal principalAmount?;
};

public type EvidenceBodyCovenants record {
    # Specifies the evidence requirement of a covenant which defines the document specification to be submitted on a periodic basis
    @constraint:String {maxLength: 35}
    string covenantsType?;
    # Specifies the frequency on which the covenant must be requested. The frequency could be defined as weekly, monthly, yearly, etc. The accepted format is e0Y e0M e0W e0D
    @constraint:String {maxLength: 30}
    string covenantsFrequency?;
    # Contains the number of days the covenant must be requested before the due date
    @constraint:String {maxLength: 35}
    string covenantsNoticeDays?;
    # Specifies the value that is identified to fulfil the metrics
    @constraint:String {maxLength: 35}
    string covenantsEvaluationValue?;
    # Specifies the category on which the evidence requirement of the covenant can be grouped, e.g., FINANCIAL, LEGAL
    @constraint:String {maxLength: 35}
    string covenantsCategory?;
    # Specifies a valid related requirement that fulfils a metrics for the defined covenant
    @constraint:String {maxLength: 35}
    string covenantsMetrics?;
    # Specifies the start date on which the covenant must be requested. The accepted format is YYYYMMDD
    @constraint:String {maxLength: 30}
    string covenantsInitialDate?;
    # Specifies the consequences defined when a covenant is not submitted/met
    @constraint:String {maxLength: 35}
    string covenantsRestriction?;
    # Specifies the operand by which the covenant metrics is measured. The accepted values are Less Than, Greater Than, Equals, Not Equal, Greater Than Or Equal, Lesser Than Or Equal
    @constraint:String {maxLength: 35}
    string covenantsEvaluationOperand?;
};

public type LoanAccountResponseBodyPropertiesAccount record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    LoanAccountBodyAccount body?;
};

public type LoanInterestBodyItems record {
    # Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type
    @constraint:String {maxLength: 35}
    string holidayRestrictItem?;
};

public type LoanBillsResponseBody LoanBillsResponseBodyInner[];

# Represents the Queries record for the operation: createSimulationCaptures
public type CreateSimulationCapturesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanCollateralsResponseBody LoanCollateralsResponseBodyInner[];

# Represents the Headers record for the operation: createLoanDrawdownOfferRenegotiation
public type CreateLoanDrawdownOfferRenegotiationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: getLoanDetails
public type GetLoanDetailsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type SimulationCapturesResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Contains the reason for performing the current activity
    @constraint:String {maxLength: 100}
    string reason?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # The override message is captured  that was generated at the time of commitment of the transaction to the database
    BNPLLoanBodyOverrides[] overrides?;
    # The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created
    @constraint:String {maxLength: 20}
    string masterArrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the runner Reference ID for simulation activity
    @constraint:String {maxLength: 30}
    string simulationRunReference?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc
    @constraint:String {maxLength: 35}
    string roleName?;
    # Identifier of the customer
    BNPLLoanBodyCustomerIds[] customerIds?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # Id of the product property
    BNPLLoanBodyProperties[] properties?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type BillsResponseBodyProperties record {
    BillsResponseBodyPropertiesBalanceMaintenance balanceMaintenance?;
};

public type RepaymentDateChangeSimulationSchedulesBodySettlement record {
    # Indicates the beneficiary the payment should be made to in default
    "Default Beneficiary" defaultBeneficiary?;
    # Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1
    "DD Mandate Ref" ddMandateRef11?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    "Payment Type" paymentType11?;
    # Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    "Payout Settlement" payoutSettlement1?;
    # Contains the transaction type used by the transaction recycler for retrying the debits
    "Payin RC Type" payinRcType1?;
    # Contains the transaction recycling rules which define the set of retry conditions
    "Payin RC Condition" payinRcCondition1?;
    # Contains the account from which funds are to be debited against the payment type
    "Payin Account" payinAccount11?;
    # Contains the percentage of the payment amount used for settlement of the bills due
    "Payin Percentage" payinPercentage11?;
    # Contains the account to which a settlement amount is transferred
    "Payout" payoutAcctSettle?;
    # The account to which a settlement amount is transferred
    "Payout Account" payoutAccount11?;
    # Contains the beneficiary Id used for settlement of the bills due
    "Payin Beneficiary" payinBeneficiary11?;
    # Contains the transaction type used to debit the customer account for settlement of the bills due
    "Payin Activity" payinActivity11?;
    # Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type
    "Default Settlement Account" defaultSettlementAccount?;
    # Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None
    "Payin Account Debit Rule" payinAcDbRule1?;
    # Contains the finite amount of the payment used for settlement of the payables
    "Payout Amount" payoutAmount11?;
    # The beneficiary that payment should be made to
    "Payout Beneficiary" payoutBeneficiary11?;
    # Contains the finite amount of the payment used for settlement of the bills due
    "Payin Amount" payinAmount11?;
    # Contains the transaction type used to credit the customer account for settlement of the payables
    "Payout Activity" payoutActivity11?;
    # Indicates the Transaction Cycler condition to be used for the payout property to allow variation of different retry conditions
    "Payout RC Condition" payoutRcCondition1?;
    # Contains the percentage of the payment amount used for settlement of the payable
    "Payout Percentage" payoutPercentage11?;
    # Contains the account from which funds are to be debited against the payment type
    "Payin" payinAcctSettle?;
    # Contains the payment order product id for which the payment is initiated
    "Payin Product" payinPoProduct11?;
    # If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills
    @constraint:String {maxLength: 3}
    string updatePendingRetry?;
    # Indicates the Transaction Cycler type  reference to be used during handoff to inform the recycler what type of transaction is being handed-off
    "Payout RC Type" payoutRcType1?;
    # Specifies the account at which the interest or payment settlement is to be made
    "Account Settlement" accountSettlement?;
    # Indicates the activity used for payout when payout of funds need to happen automatically
    "Payout Settle Activity" payoutSettleActivity1?;
    # Contains the payout payment order product for which payment is initiated
    "Payout Product" payoutPoProduct11?;
    # Indicates the activity to be used to settle the dues of the current contract
    "Payin Settle Activity" payinSettleActivity1?;
    # Contains the payout payment order product for which payment is initiated
    "Payout Property" payoutProperty11?;
    # Indicates the extensions
    record {} extensions?;
    # Flag to indicate whether Payin Settlement instruction is required or not. Valid input is Yes or No. Default value is Yes
    "Payin Settlement" payinSettlement1?;
    # Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed
    "Property Class" payoutPptyClass11?;
    # Indicates the user exception routine
    "Payout Account Credit Rule" payoutAcCrRule1?;
};

public type BNPLLoanBodySettlement1 record {
    # Indicates the extensions
    record {} extensions?;
    # Details of the concentration account to which the surplus funds available in the sweeping account is paid out to
    BNPLLoanBodyPayout[] payout?;
    # Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type
    @constraint:String {maxLength: 90}
    string defaultSettlementAccount?;
    BNPLLoanBodyAssocSettlement[] assocSettlement?;
    # Indicates settlement conditions associated with the account
    BNPLLoanBodySettlement[] settlement?;
    BNPLLoanBodyFxSettlement[] fxSettlement?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 30}
    string paymentType?;
};

public type ConsumerLoanBodyInterest record {
    # The interest rate is chosen from a selection of values which represent different interest types and rates
    @constraint:String {maxLength: 4}
    string floatingRate?;
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    ConsumerLoanBodyMargins[] margins?;
    # Specifies the initial date from which the interest rate has to be reset.  If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates
    @constraint:String {maxLength: 30}
    string initialResetDate?;
    # Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands
    @constraint:String {maxLength: 3}
    string tierPercent?;
    # The percent defined will be applied on the reference rate before applying margin and other interest adjustments
    @constraint:String {maxLength: 6}
    string usagePercent?;
    # Indicates the reset period of the periodic index defined
    @constraint:String {maxLength: 30}
    string periodicReset?;
    # A minimum interest rate can be applied at each tier
    @constraint:String {maxLength: 13}
    string minimumTierRate?;
    # Specify the period which will be used to fetch the interest rate
    @constraint:String {maxLength: 20}
    string periodicRate?;
    # The maximum rate that can be applied at each tier
    @constraint:String {maxLength: 13}
    string maximumTierRate?;
    # Denotes an index which points to the right period of the securities or holdings
    @constraint:String {maxLength: 4}
    string periodicIndex?;
    # The monetary amount for the tier
    @constraint:String {maxLength: 19}
    string tierAmount?;
    # The interest rate for the tier can be linked to that of another account, YES/NO indicator
    @constraint:String {maxLength: 4}
    string linkedRateIndicator?;
    # Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value
    @constraint:String {maxLength: 19}
    string effectiveRate?;
    # Numeric value for the interest rate entered manually
    @constraint:String {maxLength: 13}
    string fixedRate?;
    # Indicates the method used to calculate the interest rate for period interest setup
    @constraint:String {maxLength: 15}
    string periodicMethod?;
    # A negative interest rate can be applied at each tier. The allowed options are Yes, No, Block margin, Floor Margin
    @constraint:String {maxLength: 12}
    string tierNegativeRate?;
    # Specify the period which will be used to fetch the interest rate
    @constraint:String {maxLength: 15}
    string periodicPeriodType?;
    # Define the period which has to be used to calculate the interest rate
    @constraint:String {maxLength: 15}
    string periodicPeriod?;
    # Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded
    @constraint:String {maxLength: 6}
    string rateTierType?;
};

# Represents the Queries record for the operation: getLoanOverview
public type GetLoanOverviewQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Queries record for the operation: initiateWriteOffBalanceLoans
public type InitiateWriteOffBalanceLoansQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type TakeoverloanResponseBodyPropertiesSchedule record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    TakeoverloanBodySchedule body?;
};

public type ConsumerLoanBodyActivities record {
    # Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,
    @constraint:String {maxLength: 80}
    string onThisActivity?;
    # Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed
    @constraint:String {maxLength: 35}
    string recalculate?;
};

public type ConsumerLoanResponseBodyPropertiesOfficersBody record {
    # Indicates the extensions
    record {} extensions?;
    # Specify the primary officer responsible for the arrangement
    @constraint:String {maxLength: 4}
    string primaryOfficer?;
    ConsumerLoanResponseBodyPropertiesOfficersBodyOfficrers[] officrers?;
};

public type LoanSimulationResponseBody record {
    LoanSimulationResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanSimulationResponseBodyProperties properties?;
};

public type PaymentHolidayBodyClosureNotes record {
    # This field is used to hold the notes for the reason of account closure
    @constraint:String {maxLength: 35}
    string closureNote?;
};

public type LoanBillsResponseBodyInner_properties record {
    # Indicates the  property description to which benefit has been applied
    @constraint:String {maxLength: 35}
    string propertyName?;
    # The accrued Interest due or accrued.
    decimal interestAmount?;
};

public type BillsResponseBodyPropertiesBalanceMaintenance record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BillsBodyBalanceMaintenance body?;
};

public type AutoSimulationsResponseBody record {
    LoanSimulationResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    AutoSimulationsResponseBodyProperties properties?;
};

public type BNPLLoanBodyCustomerIds record {
    # Identifier of the customer
    @constraint:String {maxLength: 10}
    string customerId?;
    # Indicates role of a customer for an arrangement
    @constraint:String {maxLength: 30}
    string customerRole?;
};

# Represents the Headers record for the operation: createRepaymentDateChangeSimulationSchedules
public type CreateRepaymentDateChangeSimulationSchedulesHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createLoanDrawdownOfferRenegotiationSchedules
public type CreateLoanDrawdownOfferRenegotiationSchedulesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LinkedRateLoanBodyAttributes record {
    # The account which is linked for calculating interest that should be applied to this account
    @constraint:String {maxLength: 20}
    string linkedArrangement?;
    # Specifies the special attributes for processing the message
    @constraint:String {maxLength: 30}
    string attributes?;
    # Specifies the special attributes for processing the message
    @constraint:String {maxLength: 30}
    string attribute?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
};

public type BalanceBodyAdjustBalanceTypes record {
    # Indicates the new balance amount for the corresponding balance type while capturing a new balance type or adjusting an existing balance type. This is a signed field. For write off activities, system will default this field to zero
    @constraint:String {maxLength: 19}
    string newBalanceAmount?;
    #  Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc
    @constraint:String {maxLength: 22}
    string adjustBalanceType?;
};

public type LoanPayoffDetailsResponseBodyInner record {
    # Indicates an unique identifier of an account
    string arrangementId?;
    # Indicates the settlement of the loan amount
    LoanPayoffDetailsResponseBodyInner_payoffs[] payoffs?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the initiation of payment for an account
    LoanPayoffDetailsResponseBodyInner_payments[] payments?;
    LoanPayoffDetailsResponseBodyInner_infoPayments[] infoPayments?;
    # Id of the product property
    LoanPayoffDetailsResponseBodyInner_properties[] properties?;
};

public type LinkedRateLoanResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LinkedRateLoanResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: getLoanCollaterals
public type GetLoanCollateralsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getExternalEventStatus
public type GetExternalEventStatusQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Represents the Headers record for the operation: getPaymentHolidaySim
public type GetPaymentHolidaySimHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: getLoanDetails
public type GetLoanDetailsQueries record {
    # Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas
    string balanceTypes?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # End date of the loan
    string dateTo?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Start date of the loan
    string dateFrom?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type LoanSimulationBodyAccount record {
    # Indicates the extensions
    record {} extensions?;
    # Groups the products based on their type, eg, Checking, Savings, CD etc,
    LoanSimulationBodyAccountTypes[] accountTypes?;
    # Display name or short name of the account specified
    LoanSimulationBodyAccountNames[] accountNames?;
};

public type WriteOffLoansResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    WriteOffLoansResponseBodyProperties properties?;
};

public type LoanSimulationBodyAccountTypes record {
    # Groups the products based on their type, eg, Checking, Savings, CD etc,
    @constraint:String {maxLength: 70}
    string accountType?;
};

# Represents the Headers record for the operation: createBNPLLoan
public type CreateBNPLLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ConsumerLoanResponseBodyPropertiesPayoff record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    ConsumerLoanResponseBodyPropertiesPayoffBody body?;
};

# RepaymentSimulationResponse
public type RepaymentSimulationResponse record {
    ArrangementHeader header?;
    RepaymentSimulationResponseBody body?;
};

# Represents the Queries record for the operation: createLoanDrawdownOfferAcceptance
public type CreateLoanDrawdownOfferAcceptanceQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: updateRepaymentDate
public type UpdateRepaymentDateHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type WriteOffBalanceLoansResponseBodyProperties record {
    WriteOffBalanceLoansResponseBodyPropertiesBalanceMaintenance balanceMaintenance?;
};

public type WriteOffBillLoansResponseBodyProperties record {
    WriteOffBillLoansResponseBodyPropertiesBalanceMaintenance balanceMaintenance?;
};

public type LoanSettlementBodyReference1 record {
    # Contains the transaction type used to credit the customer account for settlement of the payables 
    @constraint:String {maxLength: 55}
    string payOutActivity?;
    # The account to which a settlement amount is transferred
    @constraint:String {maxLength: 90}
    string payOutAccount?;
    # The beneficiary that payment should be made to 
    @constraint:String {maxLength: 17}
    string payOutBeneficiary?;
    # Contains the percentage of the payment amount used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payOutPercentage?;
    # Contains the payout payment order product for which payment is initiated
    @constraint:String {maxLength: 35}
    string payOutPoProduct?;
    # Contains the finite amount of the payment used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payOutAmount?;
};

# ArrangementDetailsResponse
public type ArrangementDetailsResponse record {
    QueryHeader header?;
    ArrangementDetailsResponseBody body?;
};

# Represents the Queries record for the operation: createInstallmentLoan
public type CreateInstallmentLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanInterestBodyProperties record {
    # Defines the list of properties which will be used for minimum payment amount calculation
    @constraint:String {maxLength: 35}
    string minimumPaymentProperty?;
};

public type PaymentHolidayBodyPaymentHoliday record {
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the extensions
    record {} extensions?;
    # Indicates the number of payments in sequence for which the payment holiday applies
    @constraint:String {maxLength: 3}
    string numberOfInstallments?;
    # The type of payment obligation generated
    @constraint:String {maxLength: 15}
    string billType?;
    # Indicates the new schedule amount which will be processed during the payment holiday period
    @constraint:String {maxLength: 18}
    string newPaymentAmount?;
    # Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231
    @constraint:String {maxLength: 11}
    string paymentDate?;
    # Refers to view or cancel options
    @constraint:String {maxLength: 30}
    string activityAction?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 30}
    string paymentType?;
    # Indicates the recalculation method to the cashflow event. Possible values are - EIR, CARRY.COST and QUANTITATIVE.TEST.  EIR method -  System will recalculate the EIR(Effective Interest Rate) in case of a cash flow change. CARRY.COST method - System will adjust the carrying amount of the contract, EIR will not be recalculated. QUANTITATIVE.TEST method - System will recalculate the EIR(Effective Interest Rate) only when the cashflow change is substantial
    @constraint:String {maxLength: 35}
    string recalculationMethod?;
};

# RepaymentDateChangeSimulationSchedulesResponse
public type RepaymentDateChangeSimulationSchedulesResponse record {
    ArrangementHeader header?;
    RepaymentDateChangeSimulationSchedulesResponseBody body?;
};

public type TakeoverloanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance drawingfee?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance exchRate?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    TakeoverloanResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyintrfr?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    TakeoverloanResponseBodyPropertiesLimit 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance pricinggrid?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    TakeoverloanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    LoanAccountResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
};

# Represents the Headers record for the operation: createvehicleLoan
public type CreatevehicleLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createvehicleLoan
public type CreatevehicleLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BalanceResponseBodyPropertiesBalanceMaintenance record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BalanceBodyBalanceMaintenance body?;
};

public type LoanAccountBodyReferalCodes record {
    # Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account
    @constraint:String {maxLength: 35}
    string referalCode?;
};

public type LoanInterestBodyPayments record {
    # Specifies the number of coupon or interest payments a year
    @constraint:String {maxLength: 3}
    string numberOfPayments?;
    # Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned
    @constraint:String {maxLength: 30}
    string endDate?;
    # One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount
    @constraint:String {maxLength: 18}
    string adhocPaymentAmount?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 30}
    string startDate?;
};

public type LoanOutstandingBillsResponseBodyInner record {
    # Indicates the extension data
    record {} extensions?;
    # Indicates the total billed amount of a bill
    @constraint:String {maxLength: 19}
    string billed?;
    # The remaining monetary amount on a loan
    @constraint:String {maxLength: 19}
    string outstanding?;
    # The type of payment obligation generated
    string billType?;
    # Indicates the bill reference or Id
    @constraint:String {maxLength: 35}
    string billId?;
    # Indicates the status of a bill(Issued,Due,Ageing,Settled)
    @constraint:String {maxLength: 15}
    string billStatus?;
    # Indicates a date on which a bill has been raised
    string billDate?;
    # Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure
    string status?;
};

public type InstallmentLoanBodyCustomers record {
    # Indicates role of a customer for an arrangement
    @constraint:String {maxLength: 30}
    string customerRole?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    @constraint:String {maxLength: 10}
    string customer?;
};

public type SimulationCapturesBodyPayoff record {
    # This is the payment amount
    SimulationCapturesBodyAmount[] amount?;
    # Indicates the extensions
    record {} extensions?;
    # Percentage of holdings that can be pledged as collateral
    @constraint:String {maxLength: 12}
    string percentage?;
    # Refers to view or cancel options
    @constraint:String {maxLength: 9}
    string action?;
    # Contains the period within which the locked rate needs to be availed
    @constraint:String {maxLength: 3}
    string expiryDays?;
    # Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically
    @constraint:String {maxLength: 3}
    string settleDues?;
};

public type LoanAccountBodyShortTitles record {
    # Contains the short title given to the name of an account or an arrangement
    @constraint:String {maxLength: 70}
    string shortTitle?;
};

# Represents the Headers record for the operation: getEvidence
public type GetEvidenceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # Indicates the pagination header attributes availability. If set to 'true', it fetches all the data
    boolean disablePagination?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type ConsumerLoanResponseBody record {
    ConsumerLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    ConsumerLoanResponseBodyProperties properties?;
};

# Represents the Queries record for the operation: updateRepaymentDateAndSchedules
public type UpdateRepaymentDateAndSchedulesQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: initiateWriteOffBillLoans
public type InitiateWriteOffBillLoansQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanDrawdownOfferResponse1BodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Indicates the extensions
    record {} extensions?;
    # Unique identifier (contract number) of the facility
    @constraint:String {maxLength: 20}
    string facilityId?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Defines the activity to be processed against the Arrangement. The activity may be a user activity or a system generated activity
    @constraint:String {maxLength: 80}
    string activity?;
    # Indicates the date on which the offer is executed
    string offerDate?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    InstallmentLoanBodyCustomers[] customers?;
    # Indicates the date on which the drawdown contract is created
    string drawdownDate?;
};

public type ConsumerLoanBodyPayments record {
    # Specifies the number of coupon or interest payments in a year
    @constraint:String {maxLength: 3}
    string numberPayments?;
    # Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned
    @constraint:String {maxLength: 30}
    string endDate?;
    # System calculated Payment amount
    @constraint:String {maxLength: 18}
    string calcAmount?;
    # Percentage of holdings that can be pledged as collateral
    @constraint:String {maxLength: 12}
    string percentage?;
    # One time payment amount made as part of the repayment activity. For scheduled payments it indicates the actual amount paid instead of the scheduledPaymentAmount
    @constraint:String {maxLength: 18}
    string actualAmount?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 30}
    string startDate?;
};

public type LinkedRateLoanBodyMargins record {
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    @constraint:String {maxLength: 15}
    string margin?;
    # This is the rate applied over the default interest rate or commission rate to achieve the actual rate
    @constraint:String {maxLength: 12}
    string marginRate?;
    # This is the operand which determines if a margin is added or subtracted from the interest rate. Options are ADD or SUB
    @constraint:String {maxLength: 9}
    string marginOperation?;
};

# BillsResponse
public type BillsResponse record {
    ArrangementHeader header?;
    BillsResponseBody body?;
};

public type BNPLLoanResponseBodyPropertiesAccount record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BNPLLoanBodyAccount body?;
};

# LoanSimulationResponse1
public type LoanSimulationResponse1 record {
    ArrangementHeader header?;
    LoanSimulationResponse1Body body?;
};

public type MortgageBodyAttributes record {
    # The account which is linked for calculating interest that should be applied to this account
    @constraint:String {maxLength: 20}
    string linkedArrangement?;
    # Specifies the special attributes for processing the message
    @constraint:String {maxLength: 30}
    string attributes?;
    # The value of the field on which the Alert criteria is based
    @constraint:String {maxLength: 35}
    string value?;
};

# Represents the Queries record for the operation: createBNPLLoan
public type CreateBNPLLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type MortgageResponseBodyPropertiesSchedule record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    MortgageBodySchedule body?;
};

# LoanDrawdownOfferResponse1
public type LoanDrawdownOfferResponse1 record {
    ArrangementHeader header?;
    LoanDrawdownOfferResponse1Body body?;
};

public type ConsumerLoanResponseBodyPropertiesPayoffBodyAmount record {
    # Indicates the monetary amount that is fixed during the associated account's effective period
    @constraint:String {maxLength: 19}
    string fixedAmount?;
};

public type WriteOffBalanceLoansBodyWriteOffs record {
    # Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors
    @constraint:String {maxLength: 15}
    string writeOff?;
    # Indicates that the corresponding balance needs to be written off partially. It should not be greater than the original balance amount
    @constraint:String {maxLength: 19}
    string writeOffAmount?;
};

# Represents the Queries record for the operation: getLoanCollaterals
public type GetLoanCollateralsQueries record {
    # Status not equal to
    string statusNE?;
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure
    string status?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type PaymentHolidaySimResponseBody PaymentHolidaySimResponseBodyInner[];

# LoanDetailsResponse
public type LoanDetailsResponse record {
    QueryHeader header?;
    LoanDetailsResponseBody body?;
};

# Represents the Headers record for the operation: updateLoanConditions
public type UpdateLoanConditionsHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# TakeoverloanResponse
public type TakeoverloanResponse record {
    ArrangementHeader header?;
    TakeoverloanResponseBody body?;
};

# Represents the Queries record for the operation: createChargeOffActivity
public type CreateChargeOffActivityQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoansCustomerResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
};

# Represents the Queries record for the operation: createCreditLine
public type CreateCreditLineQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: createLoanPayoffSimulation
public type CreateLoanPayoffSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: initiateWriteOffLoans
public type InitiateWriteOffLoansQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanOverviewResponseBodyInner_schedules record {
    # Indicates payment schedule type
    string schedulePaymentType?;
    # Denotes the payment schedule method of the loan such as capitalise, pay, due and maintain.
    string schedulePaymentMethod?;
    # Denotes the property of the loans schedule
    string scheduleProperty?;
    # Contains the amount payable in the schedule
    decimal schedulePaymentAmount?;
    # Indicates the frequency associated - Eg. Pay to customer or paid by bank
    string schedulePaymentFrequency?;
};

# OverpaymentDetailsResponse
public type OverpaymentDetailsResponse record {
    QueryHeader header?;
    OverpaymentDetailsResponseBody body?;
};

public type ChargeOffActivityResponseBody record {
    ChargeOffActivityResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    record {} properties?;
};

# Represents the Queries record for the operation: createLinkedRateLoan
public type CreateLinkedRateLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# ArrangementResponse
public type ArrangementResponse record {
    ArrangementHeader header?;
    ArrangementResponseBody body?;
};

public type PaymentHolidayResponseBodyPropertiesPaymentHoliday record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    PaymentHolidayBodyPaymentHoliday body?;
};

public type BNPLLoanBodyProperty record {
    # Contains the finite amount of the payment used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutAmount?;
    # Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 30}
    string payoutPropertyClass?;
    # Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed
    @constraint:String {maxLength: 35}
    string payoutProperty?;
    # Contains the transaction type used to credit the customer account for settlement of the payables 
    @constraint:String {maxLength: 55}
    string payoutActivity?;
    # Contains the payout payment order product for which payment is initiated
    @constraint:String {maxLength: 35}
    string payoutPOProduct?;
    # The account to which a settlement amount is transferred
    @constraint:String {maxLength: 90}
    string payoutAccount?;
    # Contains the percentage of the payment amount used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutPercentage?;
    # The beneficiary that payment should be made to 
    @constraint:String {maxLength: 17}
    string payoutBeneficiary?;
};

public type LoanAccountBodyAccountTitles record {
    # Short title on an account
    @constraint:String {maxLength: 70}
    string accountTitle?;
};

# Represents the Headers record for the operation: createRepaymentSchedule
public type CreateRepaymentScheduleHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createCommercialLoan
public type CreateCommercialLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: createBusinessLoan
public type CreateBusinessLoanQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Headers record for the operation: createLoans
public type CreateLoansHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type BillsBodyBills record {
    # Indicates the bill reference or Id
    @constraint:String {maxLength: 35}
    string billId?;
    # The type of payment obligation generated
    @constraint:String {maxLength: 15}
    string billType?;
    # Indicates the bill amount during the ageing status(Bill which crossed the due date)
    @constraint:String {maxLength: 19}
    string delinquentAmount?;
    # Method chosen to make the payment
    @constraint:String {maxLength: 10}
    string paymentMethod?;
    # Indicates a date on which a bill has been raised
    @constraint:String {maxLength: 11}
    string billDate?;
    # Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231
    @constraint:String {maxLength: 11}
    string paymentDate?;
    # Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest
    @constraint:String {maxLength: 19}
    string paymentAmount?;
    # Id of the product property
    BillsBodyProperties[] properties?;
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 30}
    string paymentType?;
};

# LoanPayoffDetailsResponse
public type LoanPayoffDetailsResponse record {
    QueryHeader header?;
    LoanPayoffDetailsResponseBody body?;
};

public type SimulationCapturesResponseBodyPropertiesPayoff record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    SimulationCapturesBodyPayoff body?;
};

# Represents the Headers record for the operation: createBusinessLoan
public type CreateBusinessLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# LoanOverviewResponse
public type LoanOverviewResponse record {
    QueryHeader header?;
    LoanOverviewResponseBody body?;
};

public type LoansCustomerResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    ConsumerLoanBodyPartyIds[] partyIds?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the extensions
    record {} extensions?;
    # Determines the status of events sent to external system from the current system for the given activity
    @constraint:String {maxLength: 35}
    string externalEventStatus?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

# EvidenceResponse
public type EvidenceResponse record {
    ArrangementHeader header?;
    EvidenceResponseBody body?;
};

public type BusinessLoanResponseBodyArrangementActivity record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant
    @constraint:String {maxLength: 4}
    string lineOfBusiness?;
    # Contains the reason for performing the current activity
    @constraint:String {maxLength: 100}
    string reason?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant
    @constraint:String {maxLength: 30}
    string channel?;
    # The override message is captured  that was generated at the time of commitment of the transaction to the database
    BNPLLoanBodyOverrides[] overrides?;
    # Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant
    @constraint:String {maxLength: 16}
    string branch?;
    # The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created
    @constraint:String {maxLength: 20}
    string masterArrangementId?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates the runner Reference ID for simulation activity
    @constraint:String {maxLength: 30}
    string simulationRunReference?;
    # Indicates the extensions
    record {} extensions?;
    # Contains the transaction amount. This is based on the currency, either local or foreign currency
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal transactionAmount?;
    # Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc
    @constraint:String {maxLength: 35}
    string roleName?;
    # Identifier of the customer
    BNPLLoanBodyCustomerIds[] customerIds?;
    # Identifier of the currency. This is the 3-letter ISO 4217 code of the currency
    @constraint:String {maxLength: 3}
    string currencyId?;
    # Id of the product property
    BNPLLoanBodyProperties[] properties?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type TakeoverloanResponseBodyArrangementActivity record {
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    ConsumerLoanBodyPartyIds[] partyIds?;
    # Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE
    @constraint:String {maxLength: 80}
    string activityId?;
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangmentId?;
    # Indicates the original contract date of the arrangement which was migrated from the legacy system
    @constraint:String {maxLength: 11}
    string originalContractDate?;
    # Indicates the extensions
    record {} extensions?;
    # Unique identifier (contract number) of the facility
    @constraint:String {maxLength: 20}
    string facilityId?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Identifies the currency. E.g. USD, GBP etc
    @constraint:String {maxLength: 3}
    string currency?;
    # Indicates the trade date in yyyymmdd format
    @constraint:String {maxLength: 11}
    string tradeDate?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type BalanceBodyAdjustProperties record {
    # Indicates the interest or account or charge properties for which balances are to be captured or adjusted
    @constraint:String {maxLength: 15}
    string adjustProperty?;
    #  Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc
    BalanceBodyAdjustBalanceTypes[] adjustBalanceTypes?;
};

# InstallmentLoanResponse
public type InstallmentLoanResponse record {
    ArrangementHeader header?;
    InstallmentLoanResponseBody body?;
};

# Represents the Queries record for the operation: getLoanPayoffDetails
public type GetLoanPayoffDetailsQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# Provides API key configurations needed when communicating with a remote HTTP endpoint.
public type ApiKeysConfig record {|
    string apikey;
|};

public type LoanOutstandingBillsResponseBody LoanOutstandingBillsResponseBodyInner[];

public type LoansCustomerResponseBody record {
    LoansCustomerResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoansCustomerResponseBodyProperties properties?;
};

public type WriteOffBillLoansResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    WriteOffBillLoansResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: updateLoanDecreaseAmount
public type UpdateLoanDecreaseAmountHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createLoanPayoffSimulation
public type CreateLoanPayoffSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Headers record for the operation: createLoanDrawdownOffer
public type CreateLoanDrawdownOfferHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type InstallmentLoanBodyCommitment record {
    # This is the payment amount
    @constraint:Number {minValue: 0, maxValue: 19}
    decimal amount?;
    # Indicates the extensions
    record {} extensions?;
    # Indicates the period to which the BID and OFFER rates apply
    @constraint:String {maxLength: 6}
    string term?;
    # Specifies if commitment can be utilized beyond the available amount. Allowed value is 'Allow Overdraw', which indicates the commitment can be utilized beyond available amount
    @constraint:String {maxLength: 20}
    string commitmentUtilisation?;
};

public type LoanAccountResponseBodyProperties record {
    LoanAccountResponseBodyPropertiesAccount account?;
};

public type TakeoverloanBodyPayout record {
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    TakeoverloanBodyReference1[] reference?;
    # Contains the transaction type used for settlement of the payables
    @constraint:String {maxLength: 55}
    string payOutSettlementActivity?;
    # Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process
    @constraint:String {maxLength: 35}
    string payOutRule?;
    # Id of the product property
    TakeoverloanBodyProperty[] property?;
    # Condition that is used to build a product
    TakeoverloanBodyPropertyClass[] propertyClass?;
    # Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payoutSettlement?;
};

public type BusinessLoanResponseBody record {
    BusinessLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    BNPLLoanResponseBodyProperties properties?;
};

public type BillsBodyProperties record {
    # Indicates the original amount of a given property for a payment type
    @constraint:String {maxLength: 18}
    string originalPropertyAmount?;
    # Id of the product property
    @constraint:String {maxLength: 35}
    string property?;
    # Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised
    @constraint:String {maxLength: 19}
    string newAmortizationAmount?;
    # Indicates the amortisation end date for an amortisation type of charge
    @constraint:String {maxLength: 11}
    string amortEndDate?;
    # Indicates the oustanding amount of interest or account or charge property after bill adjustment. For write off activities, system will default zero amount in this field
    @constraint:String {maxLength: 19}
    string newPropertyAmount?;
};

public type RepaymentDateChangeSimulationSchedulesResponseBodyProperties record {
    RepaymentSimulationResponseBodyPropertiesSchedule schedule?;
    RepaymentDateChangeSimulationSchedulesResponseBodyPropertiesSettlement settlement?;
};

# BusinessLoanResponse
public type BusinessLoanResponse record {
    ArrangementHeader header?;
    BusinessLoanResponseBody body?;
};

# Represents the Queries record for the operation: createLoanArrangementPayoff
public type CreateLoanArrangementPayoffQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanAccountResponseBody record {
    LoanConditionsResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanAccountResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: updateLoanSettlement
public type UpdateLoanSettlementHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LinkedRateLoanBodyAgentRoles record {
    # The role of the 3rd party, select from standard list
    @constraint:String {maxLength: 30}
    string agentRole?;
};

# Represents the Headers record for the operation: createLoanSimulation
public type CreateLoanSimulationHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# PaymentHolidayResponse
public type PaymentHolidayResponse record {
    ArrangementHeader header?;
    PaymentHolidayResponseBody body?;
};

# MortgageResponse
public type MortgageResponse record {
    ArrangementHeader header?;
    MortgageResponseBody body?;
};

public type LoanDrawdownOfferRenegotiationResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    LoanDrawdownOfferResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance balanceMaintenance?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type LoanTopupAmountResponseBodyProperties record {
    LoanInterestResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
};

# AutoSimulationsResponse
public type AutoSimulationsResponse record {
    ArrangementHeader header?;
    AutoSimulationsResponseBody body?;
};

public type EvidenceBodyEvidence record {
    # Identifies the agreement with the customer
    EvidenceBodyCovenants[] covenants?;
    # Indicates the extensions
    record {} extensions?;
    EvidenceBodyConditions[] conditions?;
};

public type ConsumerLoanBodyAccount record {
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    @constraint:String {maxLength: 35}
    string accountId?;
    # Indicates the extensions
    record {} extensions?;
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    BNPLLoanBodyAlternateIds[] alternateIds?;
    # Id of the portfolio or security account
    @constraint:String {maxLength: 35}
    string portfolioId?;
    # Display name or short name of the account specified
    @constraint:String {maxLength: 70}
    string accountName?;
    # Groups the products based on their type, eg, Checking, Savings, CD etc,
    @constraint:String {maxLength: 70}
    string accountType?;
    # The reference which is provided to the beneficiary/ creditor by the originator of payment
    @constraint:String {maxLength: 16}
    string customerReference?;
    # The start or end period defined in MMDD format to indicate the period when charge rules has to be applied
    @constraint:String {maxLength: 6}
    string anniversary?;
};

# Represents the Headers record for the operation: updateLoanAccount
public type UpdateLoanAccountHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: createLoanDrawdownOffer
public type CreateLoanDrawdownOfferQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanDisbursementResponseBody record {
    ChargeOffActivityResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    record {} properties?;
};

public type TakeoverloanResponseBody record {
    TakeoverloanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    TakeoverloanResponseBodyProperties properties?;
};

public type BNPLLoanResponseBodyActivities record {
    @jsondata:Name {value: "{activityName}"}
    BNPLLoanResponseBodyActivitiesactivityName activityName?;
};

public type LoanDrawdownOfferResponseBody record {
    LoanDrawdownOfferResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanDrawdownOfferResponseBodyProperties properties?;
};

public type LoanAccountBodyAccountTitles2 record {
    # Title line 2 that will appear in notice and statements
    @constraint:String {maxLength: 70}
    string accountTitle2?;
};

public type LoanSettlementBodySettlement record {
    # Indicates the extensions
    record {} extensions?;
    # Details of the concentration account to which the surplus funds available in the sweeping account is paid out to
    LoanSettlementBodyPayout[] payout?;
    LoanSettlementBodyRepayment[] repayment?;
};

# LoanInterestResponse
public type LoanInterestResponse record {
    ArrangementHeader header?;
    LoanInterestResponseBody body?;
};

public type LinkedRateLoanBodyActivites record {
    # Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,
    @constraint:String {maxLength: 80}
    string onActivity?;
    # Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed
    @constraint:String {maxLength: 35}
    string recalculate?;
};

# LoanPayoffSimulationResponse
public type LoanPayoffSimulationResponse record {
    ArrangementHeader header?;
    LoanPayoffSimulationResponseBody body?;
};

# Represents the Queries record for the operation: updateLoanTopupAmount
public type UpdateLoanTopupAmountQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: getEvidence
public type GetEvidenceQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

public type FundsTransferResponseBody record {
    # Date on which the amount will be debited for settlement
    string debitValueDate?;
    # Currency of the debit account. For example: USD, EUR etc
    @constraint:String {maxLength: 3, minLength: 1}
    string debitCurrency?;
    # Specifies the credit currency. For example: USD, EUR etc
    @constraint:String {maxLength: 3}
    string creditCurrencyId?;
    # Reference quoted by the credit account for a payment
    string creditValueDate?;
    # Indicates the debit account number of the payment or transaction
    @constraint:String {maxLength: 36, minLength: 1}
    string debitAccountId?;
    # Amount to be debited in a payment transaction
    @constraint:Number {minValue: 1, maxValue: 18}
    decimal debitAmount?;
    # Indicates the commission types which are applicable for the transaction
    @constraint:String {maxLength: 11}
    string commissionType?;
    # Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc
    @constraint:String {maxLength: 4, minLength: 1}
    string transactionType?;
    # Indicates the extensions
    record {} extensions?;
    # Credit account identifier of the payment or transaction
    @constraint:String {maxLength: 36, minLength: 1}
    string creditAccountId?;
    # These field control the allocation of Periodic commission where the field COMM.CODE is the trigger for periodic commission and the field CSN.CODE is a system maintained field and hold the commission amount relating to the period band
    @constraint:String {maxLength: 20}
    string commissionCode?;
    # Amount to be credited in a payment transaction
    @constraint:Number {minValue: 0, maxValue: 18}
    decimal creditAmount?;
    # Indicates the payment details for the beneficiary to apply the payment
    @constraint:String {maxLength: 35}
    string paymentDetails?;
    # Amount of commission charged for the payment created with respect to the commission type used
    @constraint:Number {minValue: 0, maxValue: 22}
    decimal commissionAmount?;
};

public type ChangeProductResponseBody record {
    LoanConditionsResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    ChangeProductResponseBodyProperties properties?;
};

public type BNPLLoanBodyAssocSettlement record {
    # Contains the transaction type used by the transaction recycler for retrying the debits
    @constraint:String {maxLength: 35}
    string payinRCType?;
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    BNPLLoanBodyReference1[] reference?;
    # Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payinSettlement?;
    # Contains the transaction type used for settlement of the bills due
    @constraint:String {maxLength: 55}
    string payinSettlementActivity?;
    # Contains the transaction recycling rules which define the set of retry conditions
    @constraint:String {maxLength: 35}
    string payinRCCondition?;
    # Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None
    @constraint:String {maxLength: 35}
    string payinRule?;
};

public type ConsumerLoanResponseBodyPropertiesArrangementRulesBody record {
    # Indicates the extensions
    record {} extensions?;
    # A rule is assigned to a product and the rule determines whether a customer can buy that product or hold it after changes in circumstance
    ConsumerLoanResponseBodyPropertiesArrangementRulesBodyRules[] rules?;
};

public type TakeoverloanResponseBodyPropertiesSettlement record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    TakeoverloanBodySettlement body?;
};

public type BNPLLoanBodyCustomers record {
    # Tax liability percentage of the customer
    @constraint:String {maxLength: 12}
    string taxLiabilityPercentage?;
    # Indicates percentage of limit allocated to the customer out of overall limit
    @constraint:String {maxLength: 12}
    string limitAllocactionPercentage?;
    # Indicates GL allocation percentage of the customer
    @jsondata:Name {value: "GLAllocactionPercentage"}
    string gLAllocactionPercentage?;
    # Indicates role of a customer for an arrangement
    @constraint:String {maxLength: 30}
    string customerRole?;
    # Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed
    @constraint:String {maxLength: 10}
    string customer?;
};

# PaymentSchedulesProjectionResponse
public type PaymentSchedulesProjectionResponse record {
    QueryHeader header?;
    PaymentSchedulesProjectionResponseBody body?;
};

# Represents the Headers record for the operation: updateChangeProduct
public type UpdateChangeProductHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type RepaymentDateChangeSimulationResponseBody record {
    SimulationCapturesResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    RepaymentDateChangeSimulationResponseBodyProperties properties?;
};

public type EvidenceResponse1BodyInner record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 30}
    string arrangementId?;
    # Identifies the agreement with the customer
    EvidenceResponse1BodyInner_covenants[] covenants?;
    # Indicates the extension data
    record {} extensions?;
    EvidenceResponse1BodyInner_conditions[] conditions?;
};

# LoanSimulationResponse
public type LoanSimulationResponse record {
    ArrangementHeader header?;
    LoanSimulationResponseBody body?;
};

# Represents the Queries record for the operation: createLoanPayoffAutoSimulation
public type CreateLoanPayoffAutoSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BNPLLoanResponseBodyPropertiesCustomer record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    BNPLLoanBodyCustomer body?;
};

public type WriteOffLoansBodyBills record {
    # Contains the narration which is specific to the bill adjustment
    @constraint:String {maxLength: 35}
    string billAdjustmentNarrative?;
    # Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency
    WriteOffLoansBodyAdjustAmortAmounts[] adjustAmortAmounts?;
    # Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off
    @constraint:String {maxLength: 15}
    string writeOffBill?;
};

public type InstallmentLoanResponseBody record {
    InstallmentLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    InstallmentLoanResponseBodyProperties properties?;
};

public type LinkedRateLoanBodyInterest record {
    # The monetary amount for the tier
    @constraint:String {maxLength: 19}
    string upTo?;
    # Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands
    @constraint:String {maxLength: 3}
    string orPercent?;
    # Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate Allowed values: null (default): multiple margins may be defined SINGLE: only a single margin is allowed
    LinkedRateLoanBodyMargins[] margins?;
    # Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value
    @constraint:String {maxLength: 19}
    string effectiveRate?;
    # A negative interest rate can be applied at each tier, select Yes, No, Block margin
    @constraint:String {maxLength: 12}
    string negativeRate?;
    # Numeric value for the interest rate entered manually
    @constraint:String {maxLength: 13}
    string fixed?;
    # The maximum rate that can be applied at each tier
    @constraint:String {maxLength: 13}
    string maxRate?;
    # A minimum interest rate can be applied at each tier
    @constraint:String {maxLength: 13}
    string minMaxRate?;
    # The interest rate for the tier can be linked to that of another account, YES/NO indicator
    @constraint:String {maxLength: 4}
    string spread?;
};

public type EvidenceResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    EvidenceResponseBodyProperties properties?;
};

public type MortgageResponseBodyPropertiesPrincipalint record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    MortgageBodyPrincipalint body?;
};

public type InstallmentLoanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance overdue?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance activityMessaging?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance closure?;
    BNPLLoanResponseBodyPropertiesInheritance reporting?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance poCashback?;
    BNPLLoanResponseBodyPropertiesInheritance payMerchant?;
    BNPLLoanResponseBodyPropertiesInheritance activityRestriction?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    InstallmentLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance chargeoff?;
    BNPLLoanResponseBodyPropertiesInheritance changeProduct?;
    BNPLLoanResponseBodyPropertiesInheritance cashback?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    ConsumerLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

public type BNPLLoanBodyAccount record {
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    @constraint:String {maxLength: 35}
    string accountId?;
    # Indicates the extensions
    record {} extensions?;
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    BNPLLoanBodyAlternateIds[] alternateIds?;
    # Id of the portfolio or security account
    @constraint:String {maxLength: 35}
    string portfolioId?;
    # Display name or short name of the account specified
    @constraint:String {maxLength: 70}
    string accountName?;
    # Groups the products based on their type, eg, Checking, Savings, CD etc,
    @constraint:String {maxLength: 70}
    string accountType?;
    # Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest
    BNPLLoanBodyAprTypes[] aprTypes?;
    # The start or end period defined in MMDD format to indicate the period when charge rules has to be applied
    @constraint:String {maxLength: 6}
    string anniversary?;
};

public type LinkedRateLoanBodyPartyRoles record {
    # Contains the identifier used for the role played by the party or customer in the contract or account
    @constraint:String {maxLength: 30}
    string partyRole?;
};

public type LoanDetailsResponseBodyInner_interests record {
    # Identifies the bid rate of the related currency for the defined time period
    string interestRate?;
    # Indicates the interest property name
    string interestProperty?;
    # Contains the property name of loan interest such as penalty Interest and principal interest.
    string interestPropertyName?;
    # Contains the frequency type of compound in loan. For example, annually or monthly.
    string compoundType?;
    # Indicates whether the rate is fixed or floating rate.
    string rateType?;
    # Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value
    string effectiveRate?;
    # Type of the tier rate. Allowed values: - BAND: rates apply within each band - LEVEL: a common rate applies, determined by the highest level
    string tierType?;
    # Type of balance (e.g. current balance, credit interest accrued, deferred commission, etc.) as defined in the institution's accounting schemas.
    string balanceTypes?;
    # Amount of the balance
    decimal balanceAmount?;
    # Interest accrued for the specified period
    decimal dividentPaidYtd?;
    # Deprecated - Interest accrued for the specified period
    decimal lastPaidDivident?;
    # Indicates the end date of the interest period
    string periodEnding?;
};

public type BNPLLoanBodyReference record {
    # Contains the percentage of the payment amount used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinPercentage?;
    # Contains the finite amount of the payment used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutAmount?;
    # Contains the account from which funds are to be debited against the payment type
    @constraint:String {maxLength: 90}
    string payinAccount?;
    # Contains the finite amount of the payment used for settlement of the bills due
    @constraint:String {maxLength: 35}
    string payinAmount?;
    # The account to which a settlement amount is transferred
    @constraint:String {maxLength: 90}
    string payoutAccount?;
    # Contains the percentage of the payment amount used for settlement of the payables
    @constraint:String {maxLength: 35}
    string payoutPercentage?;
    # Contains the beneficiary Id used for settlement of the bills due
    @constraint:String {maxLength: 17}
    string payinBeneficiary?;
    # The beneficiary that payment should be made to 
    @constraint:String {maxLength: 17}
    string payoutBeneficiary?;
    # Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1
    @constraint:String {maxLength: 25}
    string ddMandateReference?;
    # Contains the payment order product Id for which the payment is initiated
    @constraint:String {maxLength: 35}
    string payinPoProduct?;
    # Contains the payout payment order product for which payment is initiated
    @constraint:String {maxLength: 35}
    string payoutPoProduct?;
};

public type PaymentHolidaySimResponseBodyInner record {
    # Indicates an unique identifier of an account
    @constraint:String {maxLength: 20}
    string arrangementId?;
    # Indicates the extension data
    record {} extensions?;
    # Indicates the reference id for simulation activity
    @constraint:String {maxLength: 17}
    string simulationReference?;
    # Contains the details of payment holiday. It includes payment type, bill type, start date and holiday period, etc
    PaymentHolidaySimResponseBodyInner_paymentHoliday[] paymentHoliday?;
};

public type MortgageResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance pcdefer?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    MortgageResponseBodyPropertiesPrincipalint principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    BNPLLoanResponseBodyPropertiesInheritance settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    MortgageResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance periodiccharge?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

# ExternalEventStatusResponse
public type ExternalEventStatusResponse record {
    QueryHeader header?;
    ExternalEventStatusResponseBody body?;
};

# Represents the Queries record for the operation: updateChangeProduct
public type UpdateChangeProductQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanDrawdownOfferBodyPaymentTypes record {
    # Indicates if the payment is Customer (C) type or Bank (B) type
    @constraint:String {maxLength: 30}
    string paymentType?;
};

# Represents the Queries record for the operation: updateLoanAccount
public type UpdateLoanAccountQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanAccountBodyPostingRestrictions record {
    # This indicates the  date  on which the offer or privilege terminates for the event
    @constraint:String {maxLength: 11}
    string expiryDate?;
    # Identifies any restrictions for posting entries that are to be imposed on the Account
    @constraint:String {maxLength: 4}
    string postingRestriction?;
    # Reason for unblocking the restriction set on an account
    @constraint:String {maxLength: 100}
    string unrestrictionText?;
    # Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. 
    @constraint:String {maxLength: 35}
    string restrictionReason?;
    # Free text information to capture the reason for restriction applied on an account
    @constraint:String {maxLength: 100}
    string restrictionText?;
    # Contains the date on which the transaction or payment gets initiated
    @constraint:String {maxLength: 11}
    string startDate?;
    # Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES
    @constraint:String {maxLength: 35}
    string unrestrictionReason?;
};

public type LoanConditionsResponseBody record {
    LoanConditionsResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    LoanConditionsResponseBodyProperties properties?;
};

# Represents the Headers record for the operation: createLinkedRateLoan
public type CreateLinkedRateLoanHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type TakeoverloanBodySettlement record {
    # Indicates the extensions
    record {} extensions?;
    # Details of the concentration account to which the surplus funds available in the sweeping account is paid out to
    TakeoverloanBodyPayout[] payout?;
    # Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type
    @constraint:String {maxLength: 90}
    string defaultSettlementAccount?;
    TakeoverloanBodyRepayment[] repayment?;
};

# Represents the Headers record for the operation: createCreditLine
public type CreateCreditLineHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanConditionsResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    BNPLLoanResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance balanceMaintenance?;
    ConsumerLoanResponseBodyPropertiesPrincipalint offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    ConsumerLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
};

public type LoanDrawdownOfferAcceptanceResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance insurance?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance pcdefer?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance rewardsPoints?;
    BNPLLoanResponseBodyPropertiesInheritance escrow?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance subparticipant?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance pricingRules?;
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    ConsumerLoanResponseBodyPropertiesPrincipalint principalint?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance solicitorfee?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    ConsumerLoanResponseBodyPropertiesPrincipalint penalinterest?;
    BNPLLoanResponseBodyPropertiesInheritance redemptionfee?;
    LoanDrawdownOfferResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance mortginsurance?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance offsetint?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    ConsumerLoanResponseBodyPropertiesSchedule schedule?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance prepayfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesInheritance account?;
    BNPLLoanResponseBodyPropertiesInheritance periodiccharge?;
    BNPLLoanResponseBodyPropertiesInheritance customer?;
};

# Represents the Headers record for the operation: createLoanDrawdownOfferAcceptance
public type CreateLoanDrawdownOfferAcceptanceHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LinkedRateLoanBodyPartyIds record {
    # Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field
    @constraint:String {maxLength: 10}
    string partyId?;
};

public type InstallmentLoanResponseBodyPropertiesCommitment record {
    BNPLLoanResponseBodyPropertiesAccountHeader header?;
    InstallmentLoanBodyCommitment body?;
};

# Represents the Queries record for the operation: createLoans
public type CreateLoansQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type LoanConditionsResponseBodyArrangementActivity record {
    # Indicates the extensions
    record {} extensions?;
    # Contains the unique identifier of the product, e.g. the product id of the arrangement account
    @constraint:String {maxLength: 30}
    string productId?;
    # Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format
    string effectiveDate?;
};

public type WriteOffBalanceLoansBodyAdjustProperties record {
    # Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors
    WriteOffBalanceLoansBodyWriteOffs[] writeOffs?;
};

public type BNPLLoanBodyFxSettlement record {
    # Contains the contra settlement accounts used for posting the foreign exchange offset entries
    @constraint:String {maxLength: 35}
    string fxSettlementAccount?;
    # Contains the currency for which foreign exchange contra settlement account needs to be maintained
    @constraint:String {maxLength: 3}
    string fxSettlementCurrency?;
};

public type BillsResponseBody record {
    LinkedRateLoanResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    BillsResponseBodyProperties properties?;
};

public type ConsumerLoanBodyProperty record {
    # Defines the frequency date when a payment  has to be made due. When not mentioned, this will be same as the paymentFrequency
    @constraint:String {maxLength: 38}
    string dueFrequency?;
    # The identifier of the product condition
    @constraint:String {maxLength: 30}
    string propertyId?;
};

public type ArrangementResponseBody record {
    ArrangementResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    record {} properties?;
};

# Represents the Headers record for the operation: createLoanArrangementPayoff
public type CreateLoanArrangementPayoffHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

public type LoanSettlementBodyPayout record {
    # Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested
    LoanSettlementBodyReference1[] reference?;
    # Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed
    LoanSettlementBodyPayoutpropertyclasses[] payoutpropertyclasses?;
    # Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes
    @constraint:String {maxLength: 3}
    string payOutSettlement?;
    # Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed
    LoanSettlementBodyPayoutproperties[] payoutproperties?;
};

# LoanAccountResponse
public type LoanAccountResponse record {
    ArrangementHeader header?;
    LoanAccountResponseBody body?;
};

# EvidenceResponse1
public type EvidenceResponse1 record {
    QueryHeader header?;
    EvidenceResponse1Body body?;
};

public type LoanInformationResponseBody LoanInformationResponseBodyInner[];

public type LoanAccountBodyAccount record {
    # An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment
    LoanAccountBodyAlternateIds[] alternateIds?;
    # Identifier of the account in source system, eg, a origination system
    @constraint:String {maxLength: 35}
    string originationReference?;
    # Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date
    @constraint:String {maxLength: 10}
    string baseDateType?;
    # Identifies any restrictions for posting entries that are to be imposed on the Account
    LoanAccountBodyPostingRestrictions[] postingRestrictions?;
    # Indicates the accounting company of the account record
    @constraint:String {maxLength: 11}
    string accountingCompany?;
    # Indicates the number of months without customer activity before an account is declared as inactive
    @constraint:String {maxLength: 3}
    string inactiveMonths?;
    # Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule
    @constraint:String {maxLength: 15}
    string dateAdjustment?;
    # Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account
    LoanAccountBodyReferalCodes[] referalCodes?;
    # Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN
    @constraint:String {maxLength: 35}
    string accountId?;
    # Indicates the extensions
    record {} extensions?;
    # Id of the portfolio or security account
    @constraint:String {maxLength: 35}
    string portfolioId?;
    # Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)
    @constraint:String {maxLength: 10}
    string baseDateKey?;
    # Title line 2 that will appear in notice and statements
    LoanAccountBodyAccountTitles2[] accountTitles2?;
    # The reference which is provided to the beneficiary/ creditor by the originator of payment
    @constraint:String {maxLength: 16}
    string customerReference?;
    # Short title on an account
    LoanAccountBodyAccountTitles[] accountTitles?;
    # The country or region code to be considered for determining the holidays and used while calculating the schedule dates
    LoanAccountBodyBusinessDayCentres[] businessDayCentres?;
    # Shortcut code for referring an Entity/Company/Branch
    @constraint:String {maxLength: 10}
    string mnemonic?;
    # Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest
    BNPLLoanBodyAprTypes[] aprTypes?;
    # Contains the short title given to the name of an account or an arrangement
    LoanAccountBodyShortTitles[] shortTitles?;
    # Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR
    @constraint:String {maxLength: 18}
    string dateConvention?;
    # Indicates the account or contract product name. For example for an account this maybe current, savings etc
    @constraint:String {maxLength: 5}
    string category?;
    # The start or end period defined in MMDD format to indicate the period when charge rules has to be applied
    @constraint:String {maxLength: 6}
    string anniversary?;
};

public type PaymentHolidayResponseBody record {
    PaymentHolidayResponseBodyArrangementActivity arrangementActivity?;
    BNPLLoanResponseBodyActivities activities?;
    PaymentHolidayResponseBodyProperties properties?;
};

# Represents the Queries record for the operation: updateBills
public type UpdateBillsQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

public type BNPLLoanResponseBodyProperties record {
    BNPLLoanResponseBodyPropertiesInheritance maintenancefee?;
    BNPLLoanResponseBodyPropertiesInheritance principalint?;
    BNPLLoanResponseBodyPropertiesInheritance penaltyint?;
    BNPLLoanResponseBodyPropertiesInheritance evidence?;
    BNPLLoanResponseBodyPropertiesInheritance bonus?;
    BNPLLoanResponseBodyPropertiesInheritance arrangementRules?;
    BNPLLoanResponseBodyPropertiesInheritance inheritance?;
    BNPLLoanResponseBodyPropertiesInheritance xisPoolid?;
    BNPLLoanResponseBodyPropertiesInheritance participant?;
    BNPLLoanResponseBodyPropertiesSettlement settlement?;
    BNPLLoanResponseBodyPropertiesInheritance activityCharges?;
    BNPLLoanResponseBodyPropertiesInheritance payofffee?;
    BNPLLoanResponseBodyPropertiesInheritance exchangeRate?;
    BNPLLoanResponseBodyPropertiesInheritance accreporting?;
    BNPLLoanResponseBodyPropertiesInheritance dormancy?;
    BNPLLoanResponseBodyPropertiesInheritance statement?;
    BNPLLoanResponseBodyPropertiesInheritance 'limit?;
    BNPLLoanResponseBodyPropertiesInheritance xisFinance?;
    BNPLLoanResponseBodyPropertiesInheritance agentCommission?;
    BNPLLoanResponseBodyPropertiesInheritance periodicCharges?;
    BNPLLoanResponseBodyPropertiesInheritance officers?;
    BNPLLoanResponseBodyPropertiesInheritance newarrfee?;
    BNPLLoanResponseBodyPropertiesInheritance prindecreasefee?;
    BNPLLoanResponseBodyPropertiesInheritance xumaumiIndicator?;
    BNPLLoanResponseBodyPropertiesInheritance xrateSetup?;
    BNPLLoanResponseBodyPropertiesInheritance restructureRules?;
    BNPLLoanResponseBodyPropertiesInheritance ageingfee?;
    BNPLLoanResponseBodyPropertiesInheritance renewal?;
    BNPLLoanResponseBodyPropertiesCommitment commitment?;
    BNPLLoanResponseBodyPropertiesInheritance payoff?;
    BNPLLoanResponseBodyPropertiesInheritance xauLoanProductControls?;
    BNPLLoanResponseBodyPropertiesInheritance tax?;
    BNPLLoanResponseBodyPropertiesInheritance messaging?;
    BNPLLoanResponseBodyPropertiesInheritance alerts?;
    BNPLLoanResponseBodyPropertiesInheritance schedule?;
    BNPLLoanResponseBodyPropertiesInheritance prefpricing?;
    BNPLLoanResponseBodyPropertiesInheritance splitsMerges?;
    BNPLLoanResponseBodyPropertiesInheritance pricingGrid?;
    BNPLLoanResponseBodyPropertiesInheritance xtxlimit?;
    BNPLLoanResponseBodyPropertiesInheritance xisDrawing?;
    BNPLLoanResponseBodyPropertiesInheritance constraint?;
    BNPLLoanResponseBodyPropertiesInheritance disbursementfee?;
    BNPLLoanResponseBodyPropertiesInheritance facility?;
    BNPLLoanResponseBodyPropertiesAccount account?;
    BNPLLoanResponseBodyPropertiesCustomer customer?;
};

# Represents the Queries record for the operation: getPaymentHolidaySim
public type GetPaymentHolidaySimQueries record {
    # The record from which the response should be displayed
    @http:Query {name: "page_start"}
    int:Signed32 pageStart?;
    # Unique id expected to get as part of response from Transact on every enquiry request
    @http:Query {name: "page_token"}
    string pageToken?;
    # The total number of records per page
    @http:Query {name: "page_size"}
    int:Signed32 pageSize?;
};

# LoanBillsResponse
public type LoanBillsResponse record {
    QueryHeader header?;
    LoanBillsResponseBody body?;
};

# Represents the Headers record for the operation: simulatePaymentHoliday
public type SimulatePaymentHolidayHeaders record {
    # Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001
    string companyId?;
    # Username and password to authenticate the API against core-banking
    string credentials?;
    # Name of the (digital) channel registered by the Customer
    string channelName?;
    # User who initiated the transaction
    string userRole?;
    # Identifies the device type
    string deviceId?;
};

# Represents the Queries record for the operation: updateLoanSettlement
public type UpdateLoanSettlementQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};

# Represents the Queries record for the operation: createLoanSimulation
public type CreateLoanSimulationQueries record {
    # The identifier to indicate if it is set to only validate or not
    @http:Query {name: "validate_only"}
    boolean validateOnly?;
};
